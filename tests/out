Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
  6.14      0.14     0.14  2737323     0.00     0.00  std::function<void ()>::swap(std::function<void ()>&)
  5.92      0.28     0.14  8211903     0.00     0.00  std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&))
  5.70      0.41     0.13  8211877     0.00     0.00  std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&)
  5.26      0.53     0.12  2518569     0.00     0.00  std::_Function_base::_Function_base()
  4.17      0.62     0.10  2737319     0.00     0.00  void std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&))
  3.95      0.71     0.09  8212005     0.00     0.00  std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
  3.95      0.80     0.09  2737409     0.00     0.00  void std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
  3.95      0.89     0.09   297925     0.00     0.00  void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >)
  3.95      0.98     0.09  2737234     0.00     0.00  void std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&)
  2.63      1.04     0.06  1464174     0.00     0.00  priorited_function::~priorited_function()
  2.63      1.10     0.06   777981     0.00     0.00  std::function<void ()>::operator=(std::function<void ()>&&)
  2.19      1.15     0.05  2530395     0.00     0.00  std::function<void ()>::~function()
  1.97      1.20     0.05  1671533     0.00     0.00  std::remove_reference<priorited_function&>::type&& std::move<priorited_function&>(priorited_function&)
  1.97      1.24     0.05   637785     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function>(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function&)
  1.75      1.28     0.04  2518267     0.00     0.00  std::_Maybe_unary_or_binary_function<void>::_Maybe_unary_or_binary_function()
  1.75      1.32     0.04  1959290     0.00     0.00  std::function<void ()>::function(std::function<void ()>&&)
  1.75      1.36     0.04  1537575     0.00     0.00  priorited_function::priority() const
  1.75      1.40     0.04        2     0.02     1.02  main::{lambda()#2}::operator()() const
  1.32      1.43     0.03  2455468     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const
  1.32      1.46     0.03  2139675     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator+(long) const
  1.32      1.49     0.03   777955     0.00     0.00  priorited_function::operator=(priorited_function&&)
  1.32      1.52     0.03   575973     0.00     0.00  std::_Weak_result_type_impl<main::{lambda(unsigned long)#1}>::_Weak_result_type_impl()
  1.32      1.55     0.03   288721     0.00     0.00  void std::vector<priorited_function, std::allocator<priorited_function> >::emplace_back<priorited_function>(priorited_function&&)
  1.32      1.58     0.03   288251     0.00     0.00  std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >::value, std::decay, unsigned long&>::type std::bind<main::{lambda(unsigned long)#1}&, unsigned long&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >&&)...)
  1.32      1.61     0.03   288140     0.00     0.00  std::function<void ()>::function<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>, void, void>(std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>)
  1.32      1.64     0.03   288058     0.00     0.00  std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind(main::{lambda(unsigned long)#1} (&&)(unsigned long))
  0.88      1.66     0.02  2530293     0.00     0.00  std::_Function_base::~_Function_base()
  0.88      1.68     0.02  1449581     0.00     0.00  unsigned long& std::forward<unsigned long&>(std::remove_reference<unsigned long&>::type&)
  0.88      1.70     0.02  1129580     0.00     0.00  std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>()
  0.88      1.72     0.02   893513     0.00     0.00  priorited_function::priorited_function(priorited_function&&)
  0.88      1.74     0.02   768789     0.00     0.00  operator<(priorited_function const&, priorited_function const&)
  0.88      1.76     0.02   768779     0.00     0.00  std::less<priorited_function>::operator()(priorited_function const&, priorited_function const&) const
  0.88      1.78     0.02   575988     0.00     0.00  std::_Weak_result_type<main::{lambda(unsigned long)#1}>::_Weak_result_type()
  0.88      1.80     0.02   575632     0.00     0.00  unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&)
  0.88      1.82     0.02   570527     0.00     0.00  std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>)
  0.88      1.84     0.02   306917     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::difference_type __gnu_cxx::operator-<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&)
  0.88      1.86     0.02   296887     0.00     0.00  std::_Tuple_impl<0ul, unsigned long>::_M_head(std::_Tuple_impl<0ul, unsigned long>&)
  0.88      1.88     0.02   288755     0.00     0.00  void __gnu_cxx::new_allocator<priorited_function>::construct<priorited_function, priorited_function>(priorited_function*, priorited_function&&)
  0.88      1.90     0.02   288742     0.00     0.00  _ZNSt16allocator_traitsISaI18priorited_functionEE9constructIS0_IS0_EEEvRS1_PT_DpOT0_
  0.88      1.92     0.02   288241     0.00     0.00  std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind<unsigned long&>({lambda(unsigned long)#1} const&, unsigned long&)
  0.88      1.94     0.02   287892     0.00     0.00  priorited_function::priorited_function(unsigned int, std::function<void ()>)
  0.88      1.96     0.02   271082     0.00     0.00  std::function<void ()>::function(std::function<void ()> const&)
  0.88      1.98     0.02     8591     0.00     0.00  void multi::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  0.88      2.00     0.02       19     0.00     0.00  priorited_function* std::__uninitialized_copy<false>::__uninit_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*)
  0.66      2.02     0.02   287759     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::enqueue(priorited_function)
  0.44      2.03     0.01  1154822     0.00     0.00  priorited_function&& std::forward<priorited_function>(std::remove_reference<priorited_function>::type&)
  0.44      2.04     0.01  1129485     0.00     0.00  std::_Any_data::_M_access()
  0.44      2.05     0.01  1065707     0.00     0.00  std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&)
  0.44      2.06     0.01   814698     0.00     0.00  priorited_function* std::__addressof<priorited_function>(priorited_function&)
  0.44      2.07     0.01   613849     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::base() const
  0.44      2.08     0.01   306632     0.00     0.00  multi::p_::mutex::unlock(pthread_mutex_t*)
  0.44      2.09     0.01   304671     0.00     0.00  multi::mutex::lock()
  0.44      2.10     0.01   297777     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::begin()
  0.44      2.11     0.01   297760     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::end()
  0.44      2.12     0.01   288848     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(std::less<priorited_function>)
  0.44      2.13     0.01   288740     0.00     0.00  void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>)
  0.44      2.14     0.01   288739     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator-(long) const
  0.44      2.15     0.01   288717     0.00     0.00  void std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::emplace<priorited_function>(priorited_function&&)
  0.44      2.16     0.01   288255     0.00     0.00  std::_Maybe_wrap_member_pointer<main::{lambda(unsigned long)#1}>::__do_wrap({lambda(unsigned long)#1} const&)
  0.44      2.17     0.01   288096     0.00     0.00  std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl<unsigned long&>(unsigned long&)
  0.44      2.18     0.01   288094     0.00     0.00  std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long&>(unsigned long&)
  0.44      2.19     0.01   287986     0.00     0.00  std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long))
  0.44      2.20     0.01   287936     0.00     0.00  std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long), std::integral_constant<bool, false>)
  0.44      2.21     0.01   287803     0.00     0.00  std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long>(unsigned long&&)
  0.44      2.22     0.01   287570     0.00     0.00  multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&)
  0.44      2.23     0.01   280170     0.00     0.00  std::_Function_base::_M_empty() const
  0.44      2.24     0.01   271100     0.00     0.00  std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::integral_constant<bool, false>)
  0.44      2.25     0.01   262135     0.00     0.00  _ZSt10_ConstructI18priorited_functionIRS0_EEvPT_DpOT0_
  0.44      2.26     0.01     9061     0.00     0.00  void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >)
  0.44      2.27     0.01       24     0.00     0.00  void std::_Destroy_aux<false>::__destroy<priorited_function*>(priorited_function*, priorited_function*)
  0.44      2.28     0.01                             std::system_error::system_error(int, std::_V2::error_category const&)
  0.22      2.28     0.01   297909     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::_Iter_comp_val(std::less<priorited_function>)
  0.00      2.28     0.00  3023775     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function* const&)
  0.00      2.28     0.00   863824     0.00     0.00  std::remove_reference<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>::type&& std::move<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>(std::remove_reference&&)
  0.00      2.28     0.00   841647     0.00     0.00  std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::_Manager_operation)
  0.00      2.28     0.00   576121     0.00     0.00  std::_Maybe_get_result_type<main::{lambda(unsigned long)#1}, void>::_Maybe_get_result_type()
  0.00      2.28     0.00   552566     0.00     0.00  void std::_Destroy<priorited_function>(priorited_function*)
  0.00      2.28     0.00   550886     0.00     0.00  operator new(unsigned long, void*)
  0.00      2.28     0.00   306715     0.00     0.00  multi::mutex::unlock()
  0.00      2.28     0.00   304605     0.00     0.00  multi::p_::mutex::lock(pthread_mutex_t*)
  0.00      2.28     0.00   296973     0.00     0.00  std::_Head_base<0ul, unsigned long, false>::_M_head(std::_Head_base<0ul, unsigned long, false>&)
  0.00      2.28     0.00   288997     0.00     0.00  multi::condition_variable::notify_one()
  0.00      2.28     0.00   288994     0.00     0.00  multi::unique_lock<multi::mutex>::~unique_lock()
  0.00      2.28     0.00   288221     0.00     0.00  main::{lambda(unsigned long)#1}& std::forward<main::{lambda(unsigned long)#1}&>(std::remove_reference<main::{lambda(unsigned long)#1}&>::type&)
  0.00      2.28     0.00   288106     0.00     0.00  std::tuple<unsigned long>::tuple<unsigned long&, void>(unsigned long&)
  0.00      2.28     0.00   288041     0.00     0.00  bool std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_not_empty_function<main::{lambda(unsigned long)#1} (unsigned long)>(main::{lambda(unsigned long)#1} ( const&)(unsigned long))
  0.00      2.28     0.00   287885     0.00     0.00  std::tuple<unsigned long>::tuple(std::tuple<unsigned long>&&)
  0.00      2.28     0.00   287819     0.00     0.00  std::remove_reference<main::{lambda(unsigned long)#1}&>::type&& std::move<main::{lambda(unsigned long)#1}&>(std::remove_reference&&)
  0.00      2.28     0.00   287765     0.00     0.00  std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl(std::_Tuple_impl<0ul, unsigned long>&&)
  0.00      2.28     0.00   287711     0.00     0.00  std::remove_reference<std::tuple<unsigned long>&>::type&& std::move<std::tuple<unsigned long>&>(std::tuple<unsigned long>&)
  0.00      2.28     0.00   287708     0.00     0.00  multi::mutex* std::addressof<multi::mutex>(multi::mutex&)
  0.00      2.28     0.00   287674     0.00     0.00  multi::mutex* std::__addressof<multi::mutex>(multi::mutex&)
  0.00      2.28     0.00   280197     0.00     0.00  std::_Any_data::_M_access() const
  0.00      2.28     0.00   280177     0.00     0.00  std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>* const& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() const
  0.00      2.28     0.00   271112     0.00     0.00  std::function<void ()>::operator bool() const
  0.00      2.28     0.00   271094     0.00     0.00  priorited_function::priorited_function(priorited_function const&)
  0.00      2.28     0.00   262136     0.00     0.00  priorited_function& std::forward<priorited_function&>(std::remove_reference<priorited_function&>::type&)
  0.00      2.28     0.00   130995     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >)
  0.00      2.28     0.00    26853     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function const* const&)
  0.00      2.28     0.00    19778     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}::operator()() const
  0.00      2.28     0.00    19199     0.00     0.00  std::bitset<2ul>::any() const
  0.00      2.28     0.00    19126     0.00     0.00  std::_Base_bitset<1ul>::_M_is_any() const
  0.00      2.28     0.00    18040     0.00     0.00  multi::condition_variable::notify_all()
  0.00      2.28     0.00    17918     0.00     0.00  std::_Base_bitset<1ul>::_S_whichbit(unsigned long)
  0.00      2.28     0.00    17903     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::begin() const
  0.00      2.28     0.00    17885     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::base() const
  0.00      2.28     0.00    10432     0.00     0.00  multi::condition_variable::wait(multi::unique_lock<multi::mutex>&)
  0.00      2.28     0.00    10311     0.00     0.00  multi::p_::mutex::handle(pthread_mutex_t*)
  0.00      2.28     0.00    10300     0.00     0.00  multi::mutex::native_handle()
  0.00      2.28     0.00    10114     0.00     0.00  multi::unique_lock<multi::mutex>::mutex()
  0.00      2.28     0.00     9087     0.00     0.00  void std::allocator_traits<std::allocator<priorited_function> >::destroy<priorited_function>(std::allocator<priorited_function>&, priorited_function*)
  0.00      2.28     0.00     9086     0.00     0.00  void __gnu_cxx::new_allocator<priorited_function>::destroy<priorited_function>(priorited_function*)
  0.00      2.28     0.00     9086     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::pop_back()
  0.00      2.28     0.00     9084     0.00     0.00  multi::unique_lock<multi::mutex>::unlock()
  0.00      2.28     0.00     9082     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(__gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >)
  0.00      2.28     0.00     9081     0.00     0.00  multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&)
  0.00      2.28     0.00     9073     0.00     0.00  multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(multi::p_::scope_guard&&)
  0.00      2.28     0.00     9071     0.00     0.00  unsigned long& std::_Mu<unsigned long, false, false>::operator()<unsigned long&, std::tuple<> >(unsigned long&, std::tuple<>&) const volatile
  0.00      2.28     0.00     9069     0.00     0.00  std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&>::type&& std::move<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&>(std::remove_reference&&)
  0.00      2.28     0.00     9069     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::type&)
  0.00      2.28     0.00     9068     0.00     0.00  priorited_function::operator()()
  0.00      2.28     0.00     9068     0.00     0.00  std::tuple<> std::forward_as_tuple<>()
  0.00      2.28     0.00     9068     0.00     0.00  main::{lambda(unsigned long)#1}::operator()(unsigned long) const
  0.00      2.28     0.00     9067     0.00     0.00  std::_Function_handler<void (), std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_invoke(std::_Any_data const&)
  0.00      2.28     0.00     9066     0.00     0.00  void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>)
  0.00      2.28     0.00     9065     0.00     0.00  multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::scope_guard({lambda()#3})
  0.00      2.28     0.00     9065     0.00     0.00  std::function<void ()>::operator()() const
  0.00      2.28     0.00     9065     0.00     0.00  unsigned long& std::__get_helper<0ul, unsigned long>(std::_Tuple_impl<0ul, unsigned long>&)
  0.00      2.28     0.00     9064     0.00     0.00  std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_get_pointer(std::_Any_data const&)
  0.00      2.28     0.00     9063     0.00     0.00  void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::operator()<, void>()
  0.00      2.28     0.00     9061     0.00     0.00  std::tuple_element<0ul, std::tuple<unsigned long> >::type& std::get<0ul, unsigned long>(std::tuple<unsigned long>&)
  0.00      2.28     0.00     9016     0.00     0.00  void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >)
  0.00      2.28     0.00     9016     0.00     0.00  void std::pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>)
  0.00      2.28     0.00     9015     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_iter<std::less<priorited_function> >(std::less<priorited_function>)
  0.00      2.28     0.00     9013     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::_Iter_comp_iter(std::less<priorited_function>)
  0.00      2.28     0.00     9005     0.00     0.00  std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::pop()
  0.00      2.28     0.00     9001     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator--()
  0.00      2.28     0.00     8999     0.00     0.00  multi::p_::id_mirror::create(unsigned long)
  0.00      2.28     0.00     8997     0.00     0.00  multi::this_thread::get_id()
  0.00      2.28     0.00     8985     0.00     0.00  void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2})
  0.00      2.28     0.00     8981     0.00     0.00  std::bitset<2ul>::operator[](unsigned long)
  0.00      2.28     0.00     8970     0.00     0.00  pqueue<priorited_function>::front() const
  0.00      2.28     0.00     8969     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::front() const
  0.00      2.28     0.00     8969     0.00     0.00  std::remove_reference<priorited_function const&>::type&& std::move<priorited_function const&>(priorited_function const&)
  0.00      2.28     0.00     8966     0.00     0.00  std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::top() const
  0.00      2.28     0.00     8963     0.00     0.00  multi::thread::id::id(unsigned long)
  0.00      2.28     0.00     8961     0.00     0.00  std::bitset<2ul>::reference::~reference()
  0.00      2.28     0.00     8959     0.00     0.00  std::_Base_bitset<1ul>::_M_getword(unsigned long)
  0.00      2.28     0.00     8956     0.00     0.00  std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::empty() const
  0.00      2.28     0.00     8956     0.00     0.00  std::_Base_bitset<1ul>::_S_maskbit(unsigned long)
  0.00      2.28     0.00     8946     0.00     0.00  __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const
  0.00      2.28     0.00     8946     0.00     0.00  std::bitset<2ul>::reference::reference(std::bitset<2ul>&, unsigned long)
  0.00      2.28     0.00     8945     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::end() const
  0.00      2.28     0.00     8942     0.00     0.00  std::bitset<2ul>::reference::operator bool() const
  0.00      2.28     0.00     8934     0.00     0.00  bool __gnu_cxx::operator==<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&)
  0.00      2.28     0.00     8924     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::empty() const
  0.00      2.28     0.00     8723     0.00     0.00  multi::lock_guard<multi::mutex>::~lock_guard()
  0.00      2.28     0.00     8718     0.00     0.00  std::basic_ostream<char, std::char_traits<char> >& multi::operator<< <char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, multi::thread::id)
  0.00      2.28     0.00     8692     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<int, void>(int const&)
  0.00      2.28     0.00     8614     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const
  0.00      2.28     0.00     8597     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  0.00      2.28     0.00     8579     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000l> >::count() const
  0.00      2.28     0.00     8565     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000l> >::duration<long, void>(long const&)
  0.00      2.28     0.00     8530     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
  0.00      2.28     0.00     8267     0.00     0.00  multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::~scope_guard()
  0.00      2.28     0.00     8047     0.00     0.00  multi::unique_lock<multi::mutex>::lock_assert(bool, bool)
  0.00      2.28     0.00     8044     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}::operator()() const
  0.00      2.28     0.00     7981     0.00     0.00  multi::unique_lock<multi::mutex>::lock()
  0.00      2.28     0.00       95     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::size() const
  0.00      2.28     0.00       57     0.00     0.00  __gnu_cxx::new_allocator<priorited_function>::max_size() const
  0.00      2.28     0.00       44     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator()
  0.00      2.28     0.00       38     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() const
  0.00      2.28     0.00       38     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::max_size() const
  0.00      2.28     0.00       38     0.00     0.00  std::allocator_traits<std::allocator<priorited_function> >::max_size(std::allocator<priorited_function> const&)
  0.00      2.28     0.00       38     0.00     0.00  priorited_function* std::__make_move_if_noexcept_iterator<priorited_function*, priorited_function*>(priorited_function*)
  0.00      2.28     0.00       24     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::type&)
  0.00      2.28     0.00       24     0.00     0.00  void std::_Destroy<priorited_function*>(priorited_function*, priorited_function*)
  0.00      2.28     0.00       24     0.00     0.00  void std::_Destroy<priorited_function*, priorited_function>(priorited_function*, priorited_function*, std::allocator<priorited_function>&)
  0.00      2.28     0.00       22     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      2.28     0.00       21     0.00     0.00  multi::thread::joinable() const
  0.00      2.28     0.00       21     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_deallocate(priorited_function*, unsigned long)
  0.00      2.28     0.00       19     0.00     0.00  __gnu_cxx::new_allocator<priorited_function>::deallocate(priorited_function*, unsigned long)
  0.00      2.28     0.00       19     0.00     0.00  __gnu_cxx::new_allocator<priorited_function>::allocate(unsigned long, void const*)
  0.00      2.28     0.00       19     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::_M_check_len(unsigned long, char const*) const
  0.00      2.28     0.00       19     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_allocate(unsigned long)
  0.00      2.28     0.00       19     0.00     0.00  std::allocator_traits<std::allocator<priorited_function> >::deallocate(std::allocator<priorited_function>&, priorited_function*, unsigned long)
  0.00      2.28     0.00       19     0.00     0.00  std::allocator_traits<std::allocator<priorited_function> >::allocate(std::allocator<priorited_function>&, unsigned long)
  0.00      2.28     0.00       19     0.00     0.01  void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&)
  0.00      2.28     0.00       19     0.00     0.00  priorited_function* std::uninitialized_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*)
  0.00      2.28     0.00       19     0.00     0.00  priorited_function* std::__uninitialized_copy_a<priorited_function*, priorited_function*, priorited_function>(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&)
  0.00      2.28     0.00       19     0.00     0.00  priorited_function* std::__uninitialized_move_if_noexcept_a<priorited_function*, priorited_function*, std::allocator<priorited_function> >(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&)
  0.00      2.28     0.00       18     0.00     0.00  main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&)
  0.00      2.28     0.00       15     0.00     0.00  std::vector<multi::thread, std::allocator<multi::thread> >::size() const
  0.00      2.28     0.00       13     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00      2.28     0.00       12     0.00     0.00  void multi::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00      2.28     0.00       12     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> >::count() const
  0.00      2.28     0.00       12     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&)
  0.00      2.28     0.00       11     0.00     0.00  multi::thread::~thread()
  0.00      2.28     0.00       11     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&)
  0.00      2.28     0.00       10     0.00     0.00  __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::base() const
  0.00      2.28     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<multi::thread>::max_size() const
  0.00      2.28     0.00        9     0.00     0.00  std::remove_reference<priorited_function*&>::type&& std::move<priorited_function*&>(priorited_function*&)
  0.00      2.28     0.00        8     0.00     0.00  void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&std::forward<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>(std::remove_reference<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type&))()
  0.00      2.28     0.00        7     0.00     0.00  std::move_iterator<multi::thread*>::base() const
  0.00      2.28     0.00        7     0.00     0.00  multi::thread* std::__addressof<multi::thread>(multi::thread&)
  0.00      2.28     0.00        6     0.00     0.00  multi::thread::join()
  0.00      2.28     0.00        6     0.00     0.00  std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_get_Tp_allocator() const
  0.00      2.28     0.00        6     0.00     0.00  std::vector<multi::thread, std::allocator<multi::thread> >::max_size() const
  0.00      2.28     0.00        6     0.00     0.00  std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_get_Tp_allocator()
  0.00      2.28     0.00        6     0.00     0.00  std::allocator_traits<std::allocator<multi::thread> >::max_size(std::allocator<multi::thread> const&)
  0.00      2.28     0.00        6     0.00     0.00  void std::_Destroy<multi::thread>(multi::thread*)
  0.00      2.28     0.00        5     0.00     0.00  bool __gnu_cxx::operator!=<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >(__gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&, __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&)
  0.00      2.28     0.00        5     0.00     0.00  std::move_iterator<multi::thread*> std::__make_move_if_noexcept_iterator<multi::thread*, std::move_iterator<multi::thread*> >(multi::thread*)
  0.00      2.28     0.00        5     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}::operator()() const
  0.00      2.28     0.00        4     0.00     0.06  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()
  0.00      2.28     0.00        4     0.00     0.00  multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(multi::p_::scope_guard&&)
  0.00      2.28     0.00        4     0.00     0.00  multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::scope_guard({lambda()#1})
  0.00      2.28     0.00        4     0.00     0.00  multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::~scope_guard()
  0.00      2.28     0.00        4     0.00     0.00  multi::thread::detach()
  0.00      2.28     0.00        4     0.00     0.00  multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)
  0.00      2.28     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::operator++()
  0.00      2.28     0.00        4     0.00     0.00  multi::unique_lock<multi::mutex>::owns_lock() const
  0.00      2.28     0.00        4     0.00     0.00  multi::unique_lock<multi::mutex>::operator bool() const
  0.00      2.28     0.00        4     0.00     0.00  __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::operator*() const
  0.00      2.28     0.00        4     0.00     0.06  void std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::operator()<, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*) const
  0.00      2.28     0.00        4     0.00     0.00  std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>::_M_head(std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>&)
  0.00      2.28     0.00        4     0.00     0.00  std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>::_Head_base<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)
  0.00      2.28     0.00        4     0.00     0.00  std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_M_head(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&)
  0.00      2.28     0.00        4     0.00     0.00  std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Tuple_impl<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)
  0.00      2.28     0.00        4     0.00     0.00  std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::_Mem_fn_base(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)())
  0.00      2.28     0.00        4     0.00     0.00  std::move_iterator<multi::thread*>::move_iterator(multi::thread*)
  0.00      2.28     0.00        4     0.00     0.00  std::unary_function<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>::unary_function()
  0.00      2.28     0.00        4     0.00     0.00  std::_Weak_result_type<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type()
  0.00      2.28     0.00        4     0.00     0.00  std::_Maybe_get_result_type<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>, void>::_Maybe_get_result_type()
  0.00      2.28     0.00        4     0.00     0.00  std::_Weak_result_type_impl<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type_impl()
  0.00      2.28     0.00        4     0.00     0.00  std::_Maybe_wrap_member_pointer<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::__do_wrap(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)())
  0.00      2.28     0.00        4     0.00     0.00  std::_Maybe_unary_or_binary_function<void, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Maybe_unary_or_binary_function()
  0.00      2.28     0.00        4     0.00     0.06  void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>)
  0.00      2.28     0.00        4     0.00     0.00  std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::_Bind<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)
  0.00      2.28     0.00        4     0.00     0.06  void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::operator()<, void>()
  0.00      2.28     0.00        4     0.00     0.00  std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)
  0.00      2.28     0.00        4     0.00     0.00  std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::_Mem_fn(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)())
  0.00      2.28     0.00        4     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::_Mu<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false, false>::operator()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<> >(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<>&) const volatile
  0.00      2.28     0.00        4     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::__get_helper<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&)
  0.00      2.28     0.00        4     0.00     0.00  std::tuple_element<0ul, std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type& std::get<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&)
  0.00      2.28     0.00        4     0.00     0.00  std::_Bind_helper<std::__or_<std::is_integral<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type>, std::is_enum<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type> >::value, void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type std::bind<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)
  0.00      2.28     0.00        4     0.00     0.00  std::remove_reference<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&>::type&& std::move<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&)
  0.00      2.28     0.00        4     0.00     0.00  std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&>::type&& std::move<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&>(std::remove_reference&&)
  0.00      2.28     0.00        4     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&>::type&)
  0.00      2.28     0.00        4     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::type&)
  0.00      2.28     0.00        4     0.00     0.00  void std::_Destroy<multi::thread*, multi::thread>(multi::thread*, multi::thread*, std::allocator<multi::thread>&)
  0.00      2.28     0.00        4     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}::operator()() const
  0.00      2.28     0.00        4     0.00     0.00  multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::operator void* (*)(void*)() const
  0.00      2.28     0.00        4     0.00     0.06  multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::operator()(void*) const
  0.00      2.28     0.00        3     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::discard_queue()
  0.00      2.28     0.00        3     0.00     0.00  multi::p_::mutex::mtx_type_init(pthread_mutex_t*, int)
  0.00      2.28     0.00        3     0.00     0.00  multi::p_::mutex::init(pthread_mutex_t*)
  0.00      2.28     0.00        3     0.00     0.00  multi::p_::mutex::destroy(pthread_mutex_t*)
  0.00      2.28     0.00        3     0.00     0.00  multi::p_::mutex::semantics::semantics()
  0.00      2.28     0.00        3     0.00     0.00  multi::mutex::mutex()
  0.00      2.28     0.00        3     0.00     0.00  multi::mutex::~mutex()
  0.00      2.28     0.00        3     0.00     0.00  multi::thread::thread<main::{lambda()#2}&>(main::{lambda()#2}&)
  0.00      2.28     0.00        3     0.00     0.00  multi::thread::thread(multi::thread&&)
  0.00      2.28     0.00        3     0.00     0.00  pqueue<priorited_function>::clear()
  0.00      2.28     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<multi::thread>::allocate(unsigned long, void const*)
  0.00      2.28     0.00        3     0.00     0.00  void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#2}&>(multi::thread*, main::{lambda()#2}&)
  0.00      2.28     0.00        3     0.00     0.00  std::move_iterator<multi::thread*>::operator*() const
  0.00      2.28     0.00        3     0.00     0.00  std::vector<multi::thread, std::allocator<multi::thread> >::_M_check_len(unsigned long, char const*) const
  0.00      2.28     0.00        3     0.00     0.00  void std::_Destroy_aux<false>::__destroy<multi::thread*>(multi::thread*, multi::thread*)
  0.00      2.28     0.00        3     0.00     0.00  std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_allocate(unsigned long)
  0.00      2.28     0.00        3     0.00     0.00  std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_deallocate(multi::thread*, unsigned long)
  0.00      2.28     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<multi::thread> >::allocate(std::allocator<multi::thread>&, unsigned long)
  0.00      2.28     0.00        3     0.00     0.00  void std::allocator_traits<std::allocator<multi::thread> >::construct<multi::thread, main::{lambda()#2}&>(std::allocator<multi::thread>&, multi::thread*, main::{lambda()#2}&)
  0.00      2.28     0.00        3     0.00     0.00  std::_Weak_result_type<main::{lambda()#2}>::_Weak_result_type()
  0.00      2.28     0.00        3     0.00     0.00  std::_Maybe_get_result_type<main::{lambda()#2}, void>::_Maybe_get_result_type()
  0.00      2.28     0.00        3     0.00     0.00  std::_Weak_result_type_impl<main::{lambda()#2}>::_Weak_result_type_impl()
  0.00      2.28     0.00        3     0.00     0.00  std::_Maybe_wrap_member_pointer<main::{lambda()#2}>::__do_wrap({lambda()#2} const&)
  0.00      2.28     0.00        3     0.00     0.00  std::_Bind<main::{lambda()#2} ()>::_Bind<>({lambda()#2} const&)
  0.00      2.28     0.00        3     0.00     0.68  void std::_Bind<main::{lambda()#2} ()>::operator()<, void>()
  0.00      2.28     0.00        3     0.00     0.00  std::bitset<2ul>::reference::operator=(bool)
  0.00      2.28     0.00        3     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::_M_erase_at_end(priorited_function*)
  0.00      2.28     0.00        3     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::clear()
  0.00      2.28     0.00        3     0.00     0.00  void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#2}&>(main::{lambda()#2}&)
  0.00      2.28     0.00        3     0.00     0.00  void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&)
  0.00      2.28     0.00        3     0.00     0.00  multi::thread* std::__uninitialized_move_if_noexcept_a<multi::thread*, multi::thread*, std::allocator<multi::thread> >(multi::thread*, multi::thread*, multi::thread*, std::allocator<multi::thread>&)
  0.00      2.28     0.00        3     0.00     0.00  std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >::value, std::decay>::type std::bind<main::{lambda()#2}&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >&&)...)
  0.00      2.28     0.00        3     0.00     0.00  void std::swap<priorited_function*>(priorited_function*&, priorited_function*&)
  0.00      2.28     0.00        3     0.00     0.00  void std::_Destroy<multi::thread*>(multi::thread*, multi::thread*)
  0.00      2.28     0.00        3     0.00     0.00  bool std::operator==<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&)
  0.00      2.28     0.00        3     0.00     0.00  bool std::operator!=<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&)
  0.00      2.28     0.00        3     0.00     0.68  _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENKUlPvE_clES9_
  0.00      2.28     0.00        3     0.00     0.00  _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENKUlPvE_cvPFS9_S9_EEv
  0.00      2.28     0.00        2     0.00     0.00  multi::condition_variable::condition_variable()
  0.00      2.28     0.00        2     0.00     0.00  multi::condition_variable::~condition_variable()
  0.00      2.28     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<priorited_function>::~new_allocator()
  0.00      2.28     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<multi::thread>::deallocate(multi::thread*, unsigned long)
  0.00      2.28     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::__normal_iterator(multi::thread* const&)
  0.00      2.28     0.00        2     0.00     0.00  std::allocator<priorited_function>::~allocator()
  0.00      2.28     0.00        2     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::~_Vector_impl()
  0.00      2.28     0.00        2     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::~_Vector_base()
  0.00      2.28     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<multi::thread> >::deallocate(std::allocator<multi::thread>&, multi::thread*, unsigned long)
  0.00      2.28     0.00        2     0.00     0.00  multi::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*)
  0.00      2.28     0.00        2     0.00     1.02  void std::_Bind<main::{lambda()#2} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>)
  0.00      2.28     0.00        2     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::~vector()
  0.00      2.28     0.00        2     0.00     0.00  multi::thread* std::uninitialized_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*)
  0.00      2.28     0.00        2     0.00     0.00  multi::thread* std::__uninitialized_copy_a<std::move_iterator<multi::thread*>, multi::thread*, multi::thread>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*, std::allocator<multi::thread>&)
  0.00      2.28     0.00        2     0.00     0.00  std::remove_reference<std::allocator<priorited_function>&>::type&& std::move<std::allocator<priorited_function>&>(std::allocator<priorited_function>&)
  0.00      2.28     0.00        2     0.00     0.00  std::remove_reference<std::vector<priorited_function, std::allocator<priorited_function> >&>::type&& std::move<std::vector<priorited_function, std::allocator<priorited_function> >&>(std::vector<priorited_function, std::allocator<priorited_function> >&)
  0.00      2.28     0.00        2     0.00     0.00  multi::thread&& std::forward<multi::thread>(std::remove_reference<multi::thread>::type&)
  0.00      2.28     0.00        2     0.00     0.00  main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&)
  0.00      2.28     0.00        2     0.00     0.00  main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&)
  0.00      2.28     0.00        2     0.00     0.00  main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&)
  0.00      2.28     0.00        2     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}::operator()() const
  0.00      2.28     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZltRK18priorited_functionS1_
  0.00      2.28     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.28     0.00        1     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)
  0.00      2.28     0.00        1     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()
  0.00      2.28     0.00        1     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::resume()
  0.00      2.28     0.00        1     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException)
  0.00      2.28     0.00        1     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::~thread_pool()
  0.00      2.28     0.00        1     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()
  0.00      2.28     0.00        1     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::pause()
  0.00      2.28     0.00        1     0.00     0.00  void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1})
  0.00      2.28     0.00        1     0.00     0.00  void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1})
  0.00      2.28     0.00        1     0.00     0.00  void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2})
  0.00      2.28     0.00        1     0.00     0.00  void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1})
  0.00      2.28     0.00        1     0.00     0.00  multi::thread::thread<main::{lambda()#3}&>(main::{lambda()#3}&)
  0.00      2.28     0.00        1     0.00     0.00  multi::thread::thread<main::{lambda()#4}>(main::{lambda()#4}&&)
  0.00      2.28     0.00        1     0.00     0.00  multi::thread::thread<main::{lambda()#5}>(main::{lambda()#5}&&)
  0.00      2.28     0.00        1     0.00     0.00  pqueue<priorited_function>::pqueue()
  0.00      2.28     0.00        1     0.00     0.00  pqueue<priorited_function>::~pqueue()
  0.00      2.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<priorited_function>::new_allocator(__gnu_cxx::new_allocator<priorited_function> const&)
  0.00      2.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<priorited_function>::new_allocator()
  0.00      2.28     0.00        1     0.00     0.00  void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#3}&>(multi::thread*, main::{lambda()#3}&)
  0.00      2.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<multi::thread>::new_allocator()
  0.00      2.28     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<multi::thread>::~new_allocator()
  0.00      2.28     0.00        1     0.00     0.00  std::allocator<priorited_function>::allocator(std::allocator<priorited_function> const&)
  0.00      2.28     0.00        1     0.00     0.00  std::allocator<priorited_function>::allocator()
  0.00      2.28     0.00        1     0.00     0.00  std::allocator<multi::thread>::allocator()
  0.00      2.28     0.00        1     0.00     0.00  std::allocator<multi::thread>::~allocator()
  0.00      2.28     0.00        1     0.00     0.00  std::_Base_bitset<1ul>::_Base_bitset()
  0.00      2.28     0.00        1     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_M_swap_data(std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl&)
  0.00      2.28     0.00        1     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl(std::allocator<priorited_function>&&)
  0.00      2.28     0.00        1     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl()
  0.00      2.28     0.00        1     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base()
  0.00      2.28     0.00        1     0.00     0.00  std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base(std::_Vector_base<priorited_function, std::allocator<priorited_function> >&&)
  0.00      2.28     0.00        1     0.00     0.00  std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::_Vector_impl()
  0.00      2.28     0.00        1     0.00     0.00  std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::~_Vector_impl()
  0.00      2.28     0.00        1     0.00     0.00  std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_base()
  0.00      2.28     0.00        1     0.00     0.00  std::_Vector_base<multi::thread, std::allocator<multi::thread> >::~_Vector_base()
  0.00      2.28     0.00        1     0.00     0.00  std::move_iterator<multi::thread*>::operator++()
  0.00      2.28     0.00        1     0.00     0.00  std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::priority_queue(std::less<priorited_function> const&, std::vector<priorited_function, std::allocator<priorited_function> >&&)
  0.00      2.28     0.00        1     0.00     0.00  std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::~priority_queue()
  0.00      2.28     0.00        1     0.00     0.00  std::_Weak_result_type<main::{lambda()#4}>::_Weak_result_type()
  0.00      2.28     0.00        1     0.00     0.00  std::_Weak_result_type<main::{lambda()#5}>::_Weak_result_type()
  0.00      2.28     0.00        1     0.00     0.00  std::_Maybe_get_result_type<main::{lambda()#4}, void>::_Maybe_get_result_type()
  0.00      2.28     0.00        1     0.00     0.00  std::_Maybe_get_result_type<main::{lambda()#5}, void>::_Maybe_get_result_type()
  0.00      2.28     0.00        1     0.00     0.00  std::_Weak_result_type_impl<main::{lambda()#3}>::_Weak_result_type_impl()
  0.00      2.28     0.00        1     0.00     0.00  std::_Weak_result_type_impl<main::{lambda()#4}>::_Weak_result_type_impl()
  0.00      2.28     0.00        1     0.00     0.00  std::_Weak_result_type_impl<main::{lambda()#5}>::_Weak_result_type_impl()
  0.00      2.28     0.00        1     0.00     0.00  std::_Maybe_wrap_member_pointer<main::{lambda()#4}>::__do_wrap({lambda()#4}&&)
  0.00      2.28     0.00        1     0.00     0.00  std::_Maybe_wrap_member_pointer<main::{lambda()#5}>::__do_wrap({lambda()#5}&&)
  0.00      2.28     0.00        1     0.00     0.01  void std::_Bind<main::{lambda()#3} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>)
  0.00      2.28     0.00        1     0.00     0.01  void std::_Bind<main::{lambda()#3} ()>::operator()<, void>()
  0.00      2.28     0.00        1     0.00     0.00  std::_Bind<main::{lambda()#4} ()>::_Bind<>({lambda()#4}&&)
  0.00      2.28     0.00        1     0.00     0.00  void std::_Bind<main::{lambda()#4} ()>::operator()<, void>()
  0.00      2.28     0.00        1     0.00     0.00  void std::_Bind<main::{lambda()#5} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>)
  0.00      2.28     0.00        1     0.00     0.00  std::_Bind<main::{lambda()#5} ()>::_Bind<>({lambda()#5}&&)
  0.00      2.28     0.00        1     0.00     0.00  void std::_Bind<main::{lambda()#5} ()>::operator()<, void>()
  0.00      2.28     0.00        1     0.00     0.00  std::bitset<2ul>::bitset()
  0.00      2.28     0.00        1     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::vector()
  0.00      2.28     0.00        1     0.00     0.00  std::vector<priorited_function, std::allocator<priorited_function> >::vector(std::vector<priorited_function, std::allocator<priorited_function> >&&)
  0.00      2.28     0.00        1     0.00     0.00  void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#3}&>(main::{lambda()#3}&)
  0.00      2.28     0.00        1     0.00     0.00  std::vector<multi::thread, std::allocator<multi::thread> >::end()
  0.00      2.28     0.00        1     0.00     0.00  std::vector<multi::thread, std::allocator<multi::thread> >::begin()
  0.00      2.28     0.00        1     0.00     0.00  std::vector<multi::thread, std::allocator<multi::thread> >::vector()
  0.00      2.28     0.00        1     0.00     0.00  std::vector<multi::thread, std::allocator<multi::thread> >::~vector()
  0.00      2.28     0.00        1     0.00     0.00  void std::_Construct<multi::thread, multi::thread>(multi::thread*, multi::thread&&)
  0.00      2.28     0.00        1     0.00     0.00  void std::__make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >)
  0.00      2.28     0.00        1     0.00     0.00  std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >::value, std::decay>::type std::bind<main::{lambda()#4}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >&&)...)
  0.00      2.28     0.00        1     0.00     0.00  std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >::value, std::decay>::type std::bind<main::{lambda()#5}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >&&)...)
  0.00      2.28     0.00        1     0.00     0.00  std::remove_reference<multi::RethrowThreadException&>::type&& std::move<multi::RethrowThreadException&>(multi::RethrowThreadException&)
  0.00      2.28     0.00        1     0.00     0.00  std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&)
  0.00      2.28     0.00        1     0.00     0.00  std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&)
  0.00      2.28     0.00        1     0.00     0.00  void std::make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>)
  0.00      2.28     0.00        1     0.00     0.01  main::{lambda()#3}::operator()() const
  0.00      2.28     0.00        1     0.00     0.00  main::{lambda()#4}::operator()() const
  0.00      2.28     0.00        1     0.00     0.00  main::{lambda()#5}::operator()() const
  0.00      2.28     0.00        1     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}::operator()() const
  0.00      2.28     0.00        1     0.00     0.00  multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}::operator()() const
  0.00      2.28     0.00        1     0.00     0.01  _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENKUlPvE_clES9_
  0.00      2.28     0.00        1     0.00     0.00  _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENKUlPvE_cvPFS9_S9_EEv
  0.00      2.28     0.00        1     0.00     0.00  _ZZN5multi6threadC4IZ4mainEUlvE2_JEEEOT_DpOT0_ENKUlPvE_cvPFS8_S8_EEv
  0.00      2.28     0.00        1     0.00     0.00  _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENKUlPvE_clES8_
  0.00      2.28     0.00        1     0.00     0.00  _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENKUlPvE_cvPFS8_S8_EEv

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.44% of 2.28 seconds

index % time    self  children    called     name
                0.00    2.04       3/3           _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENKUlPvE_clES9_ [2]
[1]     89.3    0.00    2.04       3         void std::_Bind<main::{lambda()#2} ()>::operator()<, void>() [1]
                0.00    2.04       2/2           void std::_Bind<main::{lambda()#2} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [3]
                0.00    0.00       2/9068        std::tuple<> std::forward_as_tuple<>() [189]
-----------------------------------------------
                0.00    2.04       3/3           _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENUlPvE_4_FUNES9_ [5]
[2]     89.3    0.00    2.04       3         _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENKUlPvE_clES9_ [2]
                0.00    2.04       3/3           void std::_Bind<main::{lambda()#2} ()>::operator()<, void>() [1]
-----------------------------------------------
                0.00    2.04       2/2           void std::_Bind<main::{lambda()#2} ()>::operator()<, void>() [1]
[3]     89.3    0.00    2.04       2         void std::_Bind<main::{lambda()#2} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [3]
                0.04    2.00       2/2           main::{lambda()#2}::operator()() const [4]
-----------------------------------------------
                0.04    2.00       2/2           void std::_Bind<main::{lambda()#2} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [3]
[4]     89.3    0.04    2.00       2         main::{lambda()#2}::operator()() const [4]
                0.02    1.51  287759/287759      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::enqueue(priorited_function) [6]
                0.03    0.15  288140/288140      std::function<void ()>::function<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>, void, void>(std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>) [27]
                0.02    0.11  287892/287892      priorited_function::priorited_function(unsigned int, std::function<void ()>) [36]
                0.03    0.09  288251/288251      std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >::value, std::decay, unsigned long&>::type std::bind<main::{lambda(unsigned long)#1}&, unsigned long&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >&&)...) [37]
                0.01    0.01  288333/1464174     priorited_function::~priorited_function() [39]
                0.01    0.01  288308/2530395     std::function<void ()>::~function() [42]
                0.00    0.00       3/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00       3/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00       3/12          std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&) [244]
                0.00    0.00       2/12          void multi::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [242]
-----------------------------------------------
                                                 <spontaneous>
[5]     89.3    0.00    2.04                 _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENUlPvE_4_FUNES9_ [5]
                0.00    2.04       3/3           _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENKUlPvE_clES9_ [2]
-----------------------------------------------
                0.02    1.51  287759/287759      main::{lambda()#2}::operator()() const [4]
[6]     67.0    0.02    1.51  287759         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::enqueue(priorited_function) [6]
                0.01    1.47  288717/288717      void std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::emplace<priorited_function>(priorited_function&&) [7]
                0.01    0.01  287563/287570      multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&) [86]
                0.00    0.01  288987/288994      multi::unique_lock<multi::mutex>::~unique_lock() [106]
                0.01    0.00  288787/1671533     std::remove_reference<priorited_function&>::type&& std::move<priorited_function&>(priorited_function&) [64]
                0.00    0.00  288997/288997      multi::condition_variable::notify_one() [164]
-----------------------------------------------
                0.01    1.47  288717/288717      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::enqueue(priorited_function) [6]
[7]     64.7    0.01    1.47  288717         void std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::emplace<priorited_function>(priorited_function&&) [7]
                0.01    1.10  288740/288740      void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
                0.03    0.30  288721/288721      void std::vector<priorited_function, std::allocator<priorited_function> >::emplace_back<priorited_function>(priorited_function&&) [15]
                0.01    0.00  288783/297777      std::vector<priorited_function, std::allocator<priorited_function> >::begin() [97]
                0.01    0.00  288765/297760      std::vector<priorited_function, std::allocator<priorited_function> >::end() [98]
                0.00    0.00  288676/1154822     priorited_function&& std::forward<priorited_function>(std::remove_reference<priorited_function>::type&) [103]
-----------------------------------------------
                0.01    1.10  288740/288740      void std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::emplace<priorited_function>(priorited_function&&) [7]
[8]     48.7    0.01    1.10  288740         void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
                0.09    0.67  288832/297925      void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >) [9]
                0.01    0.21  577619/893513      priorited_function::priorited_function(priorited_function&&) [14]
                0.02    0.02  577966/1464174     priorited_function::~priorited_function() [39]
                0.02    0.01  288851/306917      __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::difference_type __gnu_cxx::operator-<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [72]
                0.02    0.00  577603/1671533     std::remove_reference<priorited_function&>::type&& std::move<priorited_function&>(priorited_function&) [64]
                0.01    0.00  288848/288848      __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(std::less<priorited_function>) [89]
                0.01    0.00  288739/288739      __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator-(long) const [99]
                0.00    0.00  288756/2455468     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [69]
-----------------------------------------------
                0.00    0.02    9093/297925      void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
                0.09    0.67  288832/297925      void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
[9]     34.2    0.09    0.69  297925         void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >) [9]
                0.02    0.49  637815/777955      priorited_function::operator=(priorited_function&&) [12]
                0.05    0.07  637785/637785      bool __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function>(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function&) [41]
                0.02    0.00 1615390/2139675     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator+(long) const [70]
                0.02    0.00  637814/1671533     std::remove_reference<priorited_function&>::type&& std::move<priorited_function&>(priorited_function&) [64]
                0.01    0.00  977638/2455468     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [69]
-----------------------------------------------
                0.04    0.18  778080/2737323     std::function<void ()>::operator=(std::function<void ()>&&) [13]
                0.10    0.45 1959243/2737323     std::function<void ()>::function(std::function<void ()>&&) [11]
[10]    33.8    0.14    0.63 2737323         std::function<void ()>::swap(std::function<void ()>&) [10]
                0.10    0.14 2737319/2737319     void std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&)) [16]
                0.09    0.13 2737234/2737234     void std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&) [23]
                0.09    0.09 2737409/2737409     void std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [28]
-----------------------------------------------
                0.01    0.10  287791/1959290     priorited_function::priorited_function(unsigned int, std::function<void ()>) [36]
                0.02    0.27  777989/1959290     std::function<void ()>::operator=(std::function<void ()>&&) [13]
                0.02    0.31  893510/1959290     priorited_function::priorited_function(priorited_function&&) [14]
[11]    31.4    0.04    0.68 1959290         std::function<void ()>::function(std::function<void ()>&&) [11]
                0.10    0.45 1959243/2737323     std::function<void ()>::swap(std::function<void ()>&) [10]
                0.09    0.00 1959371/2518569     std::_Function_base::_Function_base() [40]
                0.03    0.00 1959186/2518267     std::_Maybe_unary_or_binary_function<void>::_Maybe_unary_or_binary_function() [66]
-----------------------------------------------
                0.00    0.01    9025/777955      void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [26]
                0.01    0.10  131115/777955      void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
                0.02    0.49  637815/777955      void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >) [9]
[12]    27.8    0.03    0.60  777955         priorited_function::operator=(priorited_function&&) [12]
                0.06    0.54  777981/777981      std::function<void ()>::operator=(std::function<void ()>&&) [13]
-----------------------------------------------
                0.06    0.54  777981/777981      priorited_function::operator=(priorited_function&&) [12]
[13]    26.4    0.06    0.54  777981         std::function<void ()>::operator=(std::function<void ()>&&) [13]
                0.02    0.27  777989/1959290     std::function<void ()>::function(std::function<void ()>&&) [11]
                0.04    0.18  778080/2737323     std::function<void ()>::swap(std::function<void ()>&) [10]
                0.02    0.02  778064/2530395     std::function<void ()>::~function() [42]
                0.01    0.00  778009/1065707     std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&) [91]
-----------------------------------------------
                0.00    0.00    9083/893513      void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
                0.00    0.01   18067/893513      void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [26]
                0.01    0.11  288744/893513      void __gnu_cxx::new_allocator<priorited_function>::construct<priorited_function, priorited_function>(priorited_function*, priorited_function&&) [33]
                0.01    0.21  577619/893513      void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
[14]    15.2    0.02    0.33  893513         priorited_function::priorited_function(priorited_function&&) [14]
                0.02    0.31  893510/1959290     std::function<void ()>::function(std::function<void ()>&&) [11]
-----------------------------------------------
                0.03    0.30  288721/288721      void std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::emplace<priorited_function>(priorited_function&&) [7]
[15]    14.6    0.03    0.30  288721         void std::vector<priorited_function, std::allocator<priorited_function> >::emplace_back<priorited_function>(priorited_function&&) [15]
                0.02    0.14  288723/288742      _ZNSt16allocator_traitsISaI18priorited_functionEE9constructIS0_IS0_EEEvRS1_PT_DpOT0_ [30]
                0.00    0.14      19/19          void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
                0.00    0.00  288704/1154822     priorited_function&& std::forward<priorited_function>(std::remove_reference<priorited_function>::type&) [103]
-----------------------------------------------
                0.10    0.14 2737319/2737319     std::function<void ()>::swap(std::function<void ()>&) [10]
[16]    10.1    0.10    0.14 2737319         void std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&)) [16]
                0.14    0.00 8211903/8211903     std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&)) [32]
-----------------------------------------------
                0.00    0.22       4/4           void std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::operator()<, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*) const [18]
[17]     9.7    0.00    0.22       4         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
                0.00    0.20    9005/9005        std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::pop() [24]
                0.00    0.02    9068/9068        priorited_function::operator()() [75]
                0.00    0.00    8955/271094      priorited_function::priorited_function(priorited_function const&) [52]
                0.00    0.00    8959/1464174     priorited_function::~priorited_function() [39]
                0.00    0.00    9084/9084        multi::unique_lock<multi::mutex>::unlock() [130]
                0.00    0.00    8267/8267        multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::~scope_guard() [132]
                0.00    0.00       4/287570      multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&) [86]
                0.00    0.00       4/288994      multi::unique_lock<multi::mutex>::~unique_lock() [106]
                0.00    0.00   18034/18040       multi::condition_variable::notify_all() [178]
                0.00    0.00    9073/9073        multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(multi::p_::scope_guard&&) [186]
                0.00    0.00    8985/8985        void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}) [197]
                0.00    0.00    8979/8981        std::bitset<2ul>::operator[](unsigned long) [198]
                0.00    0.00    8970/8970        pqueue<priorited_function>::front() const [199]
                0.00    0.00    8969/8969        std::remove_reference<priorited_function const&>::type&& std::move<priorited_function const&>(priorited_function const&) [201]
                0.00    0.00    8959/8961        std::bitset<2ul>::reference::~reference() [204]
                0.00    0.00    8942/8942        std::bitset<2ul>::reference::operator bool() const [211]
                0.00    0.00       4/4           multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(multi::p_::scope_guard&&) [262]
                0.00    0.00       4/4           multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::~scope_guard() [264]
                0.00    0.00       1/3           std::bitset<2ul>::reference::operator=(bool) [319]
-----------------------------------------------
                0.00    0.22       4/4           void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [19]
[18]     9.7    0.00    0.22       4         void std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::operator()<, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*) const [18]
                0.00    0.22       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
-----------------------------------------------
                0.00    0.22       4/4           void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::operator()<, void>() [20]
[19]     9.7    0.00    0.22       4         void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [19]
                0.00    0.22       4/4           void std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::operator()<, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*) const [18]
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type& std::get<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [288]
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::_Mu<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false, false>::operator()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<> >(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<>&) const volatile [286]
-----------------------------------------------
                0.00    0.22       4/4           multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::operator()(void*) const [21]
[20]     9.7    0.00    0.22       4         void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::operator()<, void>() [20]
                0.00    0.22       4/4           void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [19]
                0.00    0.00       4/9068        std::tuple<> std::forward_as_tuple<>() [189]
-----------------------------------------------
                0.00    0.22       4/4           multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::_FUN(void*) [22]
[21]     9.7    0.00    0.22       4         multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::operator()(void*) const [21]
                0.00    0.22       4/4           void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::operator()<, void>() [20]
-----------------------------------------------
                                                 <spontaneous>
[22]     9.7    0.00    0.22                 multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::_FUN(void*) [22]
                0.00    0.22       4/4           multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::operator()(void*) const [21]
-----------------------------------------------
                0.09    0.13 2737234/2737234     std::function<void ()>::swap(std::function<void ()>&) [10]
[23]     9.6    0.09    0.13 2737234         void std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&) [23]
                0.13    0.00 8211877/8211877     std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&) [35]
-----------------------------------------------
                0.00    0.20    9005/9005        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[24]     8.6    0.00    0.20    9005         std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::pop() [24]
                0.00    0.19    9016/9016        void std::pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [25]
                0.00    0.00    9086/9086        std::vector<priorited_function, std::allocator<priorited_function> >::pop_back() [126]
                0.00    0.00    8994/297760      std::vector<priorited_function, std::allocator<priorited_function> >::end() [98]
                0.00    0.00    8993/297777      std::vector<priorited_function, std::allocator<priorited_function> >::begin() [97]
-----------------------------------------------
                0.00    0.19    9016/9016        std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::pop() [24]
[25]     8.5    0.00    0.19    9016         void std::pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [25]
                0.00    0.19    9016/9016        void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [26]
                0.00    0.00    9004/306917      __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::difference_type __gnu_cxx::operator-<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [72]
                0.00    0.00    9014/9015        __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_iter<std::less<priorited_function> >(std::less<priorited_function>) [192]
                0.00    0.00    9001/9001        __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator--() [194]
-----------------------------------------------
                0.00    0.19    9016/9016        void std::pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [25]
[26]     8.5    0.00    0.19    9016         void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [26]
                0.01    0.17    9061/9061        void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
                0.00    0.01    9025/777955      priorited_function::operator=(priorited_function&&) [12]
                0.00    0.01   18067/893513      priorited_function::priorited_function(priorited_function&&) [14]
                0.00    0.00   18175/1464174     priorited_function::~priorited_function() [39]
                0.00    0.00    9061/306917      __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::difference_type __gnu_cxx::operator-<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [72]
                0.00    0.00   27110/1671533     std::remove_reference<priorited_function&>::type&& std::move<priorited_function&>(priorited_function&) [64]
                0.00    0.00   27072/2455468     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [69]
-----------------------------------------------
                0.03    0.15  288140/288140      main::{lambda()#2}::operator()() const [4]
[27]     7.9    0.03    0.15  288140         std::function<void ()>::function<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>, void, void>(std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>) [27]
                0.01    0.12  287986/287986      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long)) [34]
                0.01    0.00  288089/2518569     std::_Function_base::_Function_base() [40]
                0.00    0.00  287987/2518267     std::_Maybe_unary_or_binary_function<void>::_Maybe_unary_or_binary_function() [66]
                0.00    0.00  288041/288041      bool std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_not_empty_function<main::{lambda(unsigned long)#1} (unsigned long)>(main::{lambda(unsigned long)#1} ( const&)(unsigned long)) [166]
                0.00    0.00  287990/863824      std::remove_reference<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>::type&& std::move<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>(std::remove_reference&&) [159]
-----------------------------------------------
                0.09    0.09 2737409/2737409     std::function<void ()>::swap(std::function<void ()>&) [10]
[28]     7.9    0.09    0.09 2737409         void std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [28]
                0.09    0.00 8212005/8212005     std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [48]
-----------------------------------------------
                0.01    0.17    9061/9061        void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [26]
[29]     7.7    0.01    0.17    9061         void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
                0.01    0.10  131115/777955      priorited_function::operator=(priorited_function&&) [12]
                0.00    0.02    9093/297925      void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >) [9]
                0.00    0.02  130995/130995      bool __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >) [88]
                0.01    0.00  524285/2139675     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator+(long) const [70]
                0.00    0.00  140219/1671533     std::remove_reference<priorited_function&>::type&& std::move<priorited_function&>(priorited_function&) [64]
                0.00    0.00    9083/893513      priorited_function::priorited_function(priorited_function&&) [14]
                0.00    0.00  262225/2455468     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [69]
                0.00    0.00    9089/1464174     priorited_function::~priorited_function() [39]
                0.00    0.00    9082/9082        __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(__gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [135]
-----------------------------------------------
                0.00    0.00      19/288742      void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
                0.02    0.14  288723/288742      void std::vector<priorited_function, std::allocator<priorited_function> >::emplace_back<priorited_function>(priorited_function&&) [15]
[30]     6.9    0.02    0.14  288742         _ZNSt16allocator_traitsISaI18priorited_functionEE9constructIS0_IS0_EEEvRS1_PT_DpOT0_ [30]
                0.02    0.11  288755/288755      void __gnu_cxx::new_allocator<priorited_function>::construct<priorited_function, priorited_function>(priorited_function*, priorited_function&&) [33]
                0.00    0.00  288710/1154822     priorited_function&& std::forward<priorited_function>(std::remove_reference<priorited_function>::type&) [103]
-----------------------------------------------
                0.00    0.14      19/19          void std::vector<priorited_function, std::allocator<priorited_function> >::emplace_back<priorited_function>(priorited_function&&) [15]
[31]     6.3    0.00    0.14      19         void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
                0.00    0.09      19/19          priorited_function* std::__uninitialized_move_if_noexcept_a<priorited_function*, priorited_function*, std::allocator<priorited_function> >(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&) [47]
                0.00    0.05      19/24          void std::_Destroy<priorited_function*, priorited_function>(priorited_function*, priorited_function*, std::allocator<priorited_function>&) [56]
                0.00    0.00      19/288742      _ZNSt16allocator_traitsISaI18priorited_functionEE9constructIS0_IS0_EEEvRS1_PT_DpOT0_ [30]
                0.00    0.00      19/1154822     priorited_function&& std::forward<priorited_function>(std::remove_reference<priorited_function>::type&) [103]
                0.00    0.00      38/44          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() [224]
                0.00    0.00      19/19          std::vector<priorited_function, std::allocator<priorited_function> >::_M_check_len(unsigned long, char const*) const [235]
                0.00    0.00      19/19          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_allocate(unsigned long) [236]
                0.00    0.00      19/95          std::vector<priorited_function, std::allocator<priorited_function> >::size() const [222]
                0.00    0.00      19/21          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_deallocate(priorited_function*, unsigned long) [232]
-----------------------------------------------
                0.14    0.00 8211903/8211903     void std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&)) [16]
[32]     5.9    0.14    0.00 8211903         std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&)) [32]
-----------------------------------------------
                0.02    0.11  288755/288755      _ZNSt16allocator_traitsISaI18priorited_functionEE9constructIS0_IS0_EEEvRS1_PT_DpOT0_ [30]
[33]     5.9    0.02    0.11  288755         void __gnu_cxx::new_allocator<priorited_function>::construct<priorited_function, priorited_function>(priorited_function*, priorited_function&&) [33]
                0.01    0.11  288744/893513      priorited_function::priorited_function(priorited_function&&) [14]
                0.00    0.00  288713/1154822     priorited_function&& std::forward<priorited_function>(std::remove_reference<priorited_function>::type&) [103]
                0.00    0.00  288742/550886      operator new(unsigned long, void*) [161]
-----------------------------------------------
                0.01    0.12  287986/287986      std::function<void ()>::function<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>, void, void>(std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>) [27]
[34]     5.8    0.01    0.12  287986         std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long)) [34]
                0.01    0.11  287936/287936      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long), std::integral_constant<bool, false>) [38]
                0.00    0.00  287928/863824      std::remove_reference<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>::type&& std::move<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>(std::remove_reference&&) [159]
-----------------------------------------------
                0.13    0.00 8211877/8211877     void std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&) [23]
[35]     5.7    0.13    0.00 8211877         std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&) [35]
-----------------------------------------------
                0.02    0.11  287892/287892      main::{lambda()#2}::operator()() const [4]
[36]     5.6    0.02    0.11  287892         priorited_function::priorited_function(unsigned int, std::function<void ()>) [36]
                0.01    0.10  287791/1959290     std::function<void ()>::function(std::function<void ()>&&) [11]
                0.00    0.00  287698/1065707     std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&) [91]
-----------------------------------------------
                0.03    0.09  288251/288251      main::{lambda()#2}::operator()() const [4]
[37]     5.5    0.03    0.09  288251         std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >::value, std::decay, unsigned long&>::type std::bind<main::{lambda(unsigned long)#1}&, unsigned long&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >&&)...) [37]
                0.02    0.06  288241/288241      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind<unsigned long&>({lambda(unsigned long)#1} const&, unsigned long&) [49]
                0.01    0.00  288255/288255      std::_Maybe_wrap_member_pointer<main::{lambda(unsigned long)#1}>::__do_wrap({lambda(unsigned long)#1} const&) [100]
                0.00    0.00  288168/1449581     unsigned long& std::forward<unsigned long&>(std::remove_reference<unsigned long&>::type&) [82]
                0.00    0.00  288221/288221      main::{lambda(unsigned long)#1}& std::forward<main::{lambda(unsigned long)#1}&>(std::remove_reference<main::{lambda(unsigned long)#1}&>::type&) [165]
-----------------------------------------------
                0.01    0.11  287936/287936      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long)) [34]
[38]     5.4    0.01    0.11  287936         std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long), std::integral_constant<bool, false>) [38]
                0.03    0.07  288058/288058      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind(main::{lambda(unsigned long)#1} (&&)(unsigned long)) [43]
                0.01    0.00  287913/1129580     std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() [73]
                0.00    0.00  287906/863824      std::remove_reference<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>::type&& std::move<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>(std::remove_reference&&) [159]
-----------------------------------------------
                0.00    0.00    8959/1464174     multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
                0.00    0.00    9086/1464174     void __gnu_cxx::new_allocator<priorited_function>::destroy<priorited_function>(priorited_function*) [125]
                0.00    0.00    9089/1464174     void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
                0.00    0.00   18175/1464174     void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [26]
                0.01    0.01  288333/1464174     main::{lambda()#2}::operator()() const [4]
                0.02    0.02  552566/1464174     void std::_Destroy<priorited_function>(priorited_function*) [63]
                0.02    0.02  577966/1464174     void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
[39]     5.3    0.06    0.06 1464174         priorited_function::~priorited_function() [39]
                0.03    0.03 1464023/2530395     std::function<void ()>::~function() [42]
-----------------------------------------------
                0.01    0.00  271109/2518569     std::function<void ()>::function(std::function<void ()> const&) [53]
                0.01    0.00  288089/2518569     std::function<void ()>::function<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>, void, void>(std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>) [27]
                0.09    0.00 1959371/2518569     std::function<void ()>::function(std::function<void ()>&&) [11]
[40]     5.3    0.12    0.00 2518569         std::_Function_base::_Function_base() [40]
-----------------------------------------------
                0.05    0.07  637785/637785      void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >) [9]
[41]     5.2    0.05    0.07  637785         bool __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function>(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function&) [41]
                0.02    0.05  637777/768779      std::less<priorited_function>::operator()(priorited_function const&, priorited_function const&) const [50]
                0.01    0.00  637760/2455468     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [69]
-----------------------------------------------
                0.01    0.01  288308/2530395     main::{lambda()#2}::operator()() const [4]
                0.02    0.02  778064/2530395     std::function<void ()>::operator=(std::function<void ()>&&) [13]
                0.03    0.03 1464023/2530395     priorited_function::~priorited_function() [39]
[42]     4.6    0.05    0.06 2530395         std::function<void ()>::~function() [42]
                0.02    0.04 2530293/2530293     std::_Function_base::~_Function_base() [58]
-----------------------------------------------
                0.03    0.07  288058/288058      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long), std::integral_constant<bool, false>) [38]
[43]     4.6    0.03    0.07  288058         std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind(main::{lambda(unsigned long)#1} (&&)(unsigned long)) [43]
                0.00    0.05  287885/287885      std::tuple<unsigned long>::tuple(std::tuple<unsigned long>&&) [61]
                0.01    0.01  287859/575988      std::_Weak_result_type<main::{lambda(unsigned long)#1}>::_Weak_result_type() [60]
                0.00    0.00  287819/287819      std::remove_reference<main::{lambda(unsigned long)#1}&>::type&& std::move<main::{lambda(unsigned long)#1}&>(std::remove_reference&&) [167]
                0.00    0.00  287711/287711      std::remove_reference<std::tuple<unsigned long>&>::type&& std::move<std::tuple<unsigned long>&>(std::tuple<unsigned long>&) [168]
-----------------------------------------------
                0.02    0.07      19/19          priorited_function* std::uninitialized_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*) [45]
[44]     4.2    0.02    0.07      19         priorited_function* std::__uninitialized_copy<false>::__uninit_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*) [44]
                0.01    0.06  262135/262135      _ZSt10_ConstructI18priorited_functionIRS0_EEvPT_DpOT0_ [51]
                0.00    0.00  262135/814698      priorited_function* std::__addressof<priorited_function>(priorited_function&) [92]
-----------------------------------------------
                0.00    0.09      19/19          priorited_function* std::__uninitialized_copy_a<priorited_function*, priorited_function*, priorited_function>(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&) [46]
[45]     4.2    0.00    0.09      19         priorited_function* std::uninitialized_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*) [45]
                0.02    0.07      19/19          priorited_function* std::__uninitialized_copy<false>::__uninit_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*) [44]
-----------------------------------------------
                0.00    0.09      19/19          priorited_function* std::__uninitialized_move_if_noexcept_a<priorited_function*, priorited_function*, std::allocator<priorited_function> >(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&) [47]
[46]     4.2    0.00    0.09      19         priorited_function* std::__uninitialized_copy_a<priorited_function*, priorited_function*, priorited_function>(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&) [46]
                0.00    0.09      19/19          priorited_function* std::uninitialized_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*) [45]
-----------------------------------------------
                0.00    0.09      19/19          void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
[47]     4.2    0.00    0.09      19         priorited_function* std::__uninitialized_move_if_noexcept_a<priorited_function*, priorited_function*, std::allocator<priorited_function> >(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&) [47]
                0.00    0.09      19/19          priorited_function* std::__uninitialized_copy_a<priorited_function*, priorited_function*, priorited_function>(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&) [46]
                0.00    0.00      38/38          priorited_function* std::__make_move_if_noexcept_iterator<priorited_function*, priorited_function*>(priorited_function*) [228]
-----------------------------------------------
                0.09    0.00 8212005/8212005     void std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [28]
[48]     3.9    0.09    0.00 8212005         std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [48]
-----------------------------------------------
                0.02    0.06  288241/288241      std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >::value, std::decay, unsigned long&>::type std::bind<main::{lambda(unsigned long)#1}&, unsigned long&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >&&)...) [37]
[49]     3.5    0.02    0.06  288241         std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind<unsigned long&>({lambda(unsigned long)#1} const&, unsigned long&) [49]
                0.00    0.03  288106/288106      std::tuple<unsigned long>::tuple<unsigned long&, void>(unsigned long&) [68]
                0.01    0.02  288129/575988      std::_Weak_result_type<main::{lambda(unsigned long)#1}>::_Weak_result_type() [60]
                0.00    0.00  288124/1449581     unsigned long& std::forward<unsigned long&>(std::remove_reference<unsigned long&>::type&) [82]
-----------------------------------------------
                0.00    0.01  131002/768779      bool __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >) [88]
                0.02    0.05  637777/768779      bool __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function>(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function&) [41]
[50]     3.5    0.02    0.06  768779         std::less<priorited_function>::operator()(priorited_function const&, priorited_function const&) const [50]
                0.02    0.04  768789/768789      operator<(priorited_function const&, priorited_function const&) [57]
-----------------------------------------------
                0.01    0.06  262135/262135      priorited_function* std::__uninitialized_copy<false>::__uninit_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*) [44]
[51]     3.1    0.01    0.06  262135         _ZSt10_ConstructI18priorited_functionIRS0_EEvPT_DpOT0_ [51]
                0.00    0.06  262139/271094      priorited_function::priorited_function(priorited_function const&) [52]
                0.00    0.00  262137/550886      operator new(unsigned long, void*) [161]
                0.00    0.00  262136/262136      priorited_function& std::forward<priorited_function&>(std::remove_reference<priorited_function&>::type&) [173]
-----------------------------------------------
                0.00    0.00    8955/271094      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
                0.00    0.06  262139/271094      _ZSt10_ConstructI18priorited_functionIRS0_EEvPT_DpOT0_ [51]
[52]     2.8    0.00    0.06  271094         priorited_function::priorited_function(priorited_function const&) [52]
                0.02    0.04  271082/271082      std::function<void ()>::function(std::function<void ()> const&) [53]
-----------------------------------------------
                0.02    0.04  271082/271082      priorited_function::priorited_function(priorited_function const&) [52]
[53]     2.8    0.02    0.04  271082         std::function<void ()>::function(std::function<void ()> const&) [53]
                0.00    0.02  271130/841647      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::_Manager_operation) [59]
                0.01    0.00  271109/2518569     std::_Function_base::_Function_base() [40]
                0.00    0.01  271112/271112      std::function<void ()>::operator bool() const [105]
                0.00    0.00  271094/2518267     std::_Maybe_unary_or_binary_function<void>::_Maybe_unary_or_binary_function() [66]
-----------------------------------------------
                0.01    0.05      24/24          void std::_Destroy<priorited_function*>(priorited_function*, priorited_function*) [55]
[54]     2.7    0.01    0.05      24         void std::_Destroy_aux<false>::__destroy<priorited_function*>(priorited_function*, priorited_function*) [54]
                0.00    0.05  552566/552566      void std::_Destroy<priorited_function>(priorited_function*) [63]
                0.01    0.00  552563/814698      priorited_function* std::__addressof<priorited_function>(priorited_function&) [92]
-----------------------------------------------
                0.00    0.06      24/24          void std::_Destroy<priorited_function*, priorited_function>(priorited_function*, priorited_function*, std::allocator<priorited_function>&) [56]
[55]     2.7    0.00    0.06      24         void std::_Destroy<priorited_function*>(priorited_function*, priorited_function*) [55]
                0.01    0.05      24/24          void std::_Destroy_aux<false>::__destroy<priorited_function*>(priorited_function*, priorited_function*) [54]
-----------------------------------------------
                0.00    0.01       2/24          std::vector<priorited_function, std::allocator<priorited_function> >::~vector() [117]
                0.00    0.01       3/24          std::vector<priorited_function, std::allocator<priorited_function> >::_M_erase_at_end(priorited_function*) [114]
                0.00    0.05      19/24          void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
[56]     2.7    0.00    0.06      24         void std::_Destroy<priorited_function*, priorited_function>(priorited_function*, priorited_function*, std::allocator<priorited_function>&) [56]
                0.00    0.06      24/24          void std::_Destroy<priorited_function*>(priorited_function*, priorited_function*) [55]
-----------------------------------------------
                0.02    0.04  768789/768789      std::less<priorited_function>::operator()(priorited_function const&, priorited_function const&) const [50]
[57]     2.6    0.02    0.04  768789         operator<(priorited_function const&, priorited_function const&) [57]
                0.04    0.00 1537575/1537575     priorited_function::priority() const [65]
-----------------------------------------------
                0.02    0.04 2530293/2530293     std::function<void ()>::~function() [42]
[58]     2.4    0.02    0.04 2530293         std::_Function_base::~_Function_base() [58]
                0.00    0.04  570517/841647      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::_Manager_operation) [59]
-----------------------------------------------
                0.00    0.02  271130/841647      std::function<void ()>::function(std::function<void ()> const&) [53]
                0.00    0.04  570517/841647      std::_Function_base::~_Function_base() [58]
[59]     2.3    0.00    0.05  841647         std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::_Manager_operation) [59]
                0.02    0.02  570527/570527      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [67]
                0.01    0.01  271100/271100      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::integral_constant<bool, false>) [87]
-----------------------------------------------
                0.01    0.01  287859/575988      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind(main::{lambda(unsigned long)#1} (&&)(unsigned long)) [43]
                0.01    0.02  288129/575988      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind<unsigned long&>({lambda(unsigned long)#1} const&, unsigned long&) [49]
[60]     2.2    0.02    0.03  575988         std::_Weak_result_type<main::{lambda(unsigned long)#1}>::_Weak_result_type() [60]
                0.03    0.00  575973/575973      std::_Weak_result_type_impl<main::{lambda(unsigned long)#1}>::_Weak_result_type_impl() [71]
-----------------------------------------------
                0.00    0.05  287885/287885      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind(main::{lambda(unsigned long)#1} (&&)(unsigned long)) [43]
[61]     2.2    0.00    0.05  287885         std::tuple<unsigned long>::tuple(std::tuple<unsigned long>&&) [61]
                0.00    0.05  287765/287765      std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl(std::_Tuple_impl<0ul, unsigned long>&&) [62]
-----------------------------------------------
                0.00    0.05  287765/287765      std::tuple<unsigned long>::tuple(std::tuple<unsigned long>&&) [61]
[62]     2.2    0.00    0.05  287765         std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl(std::_Tuple_impl<0ul, unsigned long>&&) [62]
                0.01    0.01  287803/287803      std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long>(unsigned long&&) [81]
                0.02    0.00  287821/296887      std::_Tuple_impl<0ul, unsigned long>::_M_head(std::_Tuple_impl<0ul, unsigned long>&) [84]
                0.01    0.00  287788/575632      unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&) [83]
-----------------------------------------------
                0.00    0.05  552566/552566      void std::_Destroy_aux<false>::__destroy<priorited_function*>(priorited_function*, priorited_function*) [54]
[63]     2.0    0.00    0.05  552566         void std::_Destroy<priorited_function>(priorited_function*) [63]
                0.02    0.02  552566/1464174     priorited_function::~priorited_function() [39]
-----------------------------------------------
                0.00    0.00   27110/1671533     void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [26]
                0.00    0.00  140219/1671533     void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
                0.01    0.00  288787/1671533     multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::enqueue(priorited_function) [6]
                0.02    0.00  577603/1671533     void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
                0.02    0.00  637814/1671533     void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >) [9]
[64]     2.0    0.05    0.00 1671533         std::remove_reference<priorited_function&>::type&& std::move<priorited_function&>(priorited_function&) [64]
-----------------------------------------------
                0.04    0.00 1537575/1537575     operator<(priorited_function const&, priorited_function const&) [57]
[65]     1.8    0.04    0.00 1537575         priorited_function::priority() const [65]
-----------------------------------------------
                0.00    0.00  271094/2518267     std::function<void ()>::function(std::function<void ()> const&) [53]
                0.00    0.00  287987/2518267     std::function<void ()>::function<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>, void, void>(std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>) [27]
                0.03    0.00 1959186/2518267     std::function<void ()>::function(std::function<void ()>&&) [11]
[66]     1.8    0.04    0.00 2518267         std::_Maybe_unary_or_binary_function<void>::_Maybe_unary_or_binary_function() [66]
-----------------------------------------------
                0.02    0.02  570527/570527      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::_Manager_operation) [59]
[67]     1.5    0.02    0.02  570527         std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [67]
                0.01    0.01  570530/1129580     std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() [73]
-----------------------------------------------
                0.00    0.03  288106/288106      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind<unsigned long&>({lambda(unsigned long)#1} const&, unsigned long&) [49]
[68]     1.4    0.00    0.03  288106         std::tuple<unsigned long>::tuple<unsigned long&, void>(unsigned long&) [68]
                0.01    0.02  288096/288096      std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl<unsigned long&>(unsigned long&) [74]
                0.00    0.00  288108/1449581     unsigned long& std::forward<unsigned long&>(std::remove_reference<unsigned long&>::type&) [82]
-----------------------------------------------
                0.00    0.00   27072/2455468     void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [26]
                0.00    0.00  262017/2455468     bool __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >) [88]
                0.00    0.00  262225/2455468     void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
                0.00    0.00  288756/2455468     void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
                0.01    0.00  637760/2455468     bool __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function>(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function&) [41]
                0.01    0.00  977638/2455468     void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >) [9]
[69]     1.3    0.03    0.00 2455468         __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [69]
-----------------------------------------------
                0.01    0.00  524285/2139675     void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
                0.02    0.00 1615390/2139675     void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >) [9]
[70]     1.3    0.03    0.00 2139675         __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator+(long) const [70]
                0.00    0.00 2139568/3023775     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function* const&) [158]
-----------------------------------------------
                0.03    0.00  575973/575973      std::_Weak_result_type<main::{lambda(unsigned long)#1}>::_Weak_result_type() [60]
[71]     1.3    0.03    0.00  575973         std::_Weak_result_type_impl<main::{lambda(unsigned long)#1}>::_Weak_result_type_impl() [71]
                0.00    0.00  576121/576121      std::_Maybe_get_result_type<main::{lambda(unsigned long)#1}, void>::_Maybe_get_result_type() [160]
-----------------------------------------------
                0.00    0.00       1/306917      void std::__make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [148]
                0.00    0.00    9004/306917      void std::pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [25]
                0.00    0.00    9061/306917      void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [26]
                0.02    0.01  288851/306917      void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
[72]     1.3    0.02    0.01  306917         __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::difference_type __gnu_cxx::operator-<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [72]
                0.01    0.00  613849/613849      __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::base() const [93]
-----------------------------------------------
                0.00    0.00  271137/1129580     std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::integral_constant<bool, false>) [87]
                0.01    0.00  287913/1129580     std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long), std::integral_constant<bool, false>) [38]
                0.01    0.01  570530/1129580     std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [67]
[73]     1.3    0.02    0.01 1129580         std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() [73]
                0.01    0.00 1129485/1129485     std::_Any_data::_M_access() [104]
-----------------------------------------------
                0.01    0.02  288096/288096      std::tuple<unsigned long>::tuple<unsigned long&, void>(unsigned long&) [68]
[74]     1.2    0.01    0.02  288096         std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl<unsigned long&>(unsigned long&) [74]
                0.01    0.00  288094/288094      std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long&>(unsigned long&) [90]
                0.00    0.00  288077/1449581     unsigned long& std::forward<unsigned long&>(std::remove_reference<unsigned long&>::type&) [82]
-----------------------------------------------
                0.00    0.02    9068/9068        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[75]     0.9    0.00    0.02    9068         priorited_function::operator()() [75]
                0.00    0.02    9065/9065        std::function<void ()>::operator()() const [76]
-----------------------------------------------
                0.00    0.02    9065/9065        priorited_function::operator()() [75]
[76]     0.9    0.00    0.02    9065         std::function<void ()>::operator()() const [76]
                0.00    0.02    9067/9067        std::_Function_handler<void (), std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_invoke(std::_Any_data const&) [77]
                0.00    0.00    9064/280170      std::_Function_base::_M_empty() const [101]
-----------------------------------------------
                0.00    0.02    9067/9067        std::function<void ()>::operator()() const [76]
[77]     0.9    0.00    0.02    9067         std::_Function_handler<void (), std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_invoke(std::_Any_data const&) [77]
                0.00    0.02    9063/9063        void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::operator()<, void>() [79]
                0.00    0.00    9064/9064        std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_get_pointer(std::_Any_data const&) [191]
-----------------------------------------------
                0.00    0.02    9066/9066        void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::operator()<, void>() [79]
[78]     0.9    0.00    0.02    9066         void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [78]
                0.00    0.02    9068/9068        main::{lambda(unsigned long)#1}::operator()(unsigned long) const [80]
                0.00    0.00    9061/9061        std::tuple_element<0ul, std::tuple<unsigned long> >::type& std::get<0ul, unsigned long>(std::tuple<unsigned long>&) [128]
                0.00    0.00    9071/9071        unsigned long& std::_Mu<unsigned long, false, false>::operator()<unsigned long&, std::tuple<> >(unsigned long&, std::tuple<>&) const volatile [136]
-----------------------------------------------
                0.00    0.02    9063/9063        std::_Function_handler<void (), std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_invoke(std::_Any_data const&) [77]
[79]     0.9    0.00    0.02    9063         void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::operator()<, void>() [79]
                0.00    0.02    9066/9066        void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [78]
                0.00    0.00    9060/9068        std::tuple<> std::forward_as_tuple<>() [189]
-----------------------------------------------
                0.00    0.02    9068/9068        void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [78]
[80]     0.9    0.00    0.02    9068         main::{lambda(unsigned long)#1}::operator()(unsigned long) const [80]
                0.02    0.00    8591/8591        void multi::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [85]
                0.00    0.00    9067/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00    8708/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00    8997/8997        multi::this_thread::get_id() [196]
                0.00    0.00    8718/8718        std::basic_ostream<char, std::char_traits<char> >& multi::operator<< <char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, multi::thread::id) [214]
                0.00    0.00    8692/8692        std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<int, void>(int const&) [215]
-----------------------------------------------
                0.01    0.01  287803/287803      std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl(std::_Tuple_impl<0ul, unsigned long>&&) [62]
[81]     0.9    0.01    0.01  287803         std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long>(unsigned long&&) [81]
                0.01    0.00  287844/575632      unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&) [83]
-----------------------------------------------
                0.00    0.00    9067/1449581     unsigned long& std::_Mu<unsigned long, false, false>::operator()<unsigned long&, std::tuple<> >(unsigned long&, std::tuple<>&) const volatile [136]
                0.00    0.00  288037/1449581     std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long&>(unsigned long&) [90]
                0.00    0.00  288077/1449581     std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl<unsigned long&>(unsigned long&) [74]
                0.00    0.00  288108/1449581     std::tuple<unsigned long>::tuple<unsigned long&, void>(unsigned long&) [68]
                0.00    0.00  288124/1449581     std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind<unsigned long&>({lambda(unsigned long)#1} const&, unsigned long&) [49]
                0.00    0.00  288168/1449581     std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >::value, std::decay, unsigned long&>::type std::bind<main::{lambda(unsigned long)#1}&, unsigned long&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >&&)...) [37]
[82]     0.9    0.02    0.00 1449581         unsigned long& std::forward<unsigned long&>(std::remove_reference<unsigned long&>::type&) [82]
-----------------------------------------------
                0.01    0.00  287788/575632      std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl(std::_Tuple_impl<0ul, unsigned long>&&) [62]
                0.01    0.00  287844/575632      std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long>(unsigned long&&) [81]
[83]     0.9    0.02    0.00  575632         unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&) [83]
-----------------------------------------------
                0.00    0.00    9066/296887      unsigned long& std::__get_helper<0ul, unsigned long>(std::_Tuple_impl<0ul, unsigned long>&) [127]
                0.02    0.00  287821/296887      std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl(std::_Tuple_impl<0ul, unsigned long>&&) [62]
[84]     0.9    0.02    0.00  296887         std::_Tuple_impl<0ul, unsigned long>::_M_head(std::_Tuple_impl<0ul, unsigned long>&) [84]
                0.00    0.00  296973/296973      std::_Head_base<0ul, unsigned long, false>::_M_head(std::_Head_base<0ul, unsigned long, false>&) [163]
-----------------------------------------------
                0.02    0.00    8591/8591        main::{lambda(unsigned long)#1}::operator()(unsigned long) const [80]
[85]     0.9    0.02    0.00    8591         void multi::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [85]
                0.00    0.00    8566/8579        std::chrono::duration<long, std::ratio<1l, 1000000l> >::count() const [218]
                0.00    0.00    8530/8530        std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [220]
-----------------------------------------------
                0.00    0.00       1/287570      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join() [147]
                0.00    0.00       1/287570      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
                0.00    0.00       1/287570      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
                0.00    0.00       4/287570      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
                0.01    0.01  287563/287570      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::enqueue(priorited_function) [6]
[86]     0.9    0.01    0.01  287570         multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&) [86]
                0.01    0.00  287615/304671      multi::mutex::lock() [96]
                0.00    0.00  287708/287708      multi::mutex* std::addressof<multi::mutex>(multi::mutex&) [169]
-----------------------------------------------
                0.01    0.01  271100/271100      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::_Manager_operation) [59]
[87]     0.8    0.01    0.01  271100         std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::integral_constant<bool, false>) [87]
                0.00    0.00  271137/1129580     std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() [73]
                0.00    0.00  271113/280177      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>* const& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() const [172]
-----------------------------------------------
                0.00    0.02  130995/130995      void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
[88]     0.7    0.00    0.02  130995         bool __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >) [88]
                0.00    0.01  131002/768779      std::less<priorited_function>::operator()(priorited_function const&, priorited_function const&) const [50]
                0.00    0.00  262017/2455468     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [69]
-----------------------------------------------
                0.01    0.00  288848/288848      void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
[89]     0.7    0.01    0.00  288848         __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(std::less<priorited_function>) [89]
                0.00    0.00  288826/297909      __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::_Iter_comp_val(std::less<priorited_function>) [118]
-----------------------------------------------
                0.01    0.00  288094/288094      std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl<unsigned long&>(unsigned long&) [74]
[90]     0.6    0.01    0.00  288094         std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long&>(unsigned long&) [90]
                0.00    0.00  288037/1449581     unsigned long& std::forward<unsigned long&>(std::remove_reference<unsigned long&>::type&) [82]
-----------------------------------------------
                0.00    0.00  287698/1065707     priorited_function::priorited_function(unsigned int, std::function<void ()>) [36]
                0.01    0.00  778009/1065707     std::function<void ()>::operator=(std::function<void ()>&&) [13]
[91]     0.4    0.01    0.00 1065707         std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&) [91]
-----------------------------------------------
                0.00    0.00  262135/814698      priorited_function* std::__uninitialized_copy<false>::__uninit_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*) [44]
                0.01    0.00  552563/814698      void std::_Destroy_aux<false>::__destroy<priorited_function*>(priorited_function*, priorited_function*) [54]
[92]     0.4    0.01    0.00  814698         priorited_function* std::__addressof<priorited_function>(priorited_function&) [92]
-----------------------------------------------
                0.01    0.00  613849/613849      __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::difference_type __gnu_cxx::operator-<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [72]
[93]     0.4    0.01    0.00  613849         __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::base() const [93]
-----------------------------------------------
                0.00    0.00    8644/306715      multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00    9085/306715      multi::unique_lock<multi::mutex>::unlock() [130]
                0.00    0.01  288986/306715      multi::unique_lock<multi::mutex>::~unique_lock() [106]
[94]     0.4    0.00    0.01  306715         multi::mutex::unlock() [94]
                0.01    0.00  306632/306632      multi::p_::mutex::unlock(pthread_mutex_t*) [95]
-----------------------------------------------
                0.01    0.00  306632/306632      multi::mutex::unlock() [94]
[95]     0.4    0.01    0.00  306632         multi::p_::mutex::unlock(pthread_mutex_t*) [95]
-----------------------------------------------
                0.00    0.00    7975/304671      multi::unique_lock<multi::mutex>::lock() [134]
                0.00    0.00    9081/304671      multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.01    0.00  287615/304671      multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&) [86]
[96]     0.4    0.01    0.00  304671         multi::mutex::lock() [96]
                0.00    0.00  304605/304605      multi::p_::mutex::lock(pthread_mutex_t*) [162]
-----------------------------------------------
                0.00    0.00       1/297777      std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::priority_queue(std::less<priorited_function> const&, std::vector<priorited_function, std::allocator<priorited_function> >&&) [139]
                0.00    0.00    8993/297777      std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::pop() [24]
                0.01    0.00  288783/297777      void std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::emplace<priorited_function>(priorited_function&&) [7]
[97]     0.4    0.01    0.00  297777         std::vector<priorited_function, std::allocator<priorited_function> >::begin() [97]
                0.00    0.00  297722/3023775     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function* const&) [158]
-----------------------------------------------
                0.00    0.00       1/297760      std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::priority_queue(std::less<priorited_function> const&, std::vector<priorited_function, std::allocator<priorited_function> >&&) [139]
                0.00    0.00    8994/297760      std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::pop() [24]
                0.01    0.00  288765/297760      void std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::emplace<priorited_function>(priorited_function&&) [7]
[98]     0.4    0.01    0.00  297760         std::vector<priorited_function, std::allocator<priorited_function> >::end() [98]
                0.00    0.00  297736/3023775     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function* const&) [158]
-----------------------------------------------
                0.01    0.00  288739/288739      void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [8]
[99]     0.4    0.01    0.00  288739         __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator-(long) const [99]
                0.00    0.00  288749/3023775     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function* const&) [158]
-----------------------------------------------
                0.01    0.00  288255/288255      std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >::value, std::decay, unsigned long&>::type std::bind<main::{lambda(unsigned long)#1}&, unsigned long&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >&&)...) [37]
[100]    0.4    0.01    0.00  288255         std::_Maybe_wrap_member_pointer<main::{lambda(unsigned long)#1}>::__do_wrap({lambda(unsigned long)#1} const&) [100]
-----------------------------------------------
                0.00    0.00    9064/280170      std::function<void ()>::operator()() const [76]
                0.01    0.00  271106/280170      std::function<void ()>::operator bool() const [105]
[101]    0.4    0.01    0.00  280170         std::_Function_base::_M_empty() const [101]
-----------------------------------------------
                                                 <spontaneous>
[102]    0.4    0.01    0.00                 std::system_error::system_error(int, std::_V2::error_category const&) [102]
-----------------------------------------------
                0.00    0.00      19/1154822     void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
                0.00    0.00  288676/1154822     void std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::emplace<priorited_function>(priorited_function&&) [7]
                0.00    0.00  288704/1154822     void std::vector<priorited_function, std::allocator<priorited_function> >::emplace_back<priorited_function>(priorited_function&&) [15]
                0.00    0.00  288710/1154822     _ZNSt16allocator_traitsISaI18priorited_functionEE9constructIS0_IS0_EEEvRS1_PT_DpOT0_ [30]
                0.00    0.00  288713/1154822     void __gnu_cxx::new_allocator<priorited_function>::construct<priorited_function, priorited_function>(priorited_function*, priorited_function&&) [33]
[103]    0.4    0.01    0.00 1154822         priorited_function&& std::forward<priorited_function>(std::remove_reference<priorited_function>::type&) [103]
-----------------------------------------------
                0.01    0.00 1129485/1129485     std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() [73]
[104]    0.4    0.01    0.00 1129485         std::_Any_data::_M_access() [104]
-----------------------------------------------
                0.00    0.01  271112/271112      std::function<void ()>::function(std::function<void ()> const&) [53]
[105]    0.4    0.00    0.01  271112         std::function<void ()>::operator bool() const [105]
                0.01    0.00  271106/280170      std::_Function_base::_M_empty() const [101]
-----------------------------------------------
                0.00    0.00       1/288994      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join() [147]
                0.00    0.00       1/288994      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
                0.00    0.00       1/288994      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
                0.00    0.00       4/288994      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
                0.00    0.01  288987/288994      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::enqueue(priorited_function) [6]
[106]    0.4    0.00    0.01  288994         multi::unique_lock<multi::mutex>::~unique_lock() [106]
                0.00    0.01  288986/306715      multi::mutex::unlock() [94]
-----------------------------------------------
                0.00    0.01       1/1           void std::_Bind<main::{lambda()#3} ()>::operator()<, void>() [108]
[107]    0.3    0.00    0.01       1         void std::_Bind<main::{lambda()#3} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [107]
                0.00    0.01       1/1           main::{lambda()#3}::operator()() const [109]
-----------------------------------------------
                0.00    0.01       1/1           _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENKUlPvE_clES9_ [110]
[108]    0.3    0.00    0.01       1         void std::_Bind<main::{lambda()#3} ()>::operator()<, void>() [108]
                0.00    0.01       1/1           void std::_Bind<main::{lambda()#3} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [107]
                0.00    0.00       1/9068        std::tuple<> std::forward_as_tuple<>() [189]
-----------------------------------------------
                0.00    0.01       1/1           void std::_Bind<main::{lambda()#3} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [107]
[109]    0.3    0.00    0.01       1         main::{lambda()#3}::operator()() const [109]
                0.00    0.01       3/3           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::discard_queue() [112]
                0.00    0.00       3/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00       3/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00       6/12          void multi::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [242]
                0.00    0.00       5/12          std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&) [244]
-----------------------------------------------
                0.00    0.01       1/1           _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENUlPvE_4_FUNES9_ [111]
[110]    0.3    0.00    0.01       1         _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENKUlPvE_clES9_ [110]
                0.00    0.01       1/1           void std::_Bind<main::{lambda()#3} ()>::operator()<, void>() [108]
-----------------------------------------------
                                                 <spontaneous>
[111]    0.3    0.00    0.01                 _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENUlPvE_4_FUNES9_ [111]
                0.00    0.01       1/1           _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENKUlPvE_clES9_ [110]
-----------------------------------------------
                0.00    0.01       3/3           main::{lambda()#3}::operator()() const [109]
[112]    0.3    0.00    0.01       3         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::discard_queue() [112]
                0.00    0.01       3/3           pqueue<priorited_function>::clear() [113]
                0.00    0.00       3/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00       2/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
-----------------------------------------------
                0.00    0.01       3/3           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::discard_queue() [112]
[113]    0.3    0.00    0.01       3         pqueue<priorited_function>::clear() [113]
                0.00    0.01       3/3           std::vector<priorited_function, std::allocator<priorited_function> >::clear() [115]
-----------------------------------------------
                0.00    0.01       3/3           std::vector<priorited_function, std::allocator<priorited_function> >::clear() [115]
[114]    0.3    0.00    0.01       3         std::vector<priorited_function, std::allocator<priorited_function> >::_M_erase_at_end(priorited_function*) [114]
                0.00    0.01       3/24          void std::_Destroy<priorited_function*, priorited_function>(priorited_function*, priorited_function*, std::allocator<priorited_function>&) [56]
                0.00    0.00       3/44          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() [224]
-----------------------------------------------
                0.00    0.01       3/3           pqueue<priorited_function>::clear() [113]
[115]    0.3    0.00    0.01       3         std::vector<priorited_function, std::allocator<priorited_function> >::clear() [115]
                0.00    0.01       3/3           std::vector<priorited_function, std::allocator<priorited_function> >::_M_erase_at_end(priorited_function*) [114]
-----------------------------------------------
                                                 <spontaneous>
[116]    0.2    0.00    0.01                 main [116]
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException) [119]
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::~thread_pool() [120]
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join() [147]
                0.00    0.00       6/6           multi::thread::join() [253]
                0.00    0.00       5/5           bool __gnu_cxx::operator!=<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >(__gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&, __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&) [259]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::operator*() const [270]
                0.00    0.00       4/4           __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::operator++() [267]
                0.00    0.00       3/3           void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#2}&>(main::{lambda()#2}&) [320]
                0.00    0.00       2/11          multi::thread::~thread() [245]
                0.00    0.00       1/3           multi::mutex::mutex() [301]
                0.00    0.00       1/1           std::vector<multi::thread, std::allocator<multi::thread> >::vector() [395]
                0.00    0.00       1/1           void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#3}&>(main::{lambda()#3}&) [392]
                0.00    0.00       1/1           multi::thread::thread<main::{lambda()#4}>(main::{lambda()#4}&&) [355]
                0.00    0.00       1/1           multi::thread::thread<main::{lambda()#5}>(main::{lambda()#5}&&) [356]
                0.00    0.00       1/1           std::vector<multi::thread, std::allocator<multi::thread> >::begin() [394]
                0.00    0.00       1/1           std::vector<multi::thread, std::allocator<multi::thread> >::end() [393]
                0.00    0.00       1/1           std::vector<multi::thread, std::allocator<multi::thread> >::~vector() [396]
                0.00    0.00       1/3           multi::mutex::~mutex() [302]
-----------------------------------------------
                0.00    0.00       1/2           std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::~priority_queue() [123]
                0.00    0.00       1/2           pqueue<priorited_function>::pqueue() [121]
[117]    0.2    0.00    0.01       2         std::vector<priorited_function, std::allocator<priorited_function> >::~vector() [117]
                0.00    0.01       2/24          void std::_Destroy<priorited_function*, priorited_function>(priorited_function*, priorited_function*, std::allocator<priorited_function>&) [56]
                0.00    0.00       2/44          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() [224]
                0.00    0.00       2/2           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::~_Vector_base() [336]
-----------------------------------------------
                0.00    0.00    9083/297909      __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(__gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [135]
                0.00    0.00  288826/297909      __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(std::less<priorited_function>) [89]
[118]    0.2    0.01    0.00  297909         __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::_Iter_comp_val(std::less<priorited_function>) [118]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[119]    0.1    0.00    0.00       1         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException) [119]
                0.00    0.00       1/1           pqueue<priorited_function>::pqueue() [121]
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
                0.00    0.00       2/3           multi::mutex::mutex() [301]
                0.00    0.00       2/2           multi::condition_variable::condition_variable() [329]
                0.00    0.00       1/1           std::remove_reference<multi::RethrowThreadException&>::type&& std::move<multi::RethrowThreadException&>(multi::RethrowThreadException&) [400]
                0.00    0.00       1/1           std::bitset<2ul>::bitset() [389]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[120]    0.1    0.00    0.00       1         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::~thread_pool() [120]
                0.00    0.00       1/1           pqueue<priorited_function>::~pqueue() [122]
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
                0.00    0.00       2/2           multi::condition_variable::~condition_variable() [330]
                0.00    0.00       2/3           multi::mutex::~mutex() [302]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException) [119]
[121]    0.1    0.00    0.00       1         pqueue<priorited_function>::pqueue() [121]
                0.00    0.00       1/2           std::vector<priorited_function, std::allocator<priorited_function> >::~vector() [117]
                0.00    0.00       1/1           std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::priority_queue(std::less<priorited_function> const&, std::vector<priorited_function, std::allocator<priorited_function> >&&) [139]
                0.00    0.00       1/1           std::vector<priorited_function, std::allocator<priorited_function> >::vector() [390]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::~thread_pool() [120]
[122]    0.1    0.00    0.00       1         pqueue<priorited_function>::~pqueue() [122]
                0.00    0.00       1/1           std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::~priority_queue() [123]
-----------------------------------------------
                0.00    0.00       1/1           pqueue<priorited_function>::~pqueue() [122]
[123]    0.1    0.00    0.00       1         std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::~priority_queue() [123]
                0.00    0.00       1/2           std::vector<priorited_function, std::allocator<priorited_function> >::~vector() [117]
-----------------------------------------------
                0.00    0.00    9087/9087        std::vector<priorited_function, std::allocator<priorited_function> >::pop_back() [126]
[124]    0.0    0.00    0.00    9087         void std::allocator_traits<std::allocator<priorited_function> >::destroy<priorited_function>(std::allocator<priorited_function>&, priorited_function*) [124]
                0.00    0.00    9086/9086        void __gnu_cxx::new_allocator<priorited_function>::destroy<priorited_function>(priorited_function*) [125]
-----------------------------------------------
                0.00    0.00    9086/9086        void std::allocator_traits<std::allocator<priorited_function> >::destroy<priorited_function>(std::allocator<priorited_function>&, priorited_function*) [124]
[125]    0.0    0.00    0.00    9086         void __gnu_cxx::new_allocator<priorited_function>::destroy<priorited_function>(priorited_function*) [125]
                0.00    0.00    9086/1464174     priorited_function::~priorited_function() [39]
-----------------------------------------------
                0.00    0.00    9086/9086        std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::pop() [24]
[126]    0.0    0.00    0.00    9086         std::vector<priorited_function, std::allocator<priorited_function> >::pop_back() [126]
                0.00    0.00    9087/9087        void std::allocator_traits<std::allocator<priorited_function> >::destroy<priorited_function>(std::allocator<priorited_function>&, priorited_function*) [124]
-----------------------------------------------
                0.00    0.00    9065/9065        std::tuple_element<0ul, std::tuple<unsigned long> >::type& std::get<0ul, unsigned long>(std::tuple<unsigned long>&) [128]
[127]    0.0    0.00    0.00    9065         unsigned long& std::__get_helper<0ul, unsigned long>(std::_Tuple_impl<0ul, unsigned long>&) [127]
                0.00    0.00    9066/296887      std::_Tuple_impl<0ul, unsigned long>::_M_head(std::_Tuple_impl<0ul, unsigned long>&) [84]
-----------------------------------------------
                0.00    0.00    9061/9061        void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [78]
[128]    0.0    0.00    0.00    9061         std::tuple_element<0ul, std::tuple<unsigned long> >::type& std::get<0ul, unsigned long>(std::tuple<unsigned long>&) [128]
                0.00    0.00    9065/9065        unsigned long& std::__get_helper<0ul, unsigned long>(std::_Tuple_impl<0ul, unsigned long>&) [127]
-----------------------------------------------
                0.00    0.00       1/9081        main::{lambda()#4}::operator()() const [142]
                0.00    0.00       1/9081        main::{lambda()#5}::operator()() const [143]
                0.00    0.00       1/9081        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::pause() [151]
                0.00    0.00       1/9081        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::resume() [150]
                0.00    0.00       1/9081        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
                0.00    0.00       1/9081        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
                0.00    0.00       2/9081        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::discard_queue() [112]
                0.00    0.00       3/9081        main::{lambda()#2}::operator()() const [4]
                0.00    0.00       3/9081        main::{lambda()#3}::operator()() const [109]
                0.00    0.00    9067/9081        main::{lambda(unsigned long)#1}::operator()(unsigned long) const [80]
[129]    0.0    0.00    0.00    9081         multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00    9081/304671      multi::mutex::lock() [96]
-----------------------------------------------
                0.00    0.00    9084/9084        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[130]    0.0    0.00    0.00    9084         multi::unique_lock<multi::mutex>::unlock() [130]
                0.00    0.00    9085/306715      multi::mutex::unlock() [94]
-----------------------------------------------
                0.00    0.00       1/8723        main::{lambda()#4}::operator()() const [142]
                0.00    0.00       1/8723        main::{lambda()#5}::operator()() const [143]
                0.00    0.00       1/8723        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::pause() [151]
                0.00    0.00       1/8723        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::resume() [150]
                0.00    0.00       1/8723        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
                0.00    0.00       1/8723        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
                0.00    0.00       3/8723        main::{lambda()#2}::operator()() const [4]
                0.00    0.00       3/8723        main::{lambda()#3}::operator()() const [109]
                0.00    0.00       3/8723        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::discard_queue() [112]
                0.00    0.00    8708/8723        main::{lambda(unsigned long)#1}::operator()(unsigned long) const [80]
[131]    0.0    0.00    0.00    8723         multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00    8644/306715      multi::mutex::unlock() [94]
-----------------------------------------------
                0.00    0.00    8267/8267        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[132]    0.0    0.00    0.00    8267         multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::~scope_guard() [132]
                0.00    0.00    8044/8044        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}::operator()() const [133]
-----------------------------------------------
                0.00    0.00    8044/8044        multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::~scope_guard() [132]
[133]    0.0    0.00    0.00    8044         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}::operator()() const [133]
                0.00    0.00    7981/7981        multi::unique_lock<multi::mutex>::lock() [134]
-----------------------------------------------
                0.00    0.00    7981/7981        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}::operator()() const [133]
[134]    0.0    0.00    0.00    7981         multi::unique_lock<multi::mutex>::lock() [134]
                0.00    0.00    7975/304671      multi::mutex::lock() [96]
                0.00    0.00    8047/8047        multi::unique_lock<multi::mutex>::lock_assert(bool, bool) [221]
-----------------------------------------------
                0.00    0.00    9082/9082        void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [29]
[135]    0.0    0.00    0.00    9082         __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(__gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [135]
                0.00    0.00    9083/297909      __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::_Iter_comp_val(std::less<priorited_function>) [118]
-----------------------------------------------
                0.00    0.00    9071/9071        void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [78]
[136]    0.0    0.00    0.00    9071         unsigned long& std::_Mu<unsigned long, false, false>::operator()<unsigned long&, std::tuple<> >(unsigned long&, std::tuple<>&) const volatile [136]
                0.00    0.00    9067/1449581     unsigned long& std::forward<unsigned long&>(std::remove_reference<unsigned long&>::type&) [82]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException) [119]
[137]    0.0    0.00    0.00       1         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
                0.00    0.00       1/287570      multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&) [86]
                0.00    0.00       1/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00       1/288994      multi::unique_lock<multi::mutex>::~unique_lock() [106]
                0.00    0.00       1/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00       4/4           multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [266]
                0.00    0.00       4/4           multi::thread::detach() [265]
                0.00    0.00       4/11          multi::thread::~thread() [245]
                0.00    0.00       1/1           void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}) [350]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::~thread_pool() [120]
[138]    0.0    0.00    0.00       1         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
                0.00    0.00       1/287570      multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&) [86]
                0.00    0.00       1/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00       1/288994      multi::unique_lock<multi::mutex>::~unique_lock() [106]
                0.00    0.00       1/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00       2/8981        std::bitset<2ul>::operator[](unsigned long) [198]
                0.00    0.00       2/3           std::bitset<2ul>::reference::operator=(bool) [319]
                0.00    0.00       2/8961        std::bitset<2ul>::reference::~reference() [204]
                0.00    0.00       1/1           void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}) [353]
                0.00    0.00       1/18040       multi::condition_variable::notify_all() [178]
                0.00    0.00       1/1           void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}) [352]
-----------------------------------------------
                0.00    0.00       1/1           pqueue<priorited_function>::pqueue() [121]
[139]    0.0    0.00    0.00       1         std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::priority_queue(std::less<priorited_function> const&, std::vector<priorited_function, std::allocator<priorited_function> >&&) [139]
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [149]
                0.00    0.00       1/297760      std::vector<priorited_function, std::allocator<priorited_function> >::end() [98]
                0.00    0.00       1/297777      std::vector<priorited_function, std::allocator<priorited_function> >::begin() [97]
                0.00    0.00       1/2           std::remove_reference<std::vector<priorited_function, std::allocator<priorited_function> >&>::type&& std::move<std::vector<priorited_function, std::allocator<priorited_function> >&>(std::vector<priorited_function, std::allocator<priorited_function> >&) [342]
                0.00    0.00       1/1           std::vector<priorited_function, std::allocator<priorited_function> >::vector(std::vector<priorited_function, std::allocator<priorited_function> >&&) [391]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Bind<main::{lambda()#5} ()>::operator()<, void>() [141]
[140]    0.0    0.00    0.00       1         void std::_Bind<main::{lambda()#5} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [140]
                0.00    0.00       1/1           main::{lambda()#5}::operator()() const [143]
-----------------------------------------------
                0.00    0.00       1/1           _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENKUlPvE_clES8_ [144]
[141]    0.0    0.00    0.00       1         void std::_Bind<main::{lambda()#5} ()>::operator()<, void>() [141]
                0.00    0.00       1/1           void std::_Bind<main::{lambda()#5} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [140]
                0.00    0.00       1/9068        std::tuple<> std::forward_as_tuple<>() [189]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Bind<main::{lambda()#4} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [145]
[142]    0.0    0.00    0.00       1         main::{lambda()#4}::operator()() const [142]
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::pause() [151]
                0.00    0.00       1/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00       1/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00       2/12          std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&) [244]
                0.00    0.00       2/12          void multi::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [242]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Bind<main::{lambda()#5} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [140]
[143]    0.0    0.00    0.00       1         main::{lambda()#5}::operator()() const [143]
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::resume() [150]
                0.00    0.00       1/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00       1/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00       2/12          std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&) [244]
                0.00    0.00       2/12          void multi::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [242]
-----------------------------------------------
                0.00    0.00       1/1           _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENUlPvE_4_FUNES8_ [146]
[144]    0.0    0.00    0.00       1         _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENKUlPvE_clES8_ [144]
                0.00    0.00       1/1           void std::_Bind<main::{lambda()#5} ()>::operator()<, void>() [141]
-----------------------------------------------
                                                 <spontaneous>
[145]    0.0    0.00    0.00                 void std::_Bind<main::{lambda()#4} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [145]
                0.00    0.00       1/1           main::{lambda()#4}::operator()() const [142]
-----------------------------------------------
                                                 <spontaneous>
[146]    0.0    0.00    0.00                 _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENUlPvE_4_FUNES8_ [146]
                0.00    0.00       1/1           _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENKUlPvE_clES8_ [144]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[147]    0.0    0.00    0.00       1         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join() [147]
                0.00    0.00       1/287570      multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&) [86]
                0.00    0.00       1/288994      multi::unique_lock<multi::mutex>::~unique_lock() [106]
                0.00    0.00       1/1           void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}) [351]
-----------------------------------------------
                0.00    0.00       1/1           void std::make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [149]
[148]    0.0    0.00    0.00       1         void std::__make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [148]
                0.00    0.00       1/306917      __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::difference_type __gnu_cxx::operator-<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [72]
-----------------------------------------------
                0.00    0.00       1/1           std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::priority_queue(std::less<priorited_function> const&, std::vector<priorited_function, std::allocator<priorited_function> >&&) [139]
[149]    0.0    0.00    0.00       1         void std::make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [149]
                0.00    0.00       1/1           void std::__make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [148]
                0.00    0.00       1/9015        __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_iter<std::less<priorited_function> >(std::less<priorited_function>) [192]
-----------------------------------------------
                0.00    0.00       1/1           main::{lambda()#5}::operator()() const [143]
[150]    0.0    0.00    0.00       1         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::resume() [150]
                0.00    0.00       1/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00       1/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
                0.00    0.00       1/18040       multi::condition_variable::notify_all() [178]
-----------------------------------------------
                0.00    0.00       1/1           main::{lambda()#4}::operator()() const [142]
[151]    0.0    0.00    0.00       1         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::pause() [151]
                0.00    0.00       1/9081        multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [129]
                0.00    0.00       1/8723        multi::lock_guard<multi::mutex>::~lock_guard() [131]
-----------------------------------------------
                0.00    0.00  288749/3023775     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator-(long) const [99]
                0.00    0.00  297722/3023775     std::vector<priorited_function, std::allocator<priorited_function> >::begin() [97]
                0.00    0.00  297736/3023775     std::vector<priorited_function, std::allocator<priorited_function> >::end() [98]
                0.00    0.00 2139568/3023775     __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator+(long) const [70]
[158]    0.0    0.00    0.00 3023775         __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function* const&) [158]
-----------------------------------------------
                0.00    0.00  287906/863824      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long), std::integral_constant<bool, false>) [38]
                0.00    0.00  287928/863824      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long)) [34]
                0.00    0.00  287990/863824      std::function<void ()>::function<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>, void, void>(std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>) [27]
[159]    0.0    0.00    0.00  863824         std::remove_reference<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>::type&& std::move<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>(std::remove_reference&&) [159]
-----------------------------------------------
                0.00    0.00  576121/576121      std::_Weak_result_type_impl<main::{lambda(unsigned long)#1}>::_Weak_result_type_impl() [71]
[160]    0.0    0.00    0.00  576121         std::_Maybe_get_result_type<main::{lambda(unsigned long)#1}, void>::_Maybe_get_result_type() [160]
-----------------------------------------------
                0.00    0.00       1/550886      void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#3}&>(multi::thread*, main::{lambda()#3}&) [359]
                0.00    0.00       3/550886      void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#2}&>(multi::thread*, main::{lambda()#2}&) [306]
                0.00    0.00       3/550886      void std::_Construct<multi::thread, multi::thread>(multi::thread*, multi::thread&&) [397]
                0.00    0.00  262137/550886      _ZSt10_ConstructI18priorited_functionIRS0_EEvPT_DpOT0_ [51]
                0.00    0.00  288742/550886      void __gnu_cxx::new_allocator<priorited_function>::construct<priorited_function, priorited_function>(priorited_function*, priorited_function&&) [33]
[161]    0.0    0.00    0.00  550886         operator new(unsigned long, void*) [161]
-----------------------------------------------
                0.00    0.00  304605/304605      multi::mutex::lock() [96]
[162]    0.0    0.00    0.00  304605         multi::p_::mutex::lock(pthread_mutex_t*) [162]
-----------------------------------------------
                0.00    0.00  296973/296973      std::_Tuple_impl<0ul, unsigned long>::_M_head(std::_Tuple_impl<0ul, unsigned long>&) [84]
[163]    0.0    0.00    0.00  296973         std::_Head_base<0ul, unsigned long, false>::_M_head(std::_Head_base<0ul, unsigned long, false>&) [163]
-----------------------------------------------
                0.00    0.00  288997/288997      multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::enqueue(priorited_function) [6]
[164]    0.0    0.00    0.00  288997         multi::condition_variable::notify_one() [164]
-----------------------------------------------
                0.00    0.00  288221/288221      std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >::value, std::decay, unsigned long&>::type std::bind<main::{lambda(unsigned long)#1}&, unsigned long&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >&&)...) [37]
[165]    0.0    0.00    0.00  288221         main::{lambda(unsigned long)#1}& std::forward<main::{lambda(unsigned long)#1}&>(std::remove_reference<main::{lambda(unsigned long)#1}&>::type&) [165]
-----------------------------------------------
                0.00    0.00  288041/288041      std::function<void ()>::function<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>, void, void>(std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>) [27]
[166]    0.0    0.00    0.00  288041         bool std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_not_empty_function<main::{lambda(unsigned long)#1} (unsigned long)>(main::{lambda(unsigned long)#1} ( const&)(unsigned long)) [166]
-----------------------------------------------
                0.00    0.00  287819/287819      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind(main::{lambda(unsigned long)#1} (&&)(unsigned long)) [43]
[167]    0.0    0.00    0.00  287819         std::remove_reference<main::{lambda(unsigned long)#1}&>::type&& std::move<main::{lambda(unsigned long)#1}&>(std::remove_reference&&) [167]
-----------------------------------------------
                0.00    0.00  287711/287711      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind(main::{lambda(unsigned long)#1} (&&)(unsigned long)) [43]
[168]    0.0    0.00    0.00  287711         std::remove_reference<std::tuple<unsigned long>&>::type&& std::move<std::tuple<unsigned long>&>(std::tuple<unsigned long>&) [168]
-----------------------------------------------
                0.00    0.00  287708/287708      multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&) [86]
[169]    0.0    0.00    0.00  287708         multi::mutex* std::addressof<multi::mutex>(multi::mutex&) [169]
                0.00    0.00  287674/287674      multi::mutex* std::__addressof<multi::mutex>(multi::mutex&) [170]
-----------------------------------------------
                0.00    0.00  287674/287674      multi::mutex* std::addressof<multi::mutex>(multi::mutex&) [169]
[170]    0.0    0.00    0.00  287674         multi::mutex* std::__addressof<multi::mutex>(multi::mutex&) [170]
-----------------------------------------------
                0.00    0.00  280197/280197      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>* const& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() const [172]
[171]    0.0    0.00    0.00  280197         std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00    9064/280177      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_get_pointer(std::_Any_data const&) [191]
                0.00    0.00  271113/280177      std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::integral_constant<bool, false>) [87]
[172]    0.0    0.00    0.00  280177         std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>* const& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() const [172]
                0.00    0.00  280197/280197      std::_Any_data::_M_access() const [171]
-----------------------------------------------
                0.00    0.00  262136/262136      _ZSt10_ConstructI18priorited_functionIRS0_EEvPT_DpOT0_ [51]
[173]    0.0    0.00    0.00  262136         priorited_function& std::forward<priorited_function&>(std::remove_reference<priorited_function&>::type&) [173]
-----------------------------------------------
                0.00    0.00    8948/26853       std::vector<priorited_function, std::allocator<priorited_function> >::end() const [210]
                0.00    0.00   17905/26853       std::vector<priorited_function, std::allocator<priorited_function> >::begin() const [180]
[174]    0.0    0.00    0.00   26853         __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function const* const&) [174]
-----------------------------------------------
                0.00    0.00   19778/19778       void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}) [197]
[175]    0.0    0.00    0.00   19778         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}::operator()() const [175]
                0.00    0.00   19199/19199       std::bitset<2ul>::any() const [176]
                0.00    0.00    8955/8956        std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::empty() const [206]
-----------------------------------------------
                0.00    0.00   19199/19199       multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}::operator()() const [175]
[176]    0.0    0.00    0.00   19199         std::bitset<2ul>::any() const [176]
                0.00    0.00   19126/19126       std::_Base_bitset<1ul>::_M_is_any() const [177]
-----------------------------------------------
                0.00    0.00   19126/19126       std::bitset<2ul>::any() const [176]
[177]    0.0    0.00    0.00   19126         std::_Base_bitset<1ul>::_M_is_any() const [177]
-----------------------------------------------
                0.00    0.00       1/18040       multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::resume() [150]
                0.00    0.00       1/18040       multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
                0.00    0.00       4/18040       multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}::operator()() const [295]
                0.00    0.00   18034/18040       multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[178]    0.0    0.00    0.00   18040         multi::condition_variable::notify_all() [178]
-----------------------------------------------
                0.00    0.00    8958/17918       std::_Base_bitset<1ul>::_S_maskbit(unsigned long) [207]
                0.00    0.00    8960/17918       std::bitset<2ul>::reference::reference(std::bitset<2ul>&, unsigned long) [209]
[179]    0.0    0.00    0.00   17918         std::_Base_bitset<1ul>::_S_whichbit(unsigned long) [179]
-----------------------------------------------
                0.00    0.00    8947/17903       std::vector<priorited_function, std::allocator<priorited_function> >::front() const [200]
                0.00    0.00    8956/17903       std::vector<priorited_function, std::allocator<priorited_function> >::empty() const [213]
[180]    0.0    0.00    0.00   17903         std::vector<priorited_function, std::allocator<priorited_function> >::begin() const [180]
                0.00    0.00   17905/26853       __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function const* const&) [174]
-----------------------------------------------
                0.00    0.00   17885/17885       bool __gnu_cxx::operator==<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [212]
[181]    0.0    0.00    0.00   17885         __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::base() const [181]
-----------------------------------------------
                0.00    0.00       1/10432       void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}) [352]
                0.00    0.00       4/10432       void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}) [350]
                0.00    0.00   10427/10432       void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}) [197]
[182]    0.0    0.00    0.00   10432         multi::condition_variable::wait(multi::unique_lock<multi::mutex>&) [182]
                0.00    0.00   10300/10300       multi::mutex::native_handle() [184]
                0.00    0.00   10114/10114       multi::unique_lock<multi::mutex>::mutex() [185]
-----------------------------------------------
                0.00    0.00   10311/10311       multi::mutex::native_handle() [184]
[183]    0.0    0.00    0.00   10311         multi::p_::mutex::handle(pthread_mutex_t*) [183]
-----------------------------------------------
                0.00    0.00   10300/10300       multi::condition_variable::wait(multi::unique_lock<multi::mutex>&) [182]
[184]    0.0    0.00    0.00   10300         multi::mutex::native_handle() [184]
                0.00    0.00   10311/10311       multi::p_::mutex::handle(pthread_mutex_t*) [183]
-----------------------------------------------
                0.00    0.00   10114/10114       multi::condition_variable::wait(multi::unique_lock<multi::mutex>&) [182]
[185]    0.0    0.00    0.00   10114         multi::unique_lock<multi::mutex>::mutex() [185]
-----------------------------------------------
                0.00    0.00    9073/9073        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[186]    0.0    0.00    0.00    9073         multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(multi::p_::scope_guard&&) [186]
                0.00    0.00    9069/9069        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::type&) [188]
                0.00    0.00    9065/9065        multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::scope_guard({lambda()#3}) [190]
-----------------------------------------------
                0.00    0.00    9069/9069        multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::scope_guard({lambda()#3}) [190]
[187]    0.0    0.00    0.00    9069         std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&>::type&& std::move<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&>(std::remove_reference&&) [187]
-----------------------------------------------
                0.00    0.00    9069/9069        multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(multi::p_::scope_guard&&) [186]
[188]    0.0    0.00    0.00    9069         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::type&) [188]
-----------------------------------------------
                0.00    0.00       1/9068        void std::_Bind<main::{lambda()#5} ()>::operator()<, void>() [141]
                0.00    0.00       1/9068        void std::_Bind<main::{lambda()#3} ()>::operator()<, void>() [108]
                0.00    0.00       2/9068        void std::_Bind<main::{lambda()#2} ()>::operator()<, void>() [1]
                0.00    0.00       4/9068        void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::operator()<, void>() [20]
                0.00    0.00    9060/9068        void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::operator()<, void>() [79]
[189]    0.0    0.00    0.00    9068         std::tuple<> std::forward_as_tuple<>() [189]
-----------------------------------------------
                0.00    0.00    9065/9065        multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(multi::p_::scope_guard&&) [186]
[190]    0.0    0.00    0.00    9065         multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::scope_guard({lambda()#3}) [190]
                0.00    0.00    9069/9069        std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&>::type&& std::move<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&>(std::remove_reference&&) [187]
-----------------------------------------------
                0.00    0.00    9064/9064        std::_Function_handler<void (), std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_invoke(std::_Any_data const&) [77]
[191]    0.0    0.00    0.00    9064         std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_get_pointer(std::_Any_data const&) [191]
                0.00    0.00    9064/280177      std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>* const& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() const [172]
-----------------------------------------------
                0.00    0.00       1/9015        void std::make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [149]
                0.00    0.00    9014/9015        void std::pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [25]
[192]    0.0    0.00    0.00    9015         __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_iter<std::less<priorited_function> >(std::less<priorited_function>) [192]
                0.00    0.00    9013/9013        __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::_Iter_comp_iter(std::less<priorited_function>) [193]
-----------------------------------------------
                0.00    0.00    9013/9013        __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_iter<std::less<priorited_function> >(std::less<priorited_function>) [192]
[193]    0.0    0.00    0.00    9013         __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::_Iter_comp_iter(std::less<priorited_function>) [193]
-----------------------------------------------
                0.00    0.00    9001/9001        void std::pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>) [25]
[194]    0.0    0.00    0.00    9001         __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator--() [194]
-----------------------------------------------
                0.00    0.00    8999/8999        multi::this_thread::get_id() [196]
[195]    0.0    0.00    0.00    8999         multi::p_::id_mirror::create(unsigned long) [195]
                0.00    0.00    8963/8963        multi::thread::id::id(unsigned long) [203]
-----------------------------------------------
                0.00    0.00    8997/8997        main::{lambda(unsigned long)#1}::operator()(unsigned long) const [80]
[196]    0.0    0.00    0.00    8997         multi::this_thread::get_id() [196]
                0.00    0.00    8999/8999        multi::p_::id_mirror::create(unsigned long) [195]
-----------------------------------------------
                0.00    0.00    8985/8985        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[197]    0.0    0.00    0.00    8985         void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}) [197]
                0.00    0.00   19778/19778       multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}::operator()() const [175]
                0.00    0.00   10427/10432       multi::condition_variable::wait(multi::unique_lock<multi::mutex>&) [182]
-----------------------------------------------
                0.00    0.00       2/8981        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
                0.00    0.00    8979/8981        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[198]    0.0    0.00    0.00    8981         std::bitset<2ul>::operator[](unsigned long) [198]
                0.00    0.00    8946/8946        std::bitset<2ul>::reference::reference(std::bitset<2ul>&, unsigned long) [209]
-----------------------------------------------
                0.00    0.00    8970/8970        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[199]    0.0    0.00    0.00    8970         pqueue<priorited_function>::front() const [199]
                0.00    0.00    8966/8966        std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::top() const [202]
-----------------------------------------------
                0.00    0.00    8969/8969        std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::top() const [202]
[200]    0.0    0.00    0.00    8969         std::vector<priorited_function, std::allocator<priorited_function> >::front() const [200]
                0.00    0.00    8947/17903       std::vector<priorited_function, std::allocator<priorited_function> >::begin() const [180]
                0.00    0.00    8946/8946        __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [208]
-----------------------------------------------
                0.00    0.00    8969/8969        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[201]    0.0    0.00    0.00    8969         std::remove_reference<priorited_function const&>::type&& std::move<priorited_function const&>(priorited_function const&) [201]
-----------------------------------------------
                0.00    0.00    8966/8966        pqueue<priorited_function>::front() const [199]
[202]    0.0    0.00    0.00    8966         std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::top() const [202]
                0.00    0.00    8969/8969        std::vector<priorited_function, std::allocator<priorited_function> >::front() const [200]
-----------------------------------------------
                0.00    0.00    8963/8963        multi::p_::id_mirror::create(unsigned long) [195]
[203]    0.0    0.00    0.00    8963         multi::thread::id::id(unsigned long) [203]
-----------------------------------------------
                0.00    0.00       2/8961        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
                0.00    0.00    8959/8961        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[204]    0.0    0.00    0.00    8961         std::bitset<2ul>::reference::~reference() [204]
-----------------------------------------------
                0.00    0.00    8959/8959        std::bitset<2ul>::reference::reference(std::bitset<2ul>&, unsigned long) [209]
[205]    0.0    0.00    0.00    8959         std::_Base_bitset<1ul>::_M_getword(unsigned long) [205]
-----------------------------------------------
                0.00    0.00       1/8956        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}::operator()() const [403]
                0.00    0.00    8955/8956        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}::operator()() const [175]
[206]    0.0    0.00    0.00    8956         std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::empty() const [206]
                0.00    0.00    8924/8924        std::vector<priorited_function, std::allocator<priorited_function> >::empty() const [213]
-----------------------------------------------
                0.00    0.00       3/8956        std::bitset<2ul>::reference::operator=(bool) [319]
                0.00    0.00    8953/8956        std::bitset<2ul>::reference::operator bool() const [211]
[207]    0.0    0.00    0.00    8956         std::_Base_bitset<1ul>::_S_maskbit(unsigned long) [207]
                0.00    0.00    8958/17918       std::_Base_bitset<1ul>::_S_whichbit(unsigned long) [179]
-----------------------------------------------
                0.00    0.00    8946/8946        std::vector<priorited_function, std::allocator<priorited_function> >::front() const [200]
[208]    0.0    0.00    0.00    8946         __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [208]
-----------------------------------------------
                0.00    0.00    8946/8946        std::bitset<2ul>::operator[](unsigned long) [198]
[209]    0.0    0.00    0.00    8946         std::bitset<2ul>::reference::reference(std::bitset<2ul>&, unsigned long) [209]
                0.00    0.00    8960/17918       std::_Base_bitset<1ul>::_S_whichbit(unsigned long) [179]
                0.00    0.00    8959/8959        std::_Base_bitset<1ul>::_M_getword(unsigned long) [205]
-----------------------------------------------
                0.00    0.00    8945/8945        std::vector<priorited_function, std::allocator<priorited_function> >::empty() const [213]
[210]    0.0    0.00    0.00    8945         std::vector<priorited_function, std::allocator<priorited_function> >::end() const [210]
                0.00    0.00    8948/26853       __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function const* const&) [174]
-----------------------------------------------
                0.00    0.00    8942/8942        multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[211]    0.0    0.00    0.00    8942         std::bitset<2ul>::reference::operator bool() const [211]
                0.00    0.00    8953/8956        std::_Base_bitset<1ul>::_S_maskbit(unsigned long) [207]
-----------------------------------------------
                0.00    0.00    8934/8934        std::vector<priorited_function, std::allocator<priorited_function> >::empty() const [213]
[212]    0.0    0.00    0.00    8934         bool __gnu_cxx::operator==<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [212]
                0.00    0.00   17885/17885       __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::base() const [181]
-----------------------------------------------
                0.00    0.00    8924/8924        std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::empty() const [206]
[213]    0.0    0.00    0.00    8924         std::vector<priorited_function, std::allocator<priorited_function> >::empty() const [213]
                0.00    0.00    8956/17903       std::vector<priorited_function, std::allocator<priorited_function> >::begin() const [180]
                0.00    0.00    8945/8945        std::vector<priorited_function, std::allocator<priorited_function> >::end() const [210]
                0.00    0.00    8934/8934        bool __gnu_cxx::operator==<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [212]
-----------------------------------------------
                0.00    0.00    8718/8718        main::{lambda(unsigned long)#1}::operator()(unsigned long) const [80]
[214]    0.0    0.00    0.00    8718         std::basic_ostream<char, std::char_traits<char> >& multi::operator<< <char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, multi::thread::id) [214]
-----------------------------------------------
                0.00    0.00    8692/8692        main::{lambda(unsigned long)#1}::operator()(unsigned long) const [80]
[215]    0.0    0.00    0.00    8692         std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<int, void>(int const&) [215]
-----------------------------------------------
                0.00    0.00    8614/8614        std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [217]
[216]    0.0    0.00    0.00    8614         std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [216]
-----------------------------------------------
                0.00    0.00    8597/8597        std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [220]
[217]    0.0    0.00    0.00    8597         std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [217]
                0.00    0.00    8614/8614        std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [216]
                0.00    0.00    8552/8565        std::chrono::duration<long, std::ratio<1l, 1000000l> >::duration<long, void>(long const&) [219]
-----------------------------------------------
                0.00    0.00      13/8579        void multi::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [242]
                0.00    0.00    8566/8579        void multi::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [85]
[218]    0.0    0.00    0.00    8579         std::chrono::duration<long, std::ratio<1l, 1000000l> >::count() const [218]
-----------------------------------------------
                0.00    0.00      13/8565        std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [241]
                0.00    0.00    8552/8565        std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [217]
[219]    0.0    0.00    0.00    8565         std::chrono::duration<long, std::ratio<1l, 1000000l> >::duration<long, void>(long const&) [219]
-----------------------------------------------
                0.00    0.00    8530/8530        void multi::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [85]
[220]    0.0    0.00    0.00    8530         std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [220]
                0.00    0.00    8597/8597        std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [217]
-----------------------------------------------
                0.00    0.00    8047/8047        multi::unique_lock<multi::mutex>::lock() [134]
[221]    0.0    0.00    0.00    8047         multi::unique_lock<multi::mutex>::lock_assert(bool, bool) [221]
-----------------------------------------------
                0.00    0.00      19/95          void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
                0.00    0.00      76/95          std::vector<priorited_function, std::allocator<priorited_function> >::_M_check_len(unsigned long, char const*) const [235]
[222]    0.0    0.00    0.00      95         std::vector<priorited_function, std::allocator<priorited_function> >::size() const [222]
-----------------------------------------------
                0.00    0.00      19/57          __gnu_cxx::new_allocator<priorited_function>::allocate(unsigned long, void const*) [234]
                0.00    0.00      38/57          std::allocator_traits<std::allocator<priorited_function> >::max_size(std::allocator<priorited_function> const&) [227]
[223]    0.0    0.00    0.00      57         __gnu_cxx::new_allocator<priorited_function>::max_size() const [223]
-----------------------------------------------
                0.00    0.00       1/44          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base(std::_Vector_base<priorited_function, std::allocator<priorited_function> >&&) [371]
                0.00    0.00       2/44          std::vector<priorited_function, std::allocator<priorited_function> >::~vector() [117]
                0.00    0.00       3/44          std::vector<priorited_function, std::allocator<priorited_function> >::_M_erase_at_end(priorited_function*) [114]
                0.00    0.00      38/44          void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
[224]    0.0    0.00    0.00      44         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() [224]
-----------------------------------------------
                0.00    0.00      38/38          std::vector<priorited_function, std::allocator<priorited_function> >::max_size() const [226]
[225]    0.0    0.00    0.00      38         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() const [225]
-----------------------------------------------
                0.00    0.00      38/38          std::vector<priorited_function, std::allocator<priorited_function> >::_M_check_len(unsigned long, char const*) const [235]
[226]    0.0    0.00    0.00      38         std::vector<priorited_function, std::allocator<priorited_function> >::max_size() const [226]
                0.00    0.00      38/38          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() const [225]
                0.00    0.00      38/38          std::allocator_traits<std::allocator<priorited_function> >::max_size(std::allocator<priorited_function> const&) [227]
-----------------------------------------------
                0.00    0.00      38/38          std::vector<priorited_function, std::allocator<priorited_function> >::max_size() const [226]
[227]    0.0    0.00    0.00      38         std::allocator_traits<std::allocator<priorited_function> >::max_size(std::allocator<priorited_function> const&) [227]
                0.00    0.00      38/57          __gnu_cxx::new_allocator<priorited_function>::max_size() const [223]
-----------------------------------------------
                0.00    0.00      38/38          priorited_function* std::__uninitialized_move_if_noexcept_a<priorited_function*, priorited_function*, std::allocator<priorited_function> >(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&) [47]
[228]    0.0    0.00    0.00      38         priorited_function* std::__make_move_if_noexcept_iterator<priorited_function*, priorited_function*>(priorited_function*) [228]
-----------------------------------------------
                0.00    0.00       4/24          multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [266]
                0.00    0.00       4/24          std::_Bind_helper<std::__or_<std::is_integral<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type>, std::is_enum<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type> >::value, void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type std::bind<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [289]
                0.00    0.00       4/24          std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>::_Head_base<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [272]
                0.00    0.00       4/24          std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Tuple_impl<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [274]
                0.00    0.00       4/24          std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [284]
                0.00    0.00       4/24          std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::_Bind<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [283]
[229]    0.0    0.00    0.00      24         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::type&) [229]
-----------------------------------------------
                0.00    0.00       3/22          std::vector<multi::thread, std::allocator<multi::thread> >::_M_check_len(unsigned long, char const*) const [308]
                0.00    0.00      19/22          std::vector<priorited_function, std::allocator<priorited_function> >::_M_check_len(unsigned long, char const*) const [235]
[230]    0.0    0.00    0.00      22         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [230]
-----------------------------------------------
                0.00    0.00       4/21          multi::thread::detach() [265]
                0.00    0.00       6/21          multi::thread::join() [253]
                0.00    0.00      11/21          multi::thread::~thread() [245]
[231]    0.0    0.00    0.00      21         multi::thread::joinable() const [231]
-----------------------------------------------
                0.00    0.00       2/21          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::~_Vector_base() [336]
                0.00    0.00      19/21          void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
[232]    0.0    0.00    0.00      21         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_deallocate(priorited_function*, unsigned long) [232]
                0.00    0.00      19/19          std::allocator_traits<std::allocator<priorited_function> >::deallocate(std::allocator<priorited_function>&, priorited_function*, unsigned long) [237]
-----------------------------------------------
                0.00    0.00      19/19          std::allocator_traits<std::allocator<priorited_function> >::deallocate(std::allocator<priorited_function>&, priorited_function*, unsigned long) [237]
[233]    0.0    0.00    0.00      19         __gnu_cxx::new_allocator<priorited_function>::deallocate(priorited_function*, unsigned long) [233]
-----------------------------------------------
                0.00    0.00      19/19          std::allocator_traits<std::allocator<priorited_function> >::allocate(std::allocator<priorited_function>&, unsigned long) [238]
[234]    0.0    0.00    0.00      19         __gnu_cxx::new_allocator<priorited_function>::allocate(unsigned long, void const*) [234]
                0.00    0.00      19/57          __gnu_cxx::new_allocator<priorited_function>::max_size() const [223]
-----------------------------------------------
                0.00    0.00      19/19          void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
[235]    0.0    0.00    0.00      19         std::vector<priorited_function, std::allocator<priorited_function> >::_M_check_len(unsigned long, char const*) const [235]
                0.00    0.00      76/95          std::vector<priorited_function, std::allocator<priorited_function> >::size() const [222]
                0.00    0.00      38/38          std::vector<priorited_function, std::allocator<priorited_function> >::max_size() const [226]
                0.00    0.00      19/22          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [230]
-----------------------------------------------
                0.00    0.00      19/19          void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&) [31]
[236]    0.0    0.00    0.00      19         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_allocate(unsigned long) [236]
                0.00    0.00      19/19          std::allocator_traits<std::allocator<priorited_function> >::allocate(std::allocator<priorited_function>&, unsigned long) [238]
-----------------------------------------------
                0.00    0.00      19/19          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_deallocate(priorited_function*, unsigned long) [232]
[237]    0.0    0.00    0.00      19         std::allocator_traits<std::allocator<priorited_function> >::deallocate(std::allocator<priorited_function>&, priorited_function*, unsigned long) [237]
                0.00    0.00      19/19          __gnu_cxx::new_allocator<priorited_function>::deallocate(priorited_function*, unsigned long) [233]
-----------------------------------------------
                0.00    0.00      19/19          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_allocate(unsigned long) [236]
[238]    0.0    0.00    0.00      19         std::allocator_traits<std::allocator<priorited_function> >::allocate(std::allocator<priorited_function>&, unsigned long) [238]
                0.00    0.00      19/19          __gnu_cxx::new_allocator<priorited_function>::allocate(unsigned long, void const*) [234]
-----------------------------------------------
                0.00    0.00       3/18          void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#2}&>(main::{lambda()#2}&) [320]
                0.00    0.00       3/18          void std::allocator_traits<std::allocator<multi::thread> >::construct<multi::thread, main::{lambda()#2}&>(std::allocator<multi::thread>&, multi::thread*, main::{lambda()#2}&) [313]
                0.00    0.00       3/18          void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
                0.00    0.00       3/18          void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#2}&>(multi::thread*, main::{lambda()#2}&) [306]
                0.00    0.00       3/18          multi::thread::thread<main::{lambda()#2}&>(main::{lambda()#2}&) [303]
                0.00    0.00       3/18          std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >::value, std::decay>::type std::bind<main::{lambda()#2}&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >&&)...) [323]
[239]    0.0    0.00    0.00      18         main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&) [239]
-----------------------------------------------
                0.00    0.00       3/15          void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
                0.00    0.00      12/15          std::vector<multi::thread, std::allocator<multi::thread> >::_M_check_len(unsigned long, char const*) const [308]
[240]    0.0    0.00    0.00      15         std::vector<multi::thread, std::allocator<multi::thread> >::size() const [240]
-----------------------------------------------
                0.00    0.00      13/13          std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [246]
[241]    0.0    0.00    0.00      13         std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [241]
                0.00    0.00      13/8565        std::chrono::duration<long, std::ratio<1l, 1000000l> >::duration<long, void>(long const&) [219]
                0.00    0.00      12/12          std::chrono::duration<long, std::ratio<1l, 1l> >::count() const [243]
-----------------------------------------------
                0.00    0.00       2/12          main::{lambda()#2}::operator()() const [4]
                0.00    0.00       2/12          main::{lambda()#4}::operator()() const [142]
                0.00    0.00       2/12          main::{lambda()#5}::operator()() const [143]
                0.00    0.00       6/12          main::{lambda()#3}::operator()() const [109]
[242]    0.0    0.00    0.00      12         void multi::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [242]
                0.00    0.00      13/8579        std::chrono::duration<long, std::ratio<1l, 1000000l> >::count() const [218]
                0.00    0.00      11/11          std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [246]
-----------------------------------------------
                0.00    0.00      12/12          std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [241]
[243]    0.0    0.00    0.00      12         std::chrono::duration<long, std::ratio<1l, 1l> >::count() const [243]
-----------------------------------------------
                0.00    0.00       2/12          main::{lambda()#4}::operator()() const [142]
                0.00    0.00       2/12          main::{lambda()#5}::operator()() const [143]
                0.00    0.00       3/12          main::{lambda()#2}::operator()() const [4]
                0.00    0.00       5/12          main::{lambda()#3}::operator()() const [109]
[244]    0.0    0.00    0.00      12         std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&) [244]
-----------------------------------------------
                0.00    0.00       2/11          main [116]
                0.00    0.00       4/11          multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
                0.00    0.00       5/11          void std::_Destroy<multi::thread>(multi::thread*) [258]
[245]    0.0    0.00    0.00      11         multi::thread::~thread() [245]
                0.00    0.00      11/21          multi::thread::joinable() const [231]
-----------------------------------------------
                0.00    0.00      11/11          void multi::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [242]
[246]    0.0    0.00    0.00      11         std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [246]
                0.00    0.00      13/13          std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [241]
-----------------------------------------------
                0.00    0.00      10/10          bool __gnu_cxx::operator!=<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >(__gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&, __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&) [259]
[247]    0.0    0.00    0.00      10         __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::base() const [247]
-----------------------------------------------
                0.00    0.00       3/9           __gnu_cxx::new_allocator<multi::thread>::allocate(unsigned long, void const*) [305]
                0.00    0.00       6/9           std::allocator_traits<std::allocator<multi::thread> >::max_size(std::allocator<multi::thread> const&) [257]
[248]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<multi::thread>::max_size() const [248]
-----------------------------------------------
                0.00    0.00       9/9           void std::swap<priorited_function*>(priorited_function*&, priorited_function*&) [324]
[249]    0.0    0.00    0.00       9         std::remove_reference<priorited_function*&>::type&& std::move<priorited_function*&>(priorited_function*&) [249]
-----------------------------------------------
                0.00    0.00       4/8           multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [266]
                0.00    0.00       4/8           std::_Bind_helper<std::__or_<std::is_integral<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type>, std::is_enum<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type> >::value, void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type std::bind<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [289]
[250]    0.0    0.00    0.00       8         void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&std::forward<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>(std::remove_reference<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type&))() [250]
-----------------------------------------------
                0.00    0.00       7/7           bool std::operator==<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&) [326]
[251]    0.0    0.00    0.00       7         std::move_iterator<multi::thread*>::base() const [251]
-----------------------------------------------
                0.00    0.00       1/7           multi::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [338]
                0.00    0.00       6/7           void std::_Destroy_aux<false>::__destroy<multi::thread*>(multi::thread*, multi::thread*) [309]
[252]    0.0    0.00    0.00       7         multi::thread* std::__addressof<multi::thread>(multi::thread&) [252]
-----------------------------------------------
                0.00    0.00       6/6           main [116]
[253]    0.0    0.00    0.00       6         multi::thread::join() [253]
                0.00    0.00       6/21          multi::thread::joinable() const [231]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<multi::thread, std::allocator<multi::thread> >::max_size() const [255]
[254]    0.0    0.00    0.00       6         std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_get_Tp_allocator() const [254]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<multi::thread, std::allocator<multi::thread> >::_M_check_len(unsigned long, char const*) const [308]
[255]    0.0    0.00    0.00       6         std::vector<multi::thread, std::allocator<multi::thread> >::max_size() const [255]
                0.00    0.00       6/6           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_get_Tp_allocator() const [254]
                0.00    0.00       6/6           std::allocator_traits<std::allocator<multi::thread> >::max_size(std::allocator<multi::thread> const&) [257]
-----------------------------------------------
                0.00    0.00       1/6           std::vector<multi::thread, std::allocator<multi::thread> >::~vector() [396]
                0.00    0.00       5/6           void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
[256]    0.0    0.00    0.00       6         std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_get_Tp_allocator() [256]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<multi::thread, std::allocator<multi::thread> >::max_size() const [255]
[257]    0.0    0.00    0.00       6         std::allocator_traits<std::allocator<multi::thread> >::max_size(std::allocator<multi::thread> const&) [257]
                0.00    0.00       6/9           __gnu_cxx::new_allocator<multi::thread>::max_size() const [248]
-----------------------------------------------
                0.00    0.00       6/6           void std::_Destroy_aux<false>::__destroy<multi::thread*>(multi::thread*, multi::thread*) [309]
[258]    0.0    0.00    0.00       6         void std::_Destroy<multi::thread>(multi::thread*) [258]
                0.00    0.00       5/11          multi::thread::~thread() [245]
-----------------------------------------------
                0.00    0.00       5/5           main [116]
[259]    0.0    0.00    0.00       5         bool __gnu_cxx::operator!=<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >(__gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&, __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&) [259]
                0.00    0.00      10/10          __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::base() const [247]
-----------------------------------------------
                0.00    0.00       5/5           multi::thread* std::__uninitialized_move_if_noexcept_a<multi::thread*, multi::thread*, std::allocator<multi::thread> >(multi::thread*, multi::thread*, multi::thread*, std::allocator<multi::thread>&) [322]
[260]    0.0    0.00    0.00       5         std::move_iterator<multi::thread*> std::__make_move_if_noexcept_iterator<multi::thread*, std::move_iterator<multi::thread*> >(multi::thread*) [260]
                0.00    0.00       4/4           std::move_iterator<multi::thread*>::move_iterator(multi::thread*) [276]
-----------------------------------------------
                0.00    0.00       5/5           void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}) [350]
[261]    0.0    0.00    0.00       5         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}::operator()() const [261]
-----------------------------------------------
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[262]    0.0    0.00    0.00       4         multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(multi::p_::scope_guard&&) [262]
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::type&) [293]
                0.00    0.00       4/4           multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::scope_guard({lambda()#1}) [263]
-----------------------------------------------
                0.00    0.00       4/4           multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(multi::p_::scope_guard&&) [262]
[263]    0.0    0.00    0.00       4         multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::scope_guard({lambda()#1}) [263]
                0.00    0.00       4/4           std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&>::type&& std::move<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&>(std::remove_reference&&) [291]
-----------------------------------------------
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
[264]    0.0    0.00    0.00       4         multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::~scope_guard() [264]
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}::operator()() const [295]
-----------------------------------------------
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
[265]    0.0    0.00    0.00       4         multi::thread::detach() [265]
                0.00    0.00       4/21          multi::thread::joinable() const [231]
-----------------------------------------------
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
[266]    0.0    0.00    0.00       4         multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [266]
                0.00    0.00       4/8           void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&std::forward<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>(std::remove_reference<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type&))() [250]
                0.00    0.00       4/24          multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::type&) [229]
                0.00    0.00       4/4           std::_Bind_helper<std::__or_<std::is_integral<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type>, std::is_enum<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type> >::value, void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type std::bind<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [289]
                0.00    0.00       4/4           multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::operator void* (*)(void*)() const [296]
-----------------------------------------------
                0.00    0.00       4/4           main [116]
[267]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::operator++() [267]
-----------------------------------------------
                0.00    0.00       4/4           multi::unique_lock<multi::mutex>::operator bool() const [269]
[268]    0.0    0.00    0.00       4         multi::unique_lock<multi::mutex>::owns_lock() const [268]
-----------------------------------------------
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}::operator()() const [295]
[269]    0.0    0.00    0.00       4         multi::unique_lock<multi::mutex>::operator bool() const [269]
                0.00    0.00       4/4           multi::unique_lock<multi::mutex>::owns_lock() const [268]
-----------------------------------------------
                0.00    0.00       4/4           main [116]
[270]    0.0    0.00    0.00       4         __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::operator*() const [270]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_M_head(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [273]
[271]    0.0    0.00    0.00       4         std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>::_M_head(std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>&) [271]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Tuple_impl<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [274]
[272]    0.0    0.00    0.00       4         std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>::_Head_base<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [272]
                0.00    0.00       4/24          multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::type&) [229]
-----------------------------------------------
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::__get_helper<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [287]
[273]    0.0    0.00    0.00       4         std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_M_head(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [273]
                0.00    0.00       4/4           std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>::_M_head(std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>&) [271]
-----------------------------------------------
                0.00    0.00       4/4           std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [284]
[274]    0.0    0.00    0.00       4         std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Tuple_impl<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [274]
                0.00    0.00       4/24          multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::type&) [229]
                0.00    0.00       4/4           std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>::_Head_base<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [272]
-----------------------------------------------
                0.00    0.00       4/4           std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::_Mem_fn(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [285]
[275]    0.0    0.00    0.00       4         std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::_Mem_fn_base(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [275]
                0.00    0.00       4/4           std::_Maybe_unary_or_binary_function<void, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Maybe_unary_or_binary_function() [282]
-----------------------------------------------
                0.00    0.00       4/4           std::move_iterator<multi::thread*> std::__make_move_if_noexcept_iterator<multi::thread*, std::move_iterator<multi::thread*> >(multi::thread*) [260]
[276]    0.0    0.00    0.00       4         std::move_iterator<multi::thread*>::move_iterator(multi::thread*) [276]
-----------------------------------------------
                0.00    0.00       4/4           std::_Maybe_unary_or_binary_function<void, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Maybe_unary_or_binary_function() [282]
[277]    0.0    0.00    0.00       4         std::unary_function<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>::unary_function() [277]
-----------------------------------------------
                0.00    0.00       4/4           std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::_Bind<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [283]
[278]    0.0    0.00    0.00       4         std::_Weak_result_type<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type() [278]
                0.00    0.00       4/4           std::_Weak_result_type_impl<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type_impl() [280]
-----------------------------------------------
                0.00    0.00       4/4           std::_Weak_result_type_impl<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type_impl() [280]
[279]    0.0    0.00    0.00       4         std::_Maybe_get_result_type<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>, void>::_Maybe_get_result_type() [279]
-----------------------------------------------
                0.00    0.00       4/4           std::_Weak_result_type<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type() [278]
[280]    0.0    0.00    0.00       4         std::_Weak_result_type_impl<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type_impl() [280]
                0.00    0.00       4/4           std::_Maybe_get_result_type<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>, void>::_Maybe_get_result_type() [279]
-----------------------------------------------
                0.00    0.00       4/4           std::_Bind_helper<std::__or_<std::is_integral<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type>, std::is_enum<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type> >::value, void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type std::bind<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [289]
[281]    0.0    0.00    0.00       4         std::_Maybe_wrap_member_pointer<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::__do_wrap(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [281]
                0.00    0.00       4/4           std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::_Mem_fn(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [285]
-----------------------------------------------
                0.00    0.00       4/4           std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::_Mem_fn_base(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [275]
[282]    0.0    0.00    0.00       4         std::_Maybe_unary_or_binary_function<void, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Maybe_unary_or_binary_function() [282]
                0.00    0.00       4/4           std::unary_function<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>::unary_function() [277]
-----------------------------------------------
                0.00    0.00       4/4           std::_Bind_helper<std::__or_<std::is_integral<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type>, std::is_enum<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type> >::value, void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type std::bind<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [289]
[283]    0.0    0.00    0.00       4         std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::_Bind<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [283]
                0.00    0.00       4/4           std::_Weak_result_type<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type() [278]
                0.00    0.00       4/4           std::remove_reference<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&>::type&& std::move<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&) [290]
                0.00    0.00       4/24          multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::type&) [229]
                0.00    0.00       4/4           std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [284]
-----------------------------------------------
                0.00    0.00       4/4           std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::_Bind<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [283]
[284]    0.0    0.00    0.00       4         std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [284]
                0.00    0.00       4/24          multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::type&) [229]
                0.00    0.00       4/4           std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Tuple_impl<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [274]
-----------------------------------------------
                0.00    0.00       4/4           std::_Maybe_wrap_member_pointer<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::__do_wrap(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [281]
[285]    0.0    0.00    0.00       4         std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::_Mem_fn(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [285]
                0.00    0.00       4/4           std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::_Mem_fn_base(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [275]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [19]
[286]    0.0    0.00    0.00       4         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::_Mu<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false, false>::operator()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<> >(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<>&) const volatile [286]
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&>::type&) [292]
-----------------------------------------------
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type& std::get<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [288]
[287]    0.0    0.00    0.00       4         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::__get_helper<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [287]
                0.00    0.00       4/4           std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_M_head(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [273]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [19]
[288]    0.0    0.00    0.00       4         std::tuple_element<0ul, std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type& std::get<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [288]
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::__get_helper<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [287]
-----------------------------------------------
                0.00    0.00       4/4           multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [266]
[289]    0.0    0.00    0.00       4         std::_Bind_helper<std::__or_<std::is_integral<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type>, std::is_enum<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type> >::value, void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type std::bind<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [289]
                0.00    0.00       4/24          multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::type&) [229]
                0.00    0.00       4/8           void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&std::forward<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>(std::remove_reference<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type&))() [250]
                0.00    0.00       4/4           std::_Maybe_wrap_member_pointer<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::__do_wrap(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [281]
                0.00    0.00       4/4           std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::_Bind<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [283]
-----------------------------------------------
                0.00    0.00       4/4           std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::_Bind<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [283]
[290]    0.0    0.00    0.00       4         std::remove_reference<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&>::type&& std::move<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&) [290]
-----------------------------------------------
                0.00    0.00       4/4           multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::scope_guard({lambda()#1}) [263]
[291]    0.0    0.00    0.00       4         std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&>::type&& std::move<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&>(std::remove_reference&&) [291]
-----------------------------------------------
                0.00    0.00       4/4           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::_Mu<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false, false>::operator()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<> >(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<>&) const volatile [286]
[292]    0.0    0.00    0.00       4         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&>::type&) [292]
-----------------------------------------------
                0.00    0.00       4/4           multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(multi::p_::scope_guard&&) [262]
[293]    0.0    0.00    0.00       4         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::type&) [293]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<multi::thread, std::allocator<multi::thread> >::~vector() [396]
                0.00    0.00       3/4           void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
[294]    0.0    0.00    0.00       4         void std::_Destroy<multi::thread*, multi::thread>(multi::thread*, multi::thread*, std::allocator<multi::thread>&) [294]
                0.00    0.00       3/3           void std::_Destroy<multi::thread*>(multi::thread*, multi::thread*) [325]
-----------------------------------------------
                0.00    0.00       4/4           multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::~scope_guard() [264]
[295]    0.0    0.00    0.00       4         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}::operator()() const [295]
                0.00    0.00       4/4           multi::unique_lock<multi::mutex>::operator bool() const [269]
                0.00    0.00       4/18040       multi::condition_variable::notify_all() [178]
-----------------------------------------------
                0.00    0.00       4/4           multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [266]
[296]    0.0    0.00    0.00       4         multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::operator void* (*)(void*)() const [296]
-----------------------------------------------
                0.00    0.00       3/3           multi::p_::mutex::init(pthread_mutex_t*) [298]
[297]    0.0    0.00    0.00       3         multi::p_::mutex::mtx_type_init(pthread_mutex_t*, int) [297]
-----------------------------------------------
                0.00    0.00       3/3           multi::mutex::mutex() [301]
[298]    0.0    0.00    0.00       3         multi::p_::mutex::init(pthread_mutex_t*) [298]
                0.00    0.00       3/3           multi::p_::mutex::mtx_type_init(pthread_mutex_t*, int) [297]
-----------------------------------------------
                0.00    0.00       3/3           multi::mutex::~mutex() [302]
[299]    0.0    0.00    0.00       3         multi::p_::mutex::destroy(pthread_mutex_t*) [299]
-----------------------------------------------
                0.00    0.00       3/3           multi::mutex::mutex() [301]
[300]    0.0    0.00    0.00       3         multi::p_::mutex::semantics::semantics() [300]
-----------------------------------------------
                0.00    0.00       1/3           main [116]
                0.00    0.00       2/3           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException) [119]
[301]    0.0    0.00    0.00       3         multi::mutex::mutex() [301]
                0.00    0.00       3/3           multi::p_::mutex::semantics::semantics() [300]
                0.00    0.00       3/3           multi::p_::mutex::init(pthread_mutex_t*) [298]
-----------------------------------------------
                0.00    0.00       1/3           main [116]
                0.00    0.00       2/3           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::~thread_pool() [120]
[302]    0.0    0.00    0.00       3         multi::mutex::~mutex() [302]
                0.00    0.00       3/3           multi::p_::mutex::destroy(pthread_mutex_t*) [299]
-----------------------------------------------
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#2}&>(multi::thread*, main::{lambda()#2}&) [306]
[303]    0.0    0.00    0.00       3         multi::thread::thread<main::{lambda()#2}&>(main::{lambda()#2}&) [303]
                0.00    0.00       3/18          main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&) [239]
                0.00    0.00       3/3           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >::value, std::decay>::type std::bind<main::{lambda()#2}&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >&&)...) [323]
                0.00    0.00       3/3           _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENKUlPvE_cvPFS9_S9_EEv [328]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Construct<multi::thread, multi::thread>(multi::thread*, multi::thread&&) [397]
[304]    0.0    0.00    0.00       3         multi::thread::thread(multi::thread&&) [304]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<multi::thread> >::allocate(std::allocator<multi::thread>&, unsigned long) [312]
[305]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<multi::thread>::allocate(unsigned long, void const*) [305]
                0.00    0.00       3/9           __gnu_cxx::new_allocator<multi::thread>::max_size() const [248]
-----------------------------------------------
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<multi::thread> >::construct<multi::thread, main::{lambda()#2}&>(std::allocator<multi::thread>&, multi::thread*, main::{lambda()#2}&) [313]
[306]    0.0    0.00    0.00       3         void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#2}&>(multi::thread*, main::{lambda()#2}&) [306]
                0.00    0.00       3/18          main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&) [239]
                0.00    0.00       3/550886      operator new(unsigned long, void*) [161]
                0.00    0.00       3/3           multi::thread::thread<main::{lambda()#2}&>(main::{lambda()#2}&) [303]
-----------------------------------------------
                0.00    0.00       3/3           multi::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [338]
[307]    0.0    0.00    0.00       3         std::move_iterator<multi::thread*>::operator*() const [307]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
[308]    0.0    0.00    0.00       3         std::vector<multi::thread, std::allocator<multi::thread> >::_M_check_len(unsigned long, char const*) const [308]
                0.00    0.00      12/15          std::vector<multi::thread, std::allocator<multi::thread> >::size() const [240]
                0.00    0.00       6/6           std::vector<multi::thread, std::allocator<multi::thread> >::max_size() const [255]
                0.00    0.00       3/22          unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [230]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<multi::thread*>(multi::thread*, multi::thread*) [325]
[309]    0.0    0.00    0.00       3         void std::_Destroy_aux<false>::__destroy<multi::thread*>(multi::thread*, multi::thread*) [309]
                0.00    0.00       6/7           multi::thread* std::__addressof<multi::thread>(multi::thread&) [252]
                0.00    0.00       6/6           void std::_Destroy<multi::thread>(multi::thread*) [258]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
[310]    0.0    0.00    0.00       3         std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_allocate(unsigned long) [310]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<multi::thread> >::allocate(std::allocator<multi::thread>&, unsigned long) [312]
-----------------------------------------------
                0.00    0.00       1/3           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::~_Vector_base() [375]
                0.00    0.00       2/3           void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
[311]    0.0    0.00    0.00       3         std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_deallocate(multi::thread*, unsigned long) [311]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<multi::thread> >::deallocate(std::allocator<multi::thread>&, multi::thread*, unsigned long) [337]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_allocate(unsigned long) [310]
[312]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<multi::thread> >::allocate(std::allocator<multi::thread>&, unsigned long) [312]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<multi::thread>::allocate(unsigned long, void const*) [305]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
[313]    0.0    0.00    0.00       3         void std::allocator_traits<std::allocator<multi::thread> >::construct<multi::thread, main::{lambda()#2}&>(std::allocator<multi::thread>&, multi::thread*, main::{lambda()#2}&) [313]
                0.00    0.00       3/18          main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&) [239]
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#2}&>(multi::thread*, main::{lambda()#2}&) [306]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bind<main::{lambda()#2} ()>::_Bind<>({lambda()#2} const&) [318]
[314]    0.0    0.00    0.00       3         std::_Weak_result_type<main::{lambda()#2}>::_Weak_result_type() [314]
                0.00    0.00       3/3           std::_Weak_result_type_impl<main::{lambda()#2}>::_Weak_result_type_impl() [316]
-----------------------------------------------
                0.00    0.00       3/3           std::_Weak_result_type_impl<main::{lambda()#2}>::_Weak_result_type_impl() [316]
[315]    0.0    0.00    0.00       3         std::_Maybe_get_result_type<main::{lambda()#2}, void>::_Maybe_get_result_type() [315]
-----------------------------------------------
                0.00    0.00       3/3           std::_Weak_result_type<main::{lambda()#2}>::_Weak_result_type() [314]
[316]    0.0    0.00    0.00       3         std::_Weak_result_type_impl<main::{lambda()#2}>::_Weak_result_type_impl() [316]
                0.00    0.00       3/3           std::_Maybe_get_result_type<main::{lambda()#2}, void>::_Maybe_get_result_type() [315]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >::value, std::decay>::type std::bind<main::{lambda()#2}&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >&&)...) [323]
[317]    0.0    0.00    0.00       3         std::_Maybe_wrap_member_pointer<main::{lambda()#2}>::__do_wrap({lambda()#2} const&) [317]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >::value, std::decay>::type std::bind<main::{lambda()#2}&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >&&)...) [323]
[318]    0.0    0.00    0.00       3         std::_Bind<main::{lambda()#2} ()>::_Bind<>({lambda()#2} const&) [318]
                0.00    0.00       3/3           std::_Weak_result_type<main::{lambda()#2}>::_Weak_result_type() [314]
-----------------------------------------------
                0.00    0.00       1/3           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [17]
                0.00    0.00       2/3           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
[319]    0.0    0.00    0.00       3         std::bitset<2ul>::reference::operator=(bool) [319]
                0.00    0.00       3/8956        std::_Base_bitset<1ul>::_S_maskbit(unsigned long) [207]
-----------------------------------------------
                0.00    0.00       3/3           main [116]
[320]    0.0    0.00    0.00       3         void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#2}&>(main::{lambda()#2}&) [320]
                0.00    0.00       3/18          main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&) [239]
                0.00    0.00       3/3           void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#2}&>(main::{lambda()#2}&) [320]
[321]    0.0    0.00    0.00       3         void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
                0.00    0.00       5/6           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_get_Tp_allocator() [256]
                0.00    0.00       3/3           std::vector<multi::thread, std::allocator<multi::thread> >::_M_check_len(unsigned long, char const*) const [308]
                0.00    0.00       3/3           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_allocate(unsigned long) [310]
                0.00    0.00       3/18          main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&) [239]
                0.00    0.00       3/15          std::vector<multi::thread, std::allocator<multi::thread> >::size() const [240]
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<multi::thread> >::construct<multi::thread, main::{lambda()#2}&>(std::allocator<multi::thread>&, multi::thread*, main::{lambda()#2}&) [313]
                0.00    0.00       3/3           multi::thread* std::__uninitialized_move_if_noexcept_a<multi::thread*, multi::thread*, std::allocator<multi::thread> >(multi::thread*, multi::thread*, multi::thread*, std::allocator<multi::thread>&) [322]
                0.00    0.00       3/4           void std::_Destroy<multi::thread*, multi::thread>(multi::thread*, multi::thread*, std::allocator<multi::thread>&) [294]
                0.00    0.00       2/3           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_deallocate(multi::thread*, unsigned long) [311]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&) [321]
[322]    0.0    0.00    0.00       3         multi::thread* std::__uninitialized_move_if_noexcept_a<multi::thread*, multi::thread*, std::allocator<multi::thread> >(multi::thread*, multi::thread*, multi::thread*, std::allocator<multi::thread>&) [322]
                0.00    0.00       5/5           std::move_iterator<multi::thread*> std::__make_move_if_noexcept_iterator<multi::thread*, std::move_iterator<multi::thread*> >(multi::thread*) [260]
                0.00    0.00       2/2           multi::thread* std::__uninitialized_copy_a<std::move_iterator<multi::thread*>, multi::thread*, multi::thread>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*, std::allocator<multi::thread>&) [340]
-----------------------------------------------
                0.00    0.00       3/3           multi::thread::thread<main::{lambda()#2}&>(main::{lambda()#2}&) [303]
[323]    0.0    0.00    0.00       3         std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >::value, std::decay>::type std::bind<main::{lambda()#2}&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >&&)...) [323]
                0.00    0.00       3/18          main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&) [239]
                0.00    0.00       3/3           std::_Maybe_wrap_member_pointer<main::{lambda()#2}>::__do_wrap({lambda()#2} const&) [317]
                0.00    0.00       3/3           std::_Bind<main::{lambda()#2} ()>::_Bind<>({lambda()#2} const&) [318]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_M_swap_data(std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl&) [367]
[324]    0.0    0.00    0.00       3         void std::swap<priorited_function*>(priorited_function*&, priorited_function*&) [324]
                0.00    0.00       9/9           std::remove_reference<priorited_function*&>::type&& std::move<priorited_function*&>(priorited_function*&) [249]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<multi::thread*, multi::thread>(multi::thread*, multi::thread*, std::allocator<multi::thread>&) [294]
[325]    0.0    0.00    0.00       3         void std::_Destroy<multi::thread*>(multi::thread*, multi::thread*) [325]
                0.00    0.00       3/3           void std::_Destroy_aux<false>::__destroy<multi::thread*>(multi::thread*, multi::thread*) [309]
-----------------------------------------------
                0.00    0.00       3/3           bool std::operator!=<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&) [327]
[326]    0.0    0.00    0.00       3         bool std::operator==<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&) [326]
                0.00    0.00       7/7           std::move_iterator<multi::thread*>::base() const [251]
-----------------------------------------------
                0.00    0.00       3/3           multi::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [338]
[327]    0.0    0.00    0.00       3         bool std::operator!=<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&) [327]
                0.00    0.00       3/3           bool std::operator==<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&) [326]
-----------------------------------------------
                0.00    0.00       3/3           multi::thread::thread<main::{lambda()#2}&>(main::{lambda()#2}&) [303]
[328]    0.0    0.00    0.00       3         _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENKUlPvE_cvPFS9_S9_EEv [328]
-----------------------------------------------
                0.00    0.00       2/2           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException) [119]
[329]    0.0    0.00    0.00       2         multi::condition_variable::condition_variable() [329]
-----------------------------------------------
                0.00    0.00       2/2           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::~thread_pool() [120]
[330]    0.0    0.00    0.00       2         multi::condition_variable::~condition_variable() [330]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<priorited_function>::~allocator() [334]
[331]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<priorited_function>::~new_allocator() [331]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<multi::thread> >::deallocate(std::allocator<multi::thread>&, multi::thread*, unsigned long) [337]
[332]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<multi::thread>::deallocate(multi::thread*, unsigned long) [332]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<multi::thread, std::allocator<multi::thread> >::begin() [394]
                0.00    0.00       1/2           std::vector<multi::thread, std::allocator<multi::thread> >::end() [393]
[333]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::__normal_iterator(multi::thread* const&) [333]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::~_Vector_impl() [335]
[334]    0.0    0.00    0.00       2         std::allocator<priorited_function>::~allocator() [334]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<priorited_function>::~new_allocator() [331]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::~_Vector_base() [336]
[335]    0.0    0.00    0.00       2         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::~_Vector_impl() [335]
                0.00    0.00       2/2           std::allocator<priorited_function>::~allocator() [334]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<priorited_function, std::allocator<priorited_function> >::~vector() [117]
[336]    0.0    0.00    0.00       2         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::~_Vector_base() [336]
                0.00    0.00       2/21          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_deallocate(priorited_function*, unsigned long) [232]
                0.00    0.00       2/2           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::~_Vector_impl() [335]
-----------------------------------------------
                0.00    0.00       2/2           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_deallocate(multi::thread*, unsigned long) [311]
[337]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<multi::thread> >::deallocate(std::allocator<multi::thread>&, multi::thread*, unsigned long) [337]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<multi::thread>::deallocate(multi::thread*, unsigned long) [332]
-----------------------------------------------
                0.00    0.00       2/2           multi::thread* std::uninitialized_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [339]
[338]    0.0    0.00    0.00       2         multi::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [338]
                0.00    0.00       3/3           bool std::operator!=<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&) [327]
                0.00    0.00       3/3           std::move_iterator<multi::thread*>::operator*() const [307]
                0.00    0.00       1/7           multi::thread* std::__addressof<multi::thread>(multi::thread&) [252]
                0.00    0.00       1/1           std::move_iterator<multi::thread*>::operator++() [376]
                0.00    0.00       1/1           void std::_Construct<multi::thread, multi::thread>(multi::thread*, multi::thread&&) [397]
-----------------------------------------------
                0.00    0.00       2/2           multi::thread* std::__uninitialized_copy_a<std::move_iterator<multi::thread*>, multi::thread*, multi::thread>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*, std::allocator<multi::thread>&) [340]
[339]    0.0    0.00    0.00       2         multi::thread* std::uninitialized_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [339]
                0.00    0.00       2/2           multi::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [338]
-----------------------------------------------
                0.00    0.00       2/2           multi::thread* std::__uninitialized_move_if_noexcept_a<multi::thread*, multi::thread*, std::allocator<multi::thread> >(multi::thread*, multi::thread*, multi::thread*, std::allocator<multi::thread>&) [322]
[340]    0.0    0.00    0.00       2         multi::thread* std::__uninitialized_copy_a<std::move_iterator<multi::thread*>, multi::thread*, multi::thread>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*, std::allocator<multi::thread>&) [340]
                0.00    0.00       2/2           multi::thread* std::uninitialized_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [339]
-----------------------------------------------
                0.00    0.00       1/2           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base(std::_Vector_base<priorited_function, std::allocator<priorited_function> >&&) [371]
                0.00    0.00       1/2           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl(std::allocator<priorited_function>&&) [368]
[341]    0.0    0.00    0.00       2         std::remove_reference<std::allocator<priorited_function>&>::type&& std::move<std::allocator<priorited_function>&>(std::allocator<priorited_function>&) [341]
-----------------------------------------------
                0.00    0.00       1/2           std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::priority_queue(std::less<priorited_function> const&, std::vector<priorited_function, std::allocator<priorited_function> >&&) [139]
                0.00    0.00       1/2           std::vector<priorited_function, std::allocator<priorited_function> >::vector(std::vector<priorited_function, std::allocator<priorited_function> >&&) [391]
[342]    0.0    0.00    0.00       2         std::remove_reference<std::vector<priorited_function, std::allocator<priorited_function> >&>::type&& std::move<std::vector<priorited_function, std::allocator<priorited_function> >&>(std::vector<priorited_function, std::allocator<priorited_function> >&) [342]
-----------------------------------------------
                0.00    0.00       2/2           void std::_Construct<multi::thread, multi::thread>(multi::thread*, multi::thread&&) [397]
[343]    0.0    0.00    0.00       2         multi::thread&& std::forward<multi::thread>(std::remove_reference<multi::thread>::type&) [343]
-----------------------------------------------
                0.00    0.00       1/2           void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#3}&>(main::{lambda()#3}&) [392]
                0.00    0.00       1/2           multi::thread::thread<main::{lambda()#3}&>(main::{lambda()#3}&) [354]
[344]    0.0    0.00    0.00       2         main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&) [344]
-----------------------------------------------
                0.00    0.00       1/2           multi::thread::thread<main::{lambda()#4}>(main::{lambda()#4}&&) [355]
                0.00    0.00       1/2           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >::value, std::decay>::type std::bind<main::{lambda()#4}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >&&)...) [398]
[345]    0.0    0.00    0.00       2         main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&) [345]
-----------------------------------------------
                0.00    0.00       1/2           multi::thread::thread<main::{lambda()#5}>(main::{lambda()#5}&&) [356]
                0.00    0.00       1/2           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >::value, std::decay>::type std::bind<main::{lambda()#5}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >&&)...) [399]
[346]    0.0    0.00    0.00       2         main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [346]
-----------------------------------------------
                0.00    0.00       2/2           void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}) [352]
[347]    0.0    0.00    0.00       2         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}::operator()() const [347]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [431]
[348]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZltRK18priorited_functionS1_ [348]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [349]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZltRK18priorited_functionS1_ [348]
[349]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [349]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [137]
[350]    0.0    0.00    0.00       1         void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}) [350]
                0.00    0.00       5/5           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}::operator()() const [261]
                0.00    0.00       4/10432       multi::condition_variable::wait(multi::unique_lock<multi::mutex>&) [182]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join() [147]
[351]    0.0    0.00    0.00       1         void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}) [351]
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}::operator()() const [403]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
[352]    0.0    0.00    0.00       1         void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}) [352]
                0.00    0.00       2/2           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}::operator()() const [347]
                0.00    0.00       1/10432       multi::condition_variable::wait(multi::unique_lock<multi::mutex>&) [182]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [138]
[353]    0.0    0.00    0.00       1         void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}) [353]
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}::operator()() const [404]
-----------------------------------------------
                0.00    0.00       1/1           void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#3}&>(multi::thread*, main::{lambda()#3}&) [359]
[354]    0.0    0.00    0.00       1         multi::thread::thread<main::{lambda()#3}&>(main::{lambda()#3}&) [354]
                0.00    0.00       1/2           main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&) [344]
                0.00    0.00       1/1           _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENKUlPvE_cvPFS9_S9_EEv [405]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[355]    0.0    0.00    0.00       1         multi::thread::thread<main::{lambda()#4}>(main::{lambda()#4}&&) [355]
                0.00    0.00       1/2           main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&) [345]
                0.00    0.00       1/1           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >::value, std::decay>::type std::bind<main::{lambda()#4}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >&&)...) [398]
                0.00    0.00       1/1           _ZZN5multi6threadC4IZ4mainEUlvE2_JEEEOT_DpOT0_ENKUlPvE_cvPFS8_S8_EEv [406]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[356]    0.0    0.00    0.00       1         multi::thread::thread<main::{lambda()#5}>(main::{lambda()#5}&&) [356]
                0.00    0.00       1/2           main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [346]
                0.00    0.00       1/1           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >::value, std::decay>::type std::bind<main::{lambda()#5}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >&&)...) [399]
                0.00    0.00       1/1           _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENKUlPvE_cvPFS8_S8_EEv [407]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<priorited_function>::allocator(std::allocator<priorited_function> const&) [362]
[357]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<priorited_function>::new_allocator(__gnu_cxx::new_allocator<priorited_function> const&) [357]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<priorited_function>::allocator() [363]
[358]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<priorited_function>::new_allocator() [358]
-----------------------------------------------
                0.00    0.00       1/1           void std::allocator_traits<std::allocator<multi::thread> >::construct<multi::thread, main::{lambda()#3}&>(std::allocator<multi::thread>&, multi::thread*, main::{lambda()#3}&) [415]
[359]    0.0    0.00    0.00       1         void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#3}&>(multi::thread*, main::{lambda()#3}&) [359]
                0.00    0.00       1/550886      operator new(unsigned long, void*) [161]
                0.00    0.00       1/1           multi::thread::thread<main::{lambda()#3}&>(main::{lambda()#3}&) [354]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<multi::thread>::allocator() [364]
[360]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<multi::thread>::new_allocator() [360]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<multi::thread>::~allocator() [365]
[361]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<multi::thread>::~new_allocator() [361]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl(std::allocator<priorited_function>&&) [368]
[362]    0.0    0.00    0.00       1         std::allocator<priorited_function>::allocator(std::allocator<priorited_function> const&) [362]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<priorited_function>::new_allocator(__gnu_cxx::new_allocator<priorited_function> const&) [357]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl() [369]
[363]    0.0    0.00    0.00       1         std::allocator<priorited_function>::allocator() [363]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<priorited_function>::new_allocator() [358]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::_Vector_impl() [372]
[364]    0.0    0.00    0.00       1         std::allocator<multi::thread>::allocator() [364]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<multi::thread>::new_allocator() [360]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::~_Vector_impl() [373]
[365]    0.0    0.00    0.00       1         std::allocator<multi::thread>::~allocator() [365]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<multi::thread>::~new_allocator() [361]
-----------------------------------------------
                0.00    0.00       1/1           std::bitset<2ul>::bitset() [389]
[366]    0.0    0.00    0.00       1         std::_Base_bitset<1ul>::_Base_bitset() [366]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base(std::_Vector_base<priorited_function, std::allocator<priorited_function> >&&) [371]
[367]    0.0    0.00    0.00       1         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_M_swap_data(std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl&) [367]
                0.00    0.00       3/3           void std::swap<priorited_function*>(priorited_function*&, priorited_function*&) [324]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base(std::_Vector_base<priorited_function, std::allocator<priorited_function> >&&) [371]
[368]    0.0    0.00    0.00       1         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl(std::allocator<priorited_function>&&) [368]
                0.00    0.00       1/2           std::remove_reference<std::allocator<priorited_function>&>::type&& std::move<std::allocator<priorited_function>&>(std::allocator<priorited_function>&) [341]
                0.00    0.00       1/1           std::allocator<priorited_function>::allocator(std::allocator<priorited_function> const&) [362]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base() [370]
[369]    0.0    0.00    0.00       1         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl() [369]
                0.00    0.00       1/1           std::allocator<priorited_function>::allocator() [363]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<priorited_function, std::allocator<priorited_function> >::vector() [390]
[370]    0.0    0.00    0.00       1         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base() [370]
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl() [369]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<priorited_function, std::allocator<priorited_function> >::vector(std::vector<priorited_function, std::allocator<priorited_function> >&&) [391]
[371]    0.0    0.00    0.00       1         std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base(std::_Vector_base<priorited_function, std::allocator<priorited_function> >&&) [371]
                0.00    0.00       1/2           std::remove_reference<std::allocator<priorited_function>&>::type&& std::move<std::allocator<priorited_function>&>(std::allocator<priorited_function>&) [341]
                0.00    0.00       1/44          std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() [224]
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl(std::allocator<priorited_function>&&) [368]
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_M_swap_data(std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl&) [367]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_base() [374]
[372]    0.0    0.00    0.00       1         std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::_Vector_impl() [372]
                0.00    0.00       1/1           std::allocator<multi::thread>::allocator() [364]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::~_Vector_base() [375]
[373]    0.0    0.00    0.00       1         std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::~_Vector_impl() [373]
                0.00    0.00       1/1           std::allocator<multi::thread>::~allocator() [365]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<multi::thread, std::allocator<multi::thread> >::vector() [395]
[374]    0.0    0.00    0.00       1         std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_base() [374]
                0.00    0.00       1/1           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::_Vector_impl() [372]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<multi::thread, std::allocator<multi::thread> >::~vector() [396]
[375]    0.0    0.00    0.00       1         std::_Vector_base<multi::thread, std::allocator<multi::thread> >::~_Vector_base() [375]
                0.00    0.00       1/1           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::~_Vector_impl() [373]
                0.00    0.00       1/3           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_deallocate(multi::thread*, unsigned long) [311]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [338]
[376]    0.0    0.00    0.00       1         std::move_iterator<multi::thread*>::operator++() [376]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bind<main::{lambda()#4} ()>::_Bind<>({lambda()#4}&&) [386]
[377]    0.0    0.00    0.00       1         std::_Weak_result_type<main::{lambda()#4}>::_Weak_result_type() [377]
                0.00    0.00       1/1           std::_Weak_result_type_impl<main::{lambda()#4}>::_Weak_result_type_impl() [382]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bind<main::{lambda()#5} ()>::_Bind<>({lambda()#5}&&) [388]
[378]    0.0    0.00    0.00       1         std::_Weak_result_type<main::{lambda()#5}>::_Weak_result_type() [378]
                0.00    0.00       1/1           std::_Weak_result_type_impl<main::{lambda()#5}>::_Weak_result_type_impl() [383]
-----------------------------------------------
                0.00    0.00       1/1           std::_Weak_result_type_impl<main::{lambda()#4}>::_Weak_result_type_impl() [382]
[379]    0.0    0.00    0.00       1         std::_Maybe_get_result_type<main::{lambda()#4}, void>::_Maybe_get_result_type() [379]
-----------------------------------------------
                0.00    0.00       1/1           std::_Weak_result_type_impl<main::{lambda()#5}>::_Weak_result_type_impl() [383]
[380]    0.0    0.00    0.00       1         std::_Maybe_get_result_type<main::{lambda()#5}, void>::_Maybe_get_result_type() [380]
-----------------------------------------------
                0.00    0.00       1/1           std::_Weak_result_type<main::{lambda()#3}>::_Weak_result_type() [416]
[381]    0.0    0.00    0.00       1         std::_Weak_result_type_impl<main::{lambda()#3}>::_Weak_result_type_impl() [381]
-----------------------------------------------
                0.00    0.00       1/1           std::_Weak_result_type<main::{lambda()#4}>::_Weak_result_type() [377]
[382]    0.0    0.00    0.00       1         std::_Weak_result_type_impl<main::{lambda()#4}>::_Weak_result_type_impl() [382]
                0.00    0.00       1/1           std::_Maybe_get_result_type<main::{lambda()#4}, void>::_Maybe_get_result_type() [379]
-----------------------------------------------
                0.00    0.00       1/1           std::_Weak_result_type<main::{lambda()#5}>::_Weak_result_type() [378]
[383]    0.0    0.00    0.00       1         std::_Weak_result_type_impl<main::{lambda()#5}>::_Weak_result_type_impl() [383]
                0.00    0.00       1/1           std::_Maybe_get_result_type<main::{lambda()#5}, void>::_Maybe_get_result_type() [380]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >::value, std::decay>::type std::bind<main::{lambda()#4}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >&&)...) [398]
[384]    0.0    0.00    0.00       1         std::_Maybe_wrap_member_pointer<main::{lambda()#4}>::__do_wrap({lambda()#4}&&) [384]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >::value, std::decay>::type std::bind<main::{lambda()#5}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >&&)...) [399]
[385]    0.0    0.00    0.00       1         std::_Maybe_wrap_member_pointer<main::{lambda()#5}>::__do_wrap({lambda()#5}&&) [385]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >::value, std::decay>::type std::bind<main::{lambda()#4}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >&&)...) [398]
[386]    0.0    0.00    0.00       1         std::_Bind<main::{lambda()#4} ()>::_Bind<>({lambda()#4}&&) [386]
                0.00    0.00       1/1           std::_Weak_result_type<main::{lambda()#4}>::_Weak_result_type() [377]
                0.00    0.00       1/1           std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&) [401]
-----------------------------------------------
                0.00    0.00       1/1           _ZZN5multi6threadC4IZ4mainEUlvE2_JEEEOT_DpOT0_ENKUlPvE_clES8_ [423]
[387]    0.0    0.00    0.00       1         void std::_Bind<main::{lambda()#4} ()>::operator()<, void>() [387]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >::value, std::decay>::type std::bind<main::{lambda()#5}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >&&)...) [399]
[388]    0.0    0.00    0.00       1         std::_Bind<main::{lambda()#5} ()>::_Bind<>({lambda()#5}&&) [388]
                0.00    0.00       1/1           std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&) [402]
                0.00    0.00       1/1           std::_Weak_result_type<main::{lambda()#5}>::_Weak_result_type() [378]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException) [119]
[389]    0.0    0.00    0.00       1         std::bitset<2ul>::bitset() [389]
                0.00    0.00       1/1           std::_Base_bitset<1ul>::_Base_bitset() [366]
-----------------------------------------------
                0.00    0.00       1/1           pqueue<priorited_function>::pqueue() [121]
[390]    0.0    0.00    0.00       1         std::vector<priorited_function, std::allocator<priorited_function> >::vector() [390]
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base() [370]
-----------------------------------------------
                0.00    0.00       1/1           std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::priority_queue(std::less<priorited_function> const&, std::vector<priorited_function, std::allocator<priorited_function> >&&) [139]
[391]    0.0    0.00    0.00       1         std::vector<priorited_function, std::allocator<priorited_function> >::vector(std::vector<priorited_function, std::allocator<priorited_function> >&&) [391]
                0.00    0.00       1/2           std::remove_reference<std::vector<priorited_function, std::allocator<priorited_function> >&>::type&& std::move<std::vector<priorited_function, std::allocator<priorited_function> >&>(std::vector<priorited_function, std::allocator<priorited_function> >&) [342]
                0.00    0.00       1/1           std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base(std::_Vector_base<priorited_function, std::allocator<priorited_function> >&&) [371]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[392]    0.0    0.00    0.00       1         void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#3}&>(main::{lambda()#3}&) [392]
                0.00    0.00       1/2           main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&) [344]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[393]    0.0    0.00    0.00       1         std::vector<multi::thread, std::allocator<multi::thread> >::end() [393]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::__normal_iterator(multi::thread* const&) [333]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[394]    0.0    0.00    0.00       1         std::vector<multi::thread, std::allocator<multi::thread> >::begin() [394]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::__normal_iterator(multi::thread* const&) [333]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[395]    0.0    0.00    0.00       1         std::vector<multi::thread, std::allocator<multi::thread> >::vector() [395]
                0.00    0.00       1/1           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_base() [374]
-----------------------------------------------
                0.00    0.00       1/1           main [116]
[396]    0.0    0.00    0.00       1         std::vector<multi::thread, std::allocator<multi::thread> >::~vector() [396]
                0.00    0.00       1/6           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_get_Tp_allocator() [256]
                0.00    0.00       1/4           void std::_Destroy<multi::thread*, multi::thread>(multi::thread*, multi::thread*, std::allocator<multi::thread>&) [294]
                0.00    0.00       1/1           std::_Vector_base<multi::thread, std::allocator<multi::thread> >::~_Vector_base() [375]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [338]
[397]    0.0    0.00    0.00       1         void std::_Construct<multi::thread, multi::thread>(multi::thread*, multi::thread&&) [397]
                0.00    0.00       3/550886      operator new(unsigned long, void*) [161]
                0.00    0.00       3/3           multi::thread::thread(multi::thread&&) [304]
                0.00    0.00       2/2           multi::thread&& std::forward<multi::thread>(std::remove_reference<multi::thread>::type&) [343]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread::thread<main::{lambda()#4}>(main::{lambda()#4}&&) [355]
[398]    0.0    0.00    0.00       1         std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >::value, std::decay>::type std::bind<main::{lambda()#4}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >&&)...) [398]
                0.00    0.00       1/1           std::_Maybe_wrap_member_pointer<main::{lambda()#4}>::__do_wrap({lambda()#4}&&) [384]
                0.00    0.00       1/2           main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&) [345]
                0.00    0.00       1/1           std::_Bind<main::{lambda()#4} ()>::_Bind<>({lambda()#4}&&) [386]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread::thread<main::{lambda()#5}>(main::{lambda()#5}&&) [356]
[399]    0.0    0.00    0.00       1         std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >::value, std::decay>::type std::bind<main::{lambda()#5}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >&&)...) [399]
                0.00    0.00       1/2           main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [346]
                0.00    0.00       1/1           std::_Maybe_wrap_member_pointer<main::{lambda()#5}>::__do_wrap({lambda()#5}&&) [385]
                0.00    0.00       1/1           std::_Bind<main::{lambda()#5} ()>::_Bind<>({lambda()#5}&&) [388]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException) [119]
[400]    0.0    0.00    0.00       1         std::remove_reference<multi::RethrowThreadException&>::type&& std::move<multi::RethrowThreadException&>(multi::RethrowThreadException&) [400]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bind<main::{lambda()#4} ()>::_Bind<>({lambda()#4}&&) [386]
[401]    0.0    0.00    0.00       1         std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&) [401]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bind<main::{lambda()#5} ()>::_Bind<>({lambda()#5}&&) [388]
[402]    0.0    0.00    0.00       1         std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&) [402]
-----------------------------------------------
                0.00    0.00       1/1           void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}) [351]
[403]    0.0    0.00    0.00       1         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}::operator()() const [403]
                0.00    0.00       1/8956        std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::empty() const [206]
-----------------------------------------------
                0.00    0.00       1/1           void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}) [353]
[404]    0.0    0.00    0.00       1         multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}::operator()() const [404]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread::thread<main::{lambda()#3}&>(main::{lambda()#3}&) [354]
[405]    0.0    0.00    0.00       1         _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENKUlPvE_cvPFS9_S9_EEv [405]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread::thread<main::{lambda()#4}>(main::{lambda()#4}&&) [355]
[406]    0.0    0.00    0.00       1         _ZZN5multi6threadC4IZ4mainEUlvE2_JEEEOT_DpOT0_ENKUlPvE_cvPFS8_S8_EEv [406]
-----------------------------------------------
                0.00    0.00       1/1           multi::thread::thread<main::{lambda()#5}>(main::{lambda()#5}&&) [356]
[407]    0.0    0.00    0.00       1         _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENKUlPvE_cvPFS8_S8_EEv [407]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [348] _GLOBAL__sub_I__ZltRK18priorited_functionS1_ [222] std::vector<priorited_function, std::allocator<priorited_function> >::size() const [219] std::chrono::duration<long, std::ratio<1l, 1000000l> >::duration<long, void>(long const&)
 [349] __static_initialization_and_destruction_0(int, int) [180] std::vector<priorited_function, std::allocator<priorited_function> >::begin() const [215] std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<int, void>(int const&)
  [14] priorited_function::priorited_function(priorited_function&&) [213] std::vector<priorited_function, std::allocator<priorited_function> >::empty() const [244] std::chrono::duration<long, std::ratio<1l, 1l> >::duration<int, void>(int const&)
  [52] priorited_function::priorited_function(priorited_function const&) [200] std::vector<priorited_function, std::allocator<priorited_function> >::front() const [15] void std::vector<priorited_function, std::allocator<priorited_function> >::emplace_back<priorited_function>(priorited_function&&)
  [36] priorited_function::priorited_function(unsigned int, std::function<void ()>) [226] std::vector<priorited_function, std::allocator<priorited_function> >::max_size() const [114] std::vector<priorited_function, std::allocator<priorited_function> >::_M_erase_at_end(priorited_function*)
  [39] priorited_function::~priorited_function() [308] std::vector<multi::thread, std::allocator<multi::thread> >::_M_check_len(unsigned long, char const*) const [31] void std::vector<priorited_function, std::allocator<priorited_function> >::_M_emplace_back_aux<priorited_function>(priorited_function&&)
  [12] priorited_function::operator=(priorited_function&&) [240] std::vector<multi::thread, std::allocator<multi::thread> >::size() const [98] std::vector<priorited_function, std::allocator<priorited_function> >::end()
  [75] priorited_function::operator()() [255] std::vector<multi::thread, std::allocator<multi::thread> >::max_size() const [97] std::vector<priorited_function, std::allocator<priorited_function> >::begin()
 [129] multi::lock_guard<multi::mutex>::lock_guard(multi::mutex&) [76] std::function<void ()>::operator()() const [115] std::vector<priorited_function, std::allocator<priorited_function> >::clear()
 [131] multi::lock_guard<multi::mutex>::~lock_guard() [105] std::function<void ()>::operator bool() const [126] std::vector<priorited_function, std::allocator<priorited_function> >::pop_back()
 [196] multi::this_thread::get_id() [171] std::_Any_data::_M_access() const [390] std::vector<priorited_function, std::allocator<priorited_function> >::vector()
  [85] void multi::this_thread::sleep_for<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [172] std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>* const& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>() const [391] std::vector<priorited_function, std::allocator<priorited_function> >::vector(std::vector<priorited_function, std::allocator<priorited_function> >&&)
 [242] void multi::this_thread::sleep_for<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [362] std::allocator<priorited_function>::allocator(std::allocator<priorited_function> const&) [117] std::vector<priorited_function, std::allocator<priorited_function> >::~vector()
 [137] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool) [363] std::allocator<priorited_function>::allocator() [320] void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#2}&>(main::{lambda()#2}&)
 [138] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear() [334] std::allocator<priorited_function>::~allocator() [392] void std::vector<multi::thread, std::allocator<multi::thread> >::emplace_back<main::{lambda()#3}&>(main::{lambda()#3}&)
 [150] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::resume() [364] std::allocator<multi::thread>::allocator() [321] void std::vector<multi::thread, std::allocator<multi::thread> >::_M_emplace_back_aux<main::{lambda()#2}&>(main::{lambda()#2}&)
   [6] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::enqueue(priorited_function) [365] std::allocator<multi::thread>::~allocator() [393] std::vector<multi::thread, std::allocator<multi::thread> >::end()
  [17] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine() [271] std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>::_M_head(std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>&) [394] std::vector<multi::thread, std::allocator<multi::thread> >::begin()
 [119] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::thread_pool(unsigned long, multi::RethrowThreadException) [272] std::_Head_base<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false>::_Head_base<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [395] std::vector<multi::thread, std::allocator<multi::thread> >::vector()
 [120] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::~thread_pool() [163] std::_Head_base<0ul, unsigned long, false>::_M_head(std::_Head_base<0ul, unsigned long, false>&) [396] std::vector<multi::thread, std::allocator<multi::thread> >::~vector()
 [112] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::discard_queue() [90] std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long&>(unsigned long&) [285] std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::_Mem_fn(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)())
 [147] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join() [81] std::_Head_base<0ul, unsigned long, false>::_Head_base<unsigned long>(unsigned long&&) [10] std::function<void ()>::swap(std::function<void ()>&)
 [151] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::pause() [62] std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl(std::_Tuple_impl<0ul, unsigned long>&&) [11] std::function<void ()>::function(std::function<void ()>&&)
 [221] multi::unique_lock<multi::mutex>::lock_assert(bool, bool) [273] std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_M_head(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&) [53] std::function<void ()>::function(std::function<void ()> const&)
 [134] multi::unique_lock<multi::mutex>::lock() [274] std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Tuple_impl<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [27] std::function<void ()>::function<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>, void, void>(std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>)
 [185] multi::unique_lock<multi::mutex>::mutex() [84] std::_Tuple_impl<0ul, unsigned long>::_M_head(std::_Tuple_impl<0ul, unsigned long>&) [42] std::function<void ()>::~function()
 [130] multi::unique_lock<multi::mutex>::unlock() [74] std::_Tuple_impl<0ul, unsigned long>::_Tuple_impl<unsigned long&>(unsigned long&) [13] std::function<void ()>::operator=(std::function<void ()>&&)
  [86] multi::unique_lock<multi::mutex>::unique_lock(multi::mutex&) [205] std::_Base_bitset<1ul>::_M_getword(unsigned long) [104] std::_Any_data::_M_access()
 [106] multi::unique_lock<multi::mutex>::~unique_lock() [207] std::_Base_bitset<1ul>::_S_maskbit(unsigned long) [73] std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*& std::_Any_data::_M_access<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>*>()
 [178] multi::condition_variable::notify_all() [179] std::_Base_bitset<1ul>::_S_whichbit(unsigned long) [286] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::_Mu<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, false, false>::operator()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<> >(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&, std::tuple<>&) const volatile
 [164] multi::condition_variable::notify_one() [366] std::_Base_bitset<1ul>::_Base_bitset() [136] unsigned long& std::_Mu<unsigned long, false, false>::operator()<unsigned long&, std::tuple<> >(unsigned long&, std::tuple<>&) const volatile
 [182] multi::condition_variable::wait(multi::unique_lock<multi::mutex>&) [54] void std::_Destroy_aux<false>::__destroy<priorited_function*>(priorited_function*, priorited_function*) [51] _ZSt10_ConstructI18priorited_functionIRS0_EEvPT_DpOT0_
 [350] void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}) [309] void std::_Destroy_aux<false>::__destroy<multi::thread*>(multi::thread*, multi::thread*) [397] void std::_Construct<multi::thread, multi::thread>(multi::thread*, multi::thread&&)
 [351] void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}) [275] std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::_Mem_fn_base(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [26] void std::__pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >)
 [352] void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}) [236] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_allocate(unsigned long) [92] priorited_function* std::__addressof<priorited_function>(priorited_function&)
 [353] void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}) [367] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_M_swap_data(std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl&) [170] multi::mutex* std::__addressof<multi::mutex>(multi::mutex&)
 [197] void multi::condition_variable::wait<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}>(multi::unique_lock<multi::mutex>&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}) [368] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl(std::allocator<priorited_function>&&) [252] multi::thread* std::__addressof<multi::thread>(multi::thread&)
 [329] multi::condition_variable::condition_variable() [369] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::_Vector_impl() [148] void std::__make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >)
 [330] multi::condition_variable::~condition_variable() [335] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_impl::~_Vector_impl() [9] void std::__push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >)
 [262] multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(multi::p_::scope_guard&&) [232] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_deallocate(priorited_function*, unsigned long) [287] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::__get_helper<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Tuple_impl<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&)
 [186] multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}> multi::p_::make_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(multi::p_::scope_guard&&) [224] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() [127] unsigned long& std::__get_helper<0ul, unsigned long>(std::_Tuple_impl<0ul, unsigned long>&)
 [132] multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::~scope_guard() [370] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base() [29] void std::__adjust_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, long, long, priorited_function, __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >)
 [263] multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::scope_guard({lambda()#1}) [371] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_Vector_base(std::_Vector_base<priorited_function, std::allocator<priorited_function> >&&) [189] std::tuple<> std::forward_as_tuple<>()
 [264] multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::~scope_guard() [336] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::~_Vector_base() [45] priorited_function* std::uninitialized_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*)
 [190] multi::p_::scope_guard<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::scope_guard({lambda()#3}) [310] std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_allocate(unsigned long) [339] multi::thread* std::uninitialized_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*)
 [297] multi::p_::mutex::mtx_type_init(pthread_mutex_t*, int) [372] std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::_Vector_impl() [46] priorited_function* std::__uninitialized_copy_a<priorited_function*, priorited_function*, priorited_function>(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&)
 [298] multi::p_::mutex::init(pthread_mutex_t*) [373] std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_impl::~_Vector_impl() [340] multi::thread* std::__uninitialized_copy_a<std::move_iterator<multi::thread*>, multi::thread*, multi::thread>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*, std::allocator<multi::thread>&)
 [162] multi::p_::mutex::lock(pthread_mutex_t*) [311] std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_deallocate(multi::thread*, unsigned long) [228] priorited_function* std::__make_move_if_noexcept_iterator<priorited_function*, priorited_function*>(priorited_function*)
 [183] multi::p_::mutex::handle(pthread_mutex_t*) [256] std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_get_Tp_allocator() [260] std::move_iterator<multi::thread*> std::__make_move_if_noexcept_iterator<multi::thread*, std::move_iterator<multi::thread*> >(multi::thread*)
  [95] multi::p_::mutex::unlock(pthread_mutex_t*) [374] std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_Vector_base() [47] priorited_function* std::__uninitialized_move_if_noexcept_a<priorited_function*, priorited_function*, std::allocator<priorited_function> >(priorited_function*, priorited_function*, priorited_function*, std::allocator<priorited_function>&)
 [299] multi::p_::mutex::destroy(pthread_mutex_t*) [375] std::_Vector_base<multi::thread, std::allocator<multi::thread> >::~_Vector_base() [322] multi::thread* std::__uninitialized_move_if_noexcept_a<multi::thread*, multi::thread*, std::allocator<multi::thread> >(multi::thread*, multi::thread*, multi::thread*, std::allocator<multi::thread>&)
 [300] multi::p_::mutex::semantics::semantics() [102] std::system_error::system_error(int, std::_V2::error_category const&) [128] std::tuple_element<0ul, std::tuple<unsigned long> >::type& std::get<0ul, unsigned long>(std::tuple<unsigned long>&)
 [195] multi::p_::id_mirror::create(unsigned long) [276] std::move_iterator<multi::thread*>::move_iterator(multi::thread*) [288] std::tuple_element<0ul, std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type& std::get<0ul, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>&)
 [184] multi::mutex::native_handle() [376] std::move_iterator<multi::thread*>::operator++() [230] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [96] multi::mutex::lock()   [67] std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [289] std::_Bind_helper<std::__or_<std::is_integral<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type>, std::is_enum<std::decay<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type> >::value, void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*> >::type std::bind<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)
  [94] multi::mutex::unlock() [59] std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::_Manager_operation) [37] std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >::value, std::decay, unsigned long&>::type std::bind<main::{lambda(unsigned long)#1}&, unsigned long&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda(unsigned long)#1}&>::type>, std::is_enum<std::decay<main::{lambda(unsigned long)#1}&> > >&&)...)
 [301] multi::mutex::mutex() [191] std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_get_pointer(std::_Any_data const&) [323] std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >::value, std::decay>::type std::bind<main::{lambda()#2}&>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#2}&>::type>, std::is_enum<std::decay<main::{lambda()#2}&> > >&&)...)
 [302] multi::mutex::~mutex() [34] std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long)) [398] std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >::value, std::decay>::type std::bind<main::{lambda()#4}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#4}>::type>, std::is_enum<std::decay<main::{lambda()#4}> > >&&)...)
 [203] multi::thread::id::id(unsigned long) [38] std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_init_functor(std::_Any_data&, main::{lambda(unsigned long)#1} (&&)(unsigned long), std::integral_constant<bool, false>) [399] std::_Bind_helper<std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >::value, std::decay>::type std::bind<main::{lambda()#5}>(std::decay&&, (std::__or_<std::is_integral<std::decay<main::{lambda()#5}>::type>, std::is_enum<std::decay<main::{lambda()#5}> > >&&)...)
 [253] multi::thread::join() [166] bool std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_not_empty_function<main::{lambda(unsigned long)#1} (unsigned long)>(main::{lambda(unsigned long)#1} ( const&)(unsigned long)) [64] std::remove_reference<priorited_function&>::type&& std::move<priorited_function&>(priorited_function&)
 [265] multi::thread::detach() [87] std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_clone(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> > const&, std::integral_constant<bool, false>) [201] std::remove_reference<priorited_function const&>::type&& std::move<priorited_function const&>(priorited_function const&)
 [266] multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [40] std::_Function_base::_Function_base() [400] std::remove_reference<multi::RethrowThreadException&>::type&& std::move<multi::RethrowThreadException&>(multi::RethrowThreadException&)
 [303] multi::thread::thread<main::{lambda()#2}&>(main::{lambda()#2}&) [58] std::_Function_base::~_Function_base() [249] std::remove_reference<priorited_function*&>::type&& std::move<priorited_function*&>(priorited_function*&)
 [354] multi::thread::thread<main::{lambda()#3}&>(main::{lambda()#3}&) [24] std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::pop() [48] std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
 [355] multi::thread::thread<main::{lambda()#4}>(main::{lambda()#4}&&) [7] void std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::emplace<priorited_function>(priorited_function&&) [32] std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&))
 [356] multi::thread::thread<main::{lambda()#5}>(main::{lambda()#5}&&) [139] std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::priority_queue(std::less<priorited_function> const&, std::vector<priorited_function, std::allocator<priorited_function> >&&) [341] std::remove_reference<std::allocator<priorited_function>&>::type&& std::move<std::allocator<priorited_function>&>(std::allocator<priorited_function>&)
 [304] multi::thread::thread(multi::thread&&) [123] std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::~priority_queue() [159] std::remove_reference<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>::type&& std::move<std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>&>(std::remove_reference&&)
 [245] multi::thread::~thread() [277] std::unary_function<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>::unary_function() [168] std::remove_reference<std::tuple<unsigned long>&>::type&& std::move<std::tuple<unsigned long>&>(std::tuple<unsigned long>&)
 [214] std::basic_ostream<char, std::char_traits<char> >& multi::operator<< <char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, multi::thread::id) [237] std::allocator_traits<std::allocator<priorited_function> >::deallocate(std::allocator<priorited_function>&, priorited_function*, unsigned long) [342] std::remove_reference<std::vector<priorited_function, std::allocator<priorited_function> >&>::type&& std::move<std::vector<priorited_function, std::allocator<priorited_function> >&>(std::vector<priorited_function, std::allocator<priorited_function> >&)
 [121] pqueue<priorited_function>::pqueue() [124] void std::allocator_traits<std::allocator<priorited_function> >::destroy<priorited_function>(std::allocator<priorited_function>&, priorited_function*) [290] std::remove_reference<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&>::type&& std::move<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&)
 [122] pqueue<priorited_function>::~pqueue() [238] std::allocator_traits<std::allocator<priorited_function> >::allocate(std::allocator<priorited_function>&, unsigned long) [91] std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&)
 [113] pqueue<priorited_function>::clear() [227] std::allocator_traits<std::allocator<priorited_function> >::max_size(std::allocator<priorited_function> const&) [35] std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&)
 [233] __gnu_cxx::new_allocator<priorited_function>::deallocate(priorited_function*, unsigned long) [30] _ZNSt16allocator_traitsISaI18priorited_functionEE9constructIS0_IS0_EEEvRS1_PT_DpOT0_ [167] std::remove_reference<main::{lambda(unsigned long)#1}&>::type&& std::move<main::{lambda(unsigned long)#1}&>(std::remove_reference&&)
 [125] void __gnu_cxx::new_allocator<priorited_function>::destroy<priorited_function>(priorited_function*) [337] std::allocator_traits<std::allocator<multi::thread> >::deallocate(std::allocator<multi::thread>&, multi::thread*, unsigned long) [401] std::remove_reference<main::{lambda()#4}&>::type&& std::move<main::{lambda()#4}&>(std::remove_reference&&)
 [234] __gnu_cxx::new_allocator<priorited_function>::allocate(unsigned long, void const*) [312] std::allocator_traits<std::allocator<multi::thread> >::allocate(std::allocator<multi::thread>&, unsigned long) [402] std::remove_reference<main::{lambda()#5}&>::type&& std::move<main::{lambda()#5}&>(std::remove_reference&&)
  [33] void __gnu_cxx::new_allocator<priorited_function>::construct<priorited_function, priorited_function>(priorited_function*, priorited_function&&) [257] std::allocator_traits<std::allocator<multi::thread> >::max_size(std::allocator<multi::thread> const&) [187] std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&>::type&& std::move<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&>(std::remove_reference&&)
 [357] __gnu_cxx::new_allocator<priorited_function>::new_allocator(__gnu_cxx::new_allocator<priorited_function> const&) [313] void std::allocator_traits<std::allocator<multi::thread> >::construct<multi::thread, main::{lambda()#2}&>(std::allocator<multi::thread>&, multi::thread*, main::{lambda()#2}&) [291] std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&>::type&& std::move<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&>(std::remove_reference&&)
 [358] __gnu_cxx::new_allocator<priorited_function>::new_allocator() [77] std::_Function_handler<void (), std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)> >::_M_invoke(std::_Any_data const&) [324] void std::swap<priorited_function*>(priorited_function*&, priorited_function*&)
 [331] __gnu_cxx::new_allocator<priorited_function>::~new_allocator() [278] std::_Weak_result_type<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type() [28] void std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
 [332] __gnu_cxx::new_allocator<multi::thread>::deallocate(multi::thread*, unsigned long) [60] std::_Weak_result_type<main::{lambda(unsigned long)#1}>::_Weak_result_type() [16] void std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&))
 [305] __gnu_cxx::new_allocator<multi::thread>::allocate(unsigned long, void const*) [314] std::_Weak_result_type<main::{lambda()#2}>::_Weak_result_type() [23] void std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&)
 [306] void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#2}&>(multi::thread*, main::{lambda()#2}&) [377] std::_Weak_result_type<main::{lambda()#4}>::_Weak_result_type() [103] priorited_function&& std::forward<priorited_function>(std::remove_reference<priorited_function>::type&)
 [359] void __gnu_cxx::new_allocator<multi::thread>::construct<multi::thread, main::{lambda()#3}&>(multi::thread*, main::{lambda()#3}&) [378] std::_Weak_result_type<main::{lambda()#5}>::_Weak_result_type() [250] void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&std::forward<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>(std::remove_reference<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::type&))()
 [360] __gnu_cxx::new_allocator<multi::thread>::new_allocator() [44] priorited_function* std::__uninitialized_copy<false>::__uninit_copy<priorited_function*, priorited_function*>(priorited_function*, priorited_function*, priorited_function*) [343] multi::thread&& std::forward<multi::thread>(std::remove_reference<multi::thread>::type&)
 [361] __gnu_cxx::new_allocator<multi::thread>::~new_allocator() [338] multi::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<multi::thread*>, multi::thread*>(std::move_iterator<multi::thread*>, std::move_iterator<multi::thread*>, multi::thread*) [229] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::type&)
 [158] __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function* const&) [279] std::_Maybe_get_result_type<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>, void>::_Maybe_get_result_type() [173] priorited_function& std::forward<priorited_function&>(std::remove_reference<priorited_function&>::type&)
 [194] __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator--() [160] std::_Maybe_get_result_type<main::{lambda(unsigned long)#1}, void>::_Maybe_get_result_type() [292] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&>::type&)
 [174] __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::__normal_iterator(priorited_function const* const&) [315] std::_Maybe_get_result_type<main::{lambda()#2}, void>::_Maybe_get_result_type() [165] main::{lambda(unsigned long)#1}& std::forward<main::{lambda(unsigned long)#1}&>(std::remove_reference<main::{lambda(unsigned long)#1}&>::type&)
 [333] __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::__normal_iterator(multi::thread* const&) [379] std::_Maybe_get_result_type<main::{lambda()#4}, void>::_Maybe_get_result_type() [239] main::{lambda()#2}& std::forward<main::{lambda()#2}&>(std::remove_reference<main::{lambda()#2}&>::type&)
 [267] __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::operator++() [380] std::_Maybe_get_result_type<main::{lambda()#5}, void>::_Maybe_get_result_type() [344] main::{lambda()#3}& std::forward<main::{lambda()#3}&>(std::remove_reference<main::{lambda()#3}&>::type&)
 [118] __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::_Iter_comp_val(std::less<priorited_function>) [280] std::_Weak_result_type_impl<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> >::_Weak_result_type_impl() [82] unsigned long& std::forward<unsigned long&>(std::remove_reference<unsigned long&>::type&)
  [41] bool __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function>(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, priorited_function&) [71] std::_Weak_result_type_impl<main::{lambda(unsigned long)#1}>::_Weak_result_type_impl() [345] main::{lambda()#4}&& std::forward<main::{lambda()#4}>(std::remove_reference<main::{lambda()#4}>::type&)
 [193] __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::_Iter_comp_iter(std::less<priorited_function>) [316] std::_Weak_result_type_impl<main::{lambda()#2}>::_Weak_result_type_impl() [346] main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&)
  [88] bool __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >::operator()<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >) [381] std::_Weak_result_type_impl<main::{lambda()#3}>::_Weak_result_type_impl() [188] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}>::type&)
 [135] __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(__gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> >) [382] std::_Weak_result_type_impl<main::{lambda()#4}>::_Weak_result_type_impl() [293] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}&& std::forward<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>(std::remove_reference<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}>::type&)
  [89] __gnu_cxx::__ops::_Iter_comp_val<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_val<std::less<priorited_function> >(std::less<priorited_function>) [383] std::_Weak_result_type_impl<main::{lambda()#5}>::_Weak_result_type_impl() [83] unsigned long&& std::forward<unsigned long>(std::remove_reference<unsigned long>::type&)
 [192] __gnu_cxx::__ops::_Iter_comp_iter<std::less<priorited_function> > __gnu_cxx::__ops::__iter_comp_iter<std::less<priorited_function> >(std::less<priorited_function>) [281] std::_Maybe_wrap_member_pointer<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>::__do_wrap(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()) [63] void std::_Destroy<priorited_function>(priorited_function*)
 [212] bool __gnu_cxx::operator==<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [100] std::_Maybe_wrap_member_pointer<main::{lambda(unsigned long)#1}>::__do_wrap({lambda(unsigned long)#1} const&) [258] void std::_Destroy<multi::thread>(multi::thread*)
  [72] __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::difference_type __gnu_cxx::operator-<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > > const&) [317] std::_Maybe_wrap_member_pointer<main::{lambda()#2}>::__do_wrap({lambda()#2} const&) [55] void std::_Destroy<priorited_function*>(priorited_function*, priorited_function*)
 [259] bool __gnu_cxx::operator!=<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >(__gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&, __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > > const&) [384] std::_Maybe_wrap_member_pointer<main::{lambda()#4}>::__do_wrap({lambda()#4}&&) [56] void std::_Destroy<priorited_function*, priorited_function>(priorited_function*, priorited_function*, std::allocator<priorited_function>&)
  [65] priorited_function::priority() const [385] std::_Maybe_wrap_member_pointer<main::{lambda()#5}>::__do_wrap({lambda()#5}&&) [325] void std::_Destroy<multi::thread*>(multi::thread*, multi::thread*)
 [268] multi::unique_lock<multi::mutex>::owns_lock() const [282] std::_Maybe_unary_or_binary_function<void, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::_Maybe_unary_or_binary_function() [294] void std::_Destroy<multi::thread*, multi::thread>(multi::thread*, multi::thread*, std::allocator<multi::thread>&)
 [269] multi::unique_lock<multi::mutex>::operator bool() const [66] std::_Maybe_unary_or_binary_function<void>::_Maybe_unary_or_binary_function() [25] void std::pop_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>)
 [231] multi::thread::joinable() const [19] void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [169] multi::mutex* std::addressof<multi::mutex>(multi::mutex&)
 [199] pqueue<priorited_function>::front() const [283] std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::_Bind<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()>&&, multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [149] void std::make_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>)
 [223] __gnu_cxx::new_allocator<priorited_function>::max_size() const [20] void std::_Bind<std::_Mem_fn<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)()> (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*)>::operator()<, void>() [8] void std::push_heap<__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function> >(__gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >, std::less<priorited_function>)
 [248] __gnu_cxx::new_allocator<multi::thread>::max_size() const [78] void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::__call<void, , 0ul>(std::tuple<>&&, std::_Index_tuple<0ul>) [326] bool std::operator==<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&)
  [93] __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::base() const [49] std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind<unsigned long&>({lambda(unsigned long)#1} const&, unsigned long&) [327] bool std::operator!=<multi::thread*>(std::move_iterator<multi::thread*> const&, std::move_iterator<multi::thread*> const&)
  [69] __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [43] std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::_Bind(main::{lambda(unsigned long)#1} (&&)(unsigned long)) [80] main::{lambda(unsigned long)#1}::operator()(unsigned long) const
  [99] __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator-(long) const [79] void std::_Bind<main::{lambda(unsigned long)#1} (unsigned long)>::operator()<, void>() [4] main::{lambda()#2}::operator()() const
  [70] __gnu_cxx::__normal_iterator<priorited_function*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator+(long) const [3] void std::_Bind<main::{lambda()#2} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [109] main::{lambda()#3}::operator()() const
 [181] __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::base() const [318] std::_Bind<main::{lambda()#2} ()>::_Bind<>({lambda()#2} const&) [142] main::{lambda()#4}::operator()() const
 [208] __gnu_cxx::__normal_iterator<priorited_function const*, std::vector<priorited_function, std::allocator<priorited_function> > >::operator*() const [1] void std::_Bind<main::{lambda()#2} ()>::operator()<, void>() [143] main::{lambda()#5}::operator()() const
 [247] __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::base() const [107] void std::_Bind<main::{lambda()#3} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [261] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::add_thread(unsigned long, bool)::{lambda()#1}::operator()() const
 [270] __gnu_cxx::__normal_iterator<multi::thread*, std::vector<multi::thread, std::allocator<multi::thread> > >::operator*() const [108] void std::_Bind<main::{lambda()#3} ()>::operator()<, void>() [403] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::join()::{lambda()#1}::operator()() const
 [177] std::_Base_bitset<1ul>::_M_is_any() const [386] std::_Bind<main::{lambda()#4} ()>::_Bind<>({lambda()#4}&&) [404] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#1}::operator()() const
  [18] void std::_Mem_fn_base<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), true>::operator()<, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*) const [387] void std::_Bind<main::{lambda()#4} ()>::operator()<, void>() [295] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#1}::operator()() const
 [225] std::_Vector_base<priorited_function, std::allocator<priorited_function> >::_M_get_Tp_allocator() const [140] void std::_Bind<main::{lambda()#5} ()>::__call<void>(std::tuple<>&&, std::_Index_tuple<>) [347] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::clear()::{lambda()#2}::operator()() const
 [254] std::_Vector_base<multi::thread, std::allocator<multi::thread> >::_M_get_Tp_allocator() const [388] std::_Bind<main::{lambda()#5} ()>::_Bind<>({lambda()#5}&&) [175] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#2}::operator()() const
 [251] std::move_iterator<multi::thread*>::base() const [141] void std::_Bind<main::{lambda()#5} ()>::operator()<, void>() [133] multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::routine()::{lambda()#3}::operator()() const
 [307] std::move_iterator<multi::thread*>::operator*() const [61] std::tuple<unsigned long>::tuple(std::tuple<unsigned long>&&) [296] multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::operator void* (*)(void*)() const
 [101] std::_Function_base::_M_empty() const [284] std::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>::tuple<multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*, void>(multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&) [21] multi::thread::thread<void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*>(void (multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>::*&&)(), multi::thread_pool<pqueue<priorited_function>, multi::RethrowThreadException>*&&)::{lambda(void*)#1}::operator()(void*) const
 [202] std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::top() const [68] std::tuple<unsigned long>::tuple<unsigned long&, void>(unsigned long&) [2] _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENKUlPvE_clES9_
 [206] std::priority_queue<priorited_function, std::vector<priorited_function, std::allocator<priorited_function> >, std::less<priorited_function> >::empty() const [209] std::bitset<2ul>::reference::reference(std::bitset<2ul>&, unsigned long) [328] _ZZN5multi6threadC4IRZ4mainEUlvE0_JEEEOT_DpOT0_ENKUlPvE_cvPFS9_S9_EEv
  [50] std::less<priorited_function>::operator()(priorited_function const&, priorited_function const&) const [204] std::bitset<2ul>::reference::~reference() [110] _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENKUlPvE_clES9_
 [176] std::bitset<2ul>::any() const [319] std::bitset<2ul>::reference::operator=(bool) [405] _ZZN5multi6threadC4IRZ4mainEUlvE1_JEEEOT_DpOT0_ENKUlPvE_cvPFS9_S9_EEv
 [211] std::bitset<2ul>::reference::operator bool() const [389] std::bitset<2ul>::bitset() [406] _ZZN5multi6threadC4IZ4mainEUlvE2_JEEEOT_DpOT0_ENKUlPvE_cvPFS8_S8_EEv
 [218] std::chrono::duration<long, std::ratio<1l, 1000000l> >::count() const [198] std::bitset<2ul>::operator[](unsigned long) [144] _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENKUlPvE_clES8_
 [216] std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const [220] std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) [407] _ZZN5multi6threadC4IZ4mainEUlvE3_JEEEOT_DpOT0_ENKUlPvE_cvPFS8_S8_EEv
 [243] std::chrono::duration<long, std::ratio<1l, 1l> >::count() const [246] std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000000l> >, long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [57] operator<(priorited_function const&, priorited_function const&)
 [235] std::vector<priorited_function, std::allocator<priorited_function> >::_M_check_len(unsigned long, char const*) const [241] std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1l> >(std::chrono::duration<long, std::ratio<1l, 1l> > const&) [161] operator new(unsigned long, void*)
 [210] std::vector<priorited_function, std::allocator<priorited_function> >::end() const [217] std::chrono::duration<long, std::ratio<1l, 1000000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000000l> >, std::ratio<1000l, 1l>, long, false, true>::__cast<long, std::ratio<1l, 1000l> >(std::chrono::duration<long, std::ratio<1l, 1000l> > const&)
